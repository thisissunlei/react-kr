{"version":3,"sources":["src/Components/Table/TableBody/index.js"],"names":["TableBody","props","context","toggleInsertElement","bind","createRowElement","renderRows","onCellClick","onCellHover","onCellHoverExit","onRowHover","onRowHoverExit","onRowClick","onOperation","createRowCheckboxColumn","createAjaxRow","createNormalRow","state","showInsertElement","event","hasOwnProperty","target","nodeName","toLowerCase","setState","insertElement","colSpan","type","itemData","rowNumber","rowProps","displayCheckbox","defaultValue","checkboxWidth","selected","key","child","listData","handlers","isRowSelected","visibility","isRowVisibility","children","isValidElement","Children","forEach","push","cloneElement","ajax","map","rows","i","length","element","numChildren","count","setRowTotalCount","parseInt","visibilityRows","selectedRows","className","borderBottom","Component","displayName","PropTypes","string","node","allRowsSelected","bool","array","func","object"],"mappings":"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","file":"index.js","sourceRoot":"/Users/liuyihao/Code/kr-admin","sourcesContent":["import React from 'react';\n\nimport TableRow from '../TableRow';\nimport TableRowColumn from '../TableRowColumn';\n\nimport Checkbox from '../../Checkbox';\n\n\nexport default class TableBody extends React.Component {\n\n\tstatic displayName = 'TableBody';\n\n\tstatic PropTypes = {\n\t\tclassName: React.PropTypes.string,\n\t\tchildren: React.PropTypes.node,\n\t\tinsertElement: React.PropTypes.node,\n\t\tallRowsSelected: React.PropTypes.bool,\n\t\tdisplayCheckbox: React.PropTypes.bool,\n\t\tselectedRows: React.PropTypes.array,\n\t\tvisibilityRows: React.PropTypes.array,\n\t\tsetRowTotalCount: React.PropTypes.func,\n\t\tdefaultValue: React.PropTypes.object,\n\t\tlistData: React.PropTypes.listData,\n\t\tonOperation: React.PropTypes.func,\n\t}\n\n\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.toggleInsertElement = this.toggleInsertElement.bind(this);\n\t\tthis.createRowElement = this.createRowElement.bind(this);\n\n\t\tthis.renderRows = this.renderRows.bind(this);\n\t\tthis.onCellClick = this.onCellClick.bind(this);\n\t\tthis.onCellHover = this.onCellHover.bind(this);\n\t\tthis.onCellHoverExit = this.onCellHoverExit.bind(this);\n\t\tthis.onRowHover = this.onRowHover.bind(this);\n\t\tthis.onRowHoverExit = this.onRowHoverExit.bind(this);\n\t\tthis.onRowClick = this.onRowClick.bind(this);\n\t\tthis.onOperation = this.onOperation.bind(this);\n\n\t\tthis.createRowCheckboxColumn = this.createRowCheckboxColumn.bind(this);\n\n\t\tthis.createAjaxRow = this.createAjaxRow.bind(this);\n\t\tthis.createNormalRow = this.createNormalRow.bind(this);\n\n\t\tthis.state = {\n\t\t\tshowInsertElement: false,\n\t\t}\n\t}\n\n\ttoggleInsertElement(event) {\n\n\t\tif(event&&!event.hasOwnProperty('target')){\n\t\t\t\treturn ;\n\t\t}\n\n\t\tlet target = event&&event.target;\n\t\tlet nodeName =target&&target.nodeName.toLowerCase();\n\n\t\tif (nodeName === 'input') {\n\t\t\treturn false;\n\t\t}\n\t\tthis.setState({\n\t\t\tshowInsertElement: !this.state.showInsertElement\n\t\t});\n\t}\n\n\trenderInsertElement() {\n\n\t\tlet {\n\t\t\tinsertElement,\n\t\t\tcolSpan\n\t\t} = this.props;\n\n\t\tif (!insertElement || !this.state.showInsertElement) {\n\t\t\treturn null ;\n\t\t}\n\t\treturn (\n\t\t\t<TableRow>\n\t\t\t\t<TableRowColumn colSpan={colSpan}> {insertElement} </TableRowColumn>\n\t\t\t</TableRow>\n\t\t)\n\t}\n\n\tonOperation(type, itemData) {\n\t\tconst {\n\t\t\tonOperation\n\t\t} = this.props;\n\t\tonOperation && onOperation(type, itemData);\n\t}\n\n\tonCellClick() {\n\n\t}\n\n\tonCellHover() {\n\n\t}\n\n\tonCellHoverExit() {\n\n\t}\n\n\tonRowHover() {\n\n\t}\n\n\tonRowHoverExit() {\n\n\t}\n\n\tonRowClick(event, rowNumber) {\n\n\t\tconst {\n\t\t\tonRowClick\n\t\t} = this.props;\n\n\t\tonRowClick && onRowClick(event, rowNumber);\n\t\tthis.toggleInsertElement(event);\n\t}\n\n\tcreateRowCheckboxColumn(rowProps) {\n\n\t\tif (!this.props.displayCheckbox) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!rowProps.displayCheckbox && this.props.displayCheckbox) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<TableRowColumn\n\t\t\tcolumnNumber={0}\n\t\t\twidth={this.props.defaultValue.checkboxWidth}\n\t\t\t{...rowProps}\n\t\t\t>\n\t\t\t<Checkbox checked={rowProps.selected}  onCheck={function(event){ rowProps.onRowClick(event,rowProps.key); }} />\n\t\t\t</TableRowColumn>\n\t\t);\n\t}\n\n\n\tcreateRowElement(child, rowNumber) {\n\n\t\tlet {\n\t\t\tlistData,\n\t\t\tdisplayCheckbox\n\t\t} = this.props;\n\n\t\tconst handlers = {\n\t\t\tonCellClick: this.onCellClick,\n\t\t\tonCellHover: this.onCellHover,\n\t\t\tonCellHoverExit: this.onCellHoverExit,\n\t\t\tonRowHover: this.onRowHover,\n\t\t\tonRowHoverExit: this.onRowHoverExit,\n\t\t\tonRowClick: this.onRowClick,\n\t\t\tonOperation: this.onOperation,\n\t\t};\n\n\t\t/*\n\t\tlet displayCheckbox = true;\n\t\tif(child.props && child.props.hasOwnProperty('displayCheckbox')){\n\t\t\tdisplayCheckbox = child.props.displayCheckbox;\n\t\t}\n\t\t*/\n\n\t\tlet itemData = listData[rowNumber] || {};\n\n\t\tlet props = {\n\t\t\tdisplayCheckbox: displayCheckbox,\n\t\t\tkey: rowNumber,\n\t\t\trowNumber: rowNumber,\n\t\t\tselected: this.isRowSelected(rowNumber),\n\t\t\tvisibility: this.isRowVisibility(rowNumber),\n\t\t\titemData,\n\t\t};\n\n\t\tlet children = [\n\t\t\tthis.createRowCheckboxColumn(Object.assign({}, props, handlers)),\n\t\t];\n\n\t\tif(React.isValidElement(child)) {\n\t\t\tReact.Children.forEach(child.props.children, (child) => {\n\t\t\t\tchildren.push(child);\n\t\t\t});\n\t\t\treturn React.cloneElement(child, {\n\t\t\t\t...child.props,\n\t\t\t\t...props,\n\t\t\t\t...handlers\n\t\t\t}, children);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tcreateAjaxRow() {\n\n\t\tlet {\n\t\t\tlistData,\n\t\t\tajax\n\t\t} = this.props;\n\n\n\t\tlet cloneElement;\n\t\tReact.Children.map(this.props.children, (child) => {\n\t\t\tcloneElement = child;\n\t\t});\n\n\t\tlet rows = [];\n\n\t\tfor (var i = 0; i < listData.length; i++) {\n\t\t\tlet element = React.cloneElement(cloneElement, {\n\t\t\t\tkey: i\n\t\t\t});\n\n\t\t\tif(React.isValidElement(element)){\n\t\t\t\trows.push(this.createRowElement(element, i));\n\t\t\t}\n\t\t}\n\n\t\treturn rows;\n\t}\n\n\tcreateNormalRow() {\n\t\tlet rows = [];\n\t\tlet numChildren = React.Children.count(this.props.children);\n\t\tlet {\n\t\t\tdisplayCheckbox,\n\t\t\tsetRowTotalCount\n\t\t} = this.props;\n\t\tlet rowNumber = 0;\n\t\tReact.Children.map(this.props.children, (child) => {\n\t\t\trows.push(this.createRowElement(child, rowNumber++));\n\t\t});\n\t\treturn rows;\n\t}\n\n\trenderRows() {\n\n\t\tlet {\n\t\t\tajax\n\t\t} = this.props;\n\n\t\treturn ajax ? this.createAjaxRow() : this.createNormalRow();\n\t}\n\n\n\tisRowVisibility(rowNumber) {\n\n\n\t\tif (parseInt(this.props.visibilityRows[rowNumber])) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisRowSelected(rowNumber) {\n\t\tif (parseInt(this.props.selectedRows[rowNumber])) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\n\trender() {\n\n\t\tlet {\n\t\t\tclassName\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<tbody  className={className} style={{borderBottom:\"solid 1px #eee\"}}>\n\t\t\t{this.renderRows()}\n\t\t\t{/*this.renderInsertElement()*/}\n\t\t\t</tbody>\n\t\t);\n\n\t}\n}\n\n\n\n/*\n   <tbody className={className} onTouchTap={this.toggleInsertElement}>\n\n*/\n"]}