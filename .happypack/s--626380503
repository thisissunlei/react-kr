'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _KrDate = require('../../KrDate');

var _KrDate2 = _interopRequireDefault(_KrDate);

var _WrapComponent = require('../WrapComponent');

var _WrapComponent2 = _interopRequireDefault(_WrapComponent);

var _Button = require('../../Button');

var _Button2 = _interopRequireDefault(_Button);

require('./index.less');

var _reactTooltip = require('react-tooltip');

var _reactTooltip2 = _interopRequireDefault(_reactTooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LabelTextComponent = function (_React$Component) {
	_inherits(LabelTextComponent, _React$Component);

	function LabelTextComponent(props) {
		_classCallCheck(this, LabelTextComponent);

		return _possibleConstructorReturn(this, (LabelTextComponent.__proto__ || Object.getPrototypeOf(LabelTextComponent)).call(this, props));
	}

	_createClass(LabelTextComponent, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    className = _props.className,
			    label = _props.label,
			    value = _props.value,
			    requireBlue = _props.requireBlue,
			    style = _props.style,
			    defaultValue = _props.defaultValue,
			    type = _props.type,
			    requireLabel = _props.requireLabel,
			    inline = _props.inline,
			    alignRight = _props.alignRight,
			    format = _props.format,
			    href = _props.href,
			    colorStyle = _props.colorStyle,
			    tooltip = _props.tooltip;
			// console.log(value,"LLLLLLL")

			if (tooltip && type != 'date' && type != 'link') {
				return _react2.default.createElement(
					_WrapComponent2.default,
					{ label: label, wrapStyle: style, inline: inline, requireBlue: requireBlue, alignRight: alignRight, requireLabel: requireLabel },
					_react2.default.createElement(
						'span',
						{ className: 'ui-label-text', 'data-tip': true, 'data-for': '' + tooltip },
						' ',
						value || defaultValue,
						_react2.default.createElement(
							_reactTooltip2.default,
							{ id: '' + tooltip },
							_react2.default.createElement(
								'p',
								{ style: { margin: 0 } },
								tooltip
							)
						)
					)
				);
			}
			if (type == 'date') {
				return _react2.default.createElement(
					_WrapComponent2.default,
					{ label: label, wrapStyle: style, requireLabel: requireLabel, inline: inline, requireBlue: requireBlue, alignRight: alignRight },
					_react2.default.createElement(
						'span',
						{ className: 'ui-label-text' },
						_react2.default.createElement(
							'span',
							null,
							_react2.default.createElement(_KrDate2.default, { value: value })
						)
					)
				);
			}

			if (type == 'link') {
				return _react2.default.createElement(
					_WrapComponent2.default,
					{ label: label, wrapStyle: style, requireLabel: requireLabel, inline: inline, requireBlue: requireBlue, alignRight: alignRight },
					_react2.default.createElement(
						'span',
						{ className: 'ui-label-text' },
						_react2.default.createElement(
							'a',
							{ href: href, className: 'label-text-href', title: value },
							value
						)
					)
				);
			}

			return _react2.default.createElement(
				_WrapComponent2.default,
				{ label: label, wrapStyle: style, inline: inline, requireBlue: requireBlue, alignRight: alignRight, requireLabel: requireLabel },
				_react2.default.createElement(
					'span',
					{ className: 'ui-label-text', style: colorStyle },
					value || defaultValue
				)
			);
		}
	}]);

	return LabelTextComponent;
}(_react2.default.Component);

LabelTextComponent.defaultProps = {
	inline: true,
	tooltip: ''
};
LabelTextComponent.PropTypes = {
	inline: _react2.default.PropTypes.bool,
	requireBlue: _react2.default.PropTypes.bool,
	alignRight: _react2.default.PropTypes.bool,
	tooltip: _react2.default.PropTypes.string
};
exports.default = LabelTextComponent;