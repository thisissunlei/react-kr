'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reduxForm = require('redux-form');

var _Redux = require('kr/Redux');

var _fetch = require('kr/Redux/Utils/fetch');

var _fetch2 = _interopRequireDefault(_fetch);

var _krUi = require('kr-ui');

var _NewCreateForm = require('./NewCreateForm');

var _NewCreateForm2 = _interopRequireDefault(_NewCreateForm);

var _ConfirmFormDetail = require('./ConfirmFormDetail');

var _ConfirmFormDetail2 = _interopRequireDefault(_ConfirmFormDetail);

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var JoinCreate = function (_Component) {
	_inherits(JoinCreate, _Component);

	function JoinCreate(props, context) {
		_classCallCheck(this, JoinCreate);

		var _this2 = _possibleConstructorReturn(this, (JoinCreate.__proto__ || Object.getPrototypeOf(JoinCreate)).call(this, props, context));

		_this2.openConfirmCreateDialog = _this2.openConfirmCreateDialog.bind(_this2);
		_this2.onCreateSubmit = _this2.onCreateSubmit.bind(_this2);
		_this2.onCancel = _this2.onCancel.bind(_this2);
		_this2.onConfrimSubmit = _this2.onConfrimSubmit.bind(_this2);

		_this2.state = {
			initialValues: {},
			optionValues: {},
			formValues: {},
			openConfirmCreate: false
		};
		_Redux.Store.dispatch((0, _reduxForm.reset)('reduceCreateForm'));
		return _this2;
	}

	_createClass(JoinCreate, [{
		key: 'onCreateSubmit',
		value: function onCreateSubmit(formValues) {
			console.log("-00000", formValues);
			this.setState({
				formValues: formValues
			});

			// this.onConfrimSubmit();
			this.openConfirmCreateDialog();
		}
	}, {
		key: 'onConfrimSubmit',
		value: function onConfrimSubmit() {
			var formValues = this.state.formValues;
			var params = this.props.params;


			_Redux.Store.dispatch(_Redux.Actions.callAPI('addOrEditContinueContract', {}, formValues)).then(function (response) {
				_krUi.Notify.show([{
					message: '创建成功',
					type: 'success'
				}]);
				location.href = "./#/operation/customerManage/" + params.customerId + "/order/" + params.orderId + "/agreement/renew/" + response.contractId + "/detail";
			}).catch(function (err) {
				_krUi.Notify.show([{
					message: err.message,
					type: 'danger'
				}]);
			});

			//this.openConfirmCreateDialog();
		}
	}, {
		key: 'onCancel',
		value: function onCancel() {
			window.history.back();
		}
	}, {
		key: 'openConfirmCreateDialog',
		value: function openConfirmCreateDialog() {
			this.setState({
				openConfirmCreate: !this.state.openConfirmCreate
			});
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {

			var _this = this;
			var params = this.props.params;

			var initialValues = {};
			var optionValues = {};

			_Redux.Store.dispatch(_Redux.Actions.callAPI('fina-contract-intention', {
				customerId: params.customerId,
				mainBillId: params.orderId,
				communityId: 1
			})).then(function (response) {

				initialValues.contractstate = 'UNSTART';
				initialValues.mainbillid = params.orderId;

				optionValues.communityAddress = response.customer.communityAddress;
				optionValues.leaseAddress = response.customer.customerAddress;
				initialValues.leaseContact = response.customer.customerMember;
				initialValues.leaseContacttel = response.customer.customerPhone;
				//合同类别，枚举类型（1:意向书,2:入住协议,3:增租协议,4.续租协议,5:减租协议,6退租协议）
				initialValues.contracttype = 'RENEW';
				initialValues.leaseAddress = response.customer.customerAddress;

				optionValues.fnaCorporationList = response.fnaCorporation.map(function (item, index) {
					item.value = item.id;
					item.label = item.corporationName;
					return item;
				});
				optionValues.paymentList = response.payment.map(function (item, index) {
					item.value = item.id;
					item.label = item.dicName;
					return item;
				});
				optionValues.payTypeList = response.payType.map(function (item, index) {
					item.value = item.id;
					item.label = item.dicName;
					return item;
				});

				optionValues.floorList = response.customer.floor;
				optionValues.customerName = response.customer.customerName;
				optionValues.leaseAddress = response.customer.customerAddress;
				optionValues.communityName = response.customer.communityName;
				optionValues.communityId = response.customer.communityid;
				optionValues.mainbillCommunityId = response.mainbillCommunityId || 1;

				_this.setState({
					initialValues: initialValues,
					optionValues: optionValues
				});
			}).catch(function (err) {
				_krUi.Notify.show([{
					message: '后台出错请联系管理员',
					type: 'danger'
				}]);
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _state = this.state,
			    initialValues = _state.initialValues,
			    optionValues = _state.optionValues;


			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(_krUi.Title, { value: '\u521B\u5EFA\u7EED\u79DF\u534F\u8BAE\u4E66_\u8D22\u52A1\u7BA1\u7406' }),
				_react2.default.createElement(_krUi.BreadCrumbs, { children: ['系统运营', '客户管理', '创建续租协议书'] }),
				_react2.default.createElement(
					_krUi.Section,
					{ title: '\u7EED\u79DF\u534F\u8BAE\u4E66', description: '' },
					_react2.default.createElement(_NewCreateForm2.default, { onSubmit: this.onCreateSubmit, initialValues: initialValues, onCancel: this.onCancel, optionValues: optionValues })
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u786E\u5B9A\u65B0\u5EFA',
						modal: true,
						autoScrollBodyContent: true,
						autoDetectWindowHeight: true,
						open: this.state.openConfirmCreate, onClose: this.openConfirmCreateDialog },
					_react2.default.createElement(_ConfirmFormDetail2.default, { detail: this.state.formValues, onSubmit: this.onConfrimSubmit, onCancel: this.openConfirmCreateDialog, optionValues: optionValues })
				)
			);
		}
	}]);

	return JoinCreate;
}(_react.Component);

exports.default = JoinCreate;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(JoinCreate, 'JoinCreate', '/Users/liuyihao/Code/kr-admin/src/Containers/Operation/CustomerManage/Agreement/Renew/Create/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,