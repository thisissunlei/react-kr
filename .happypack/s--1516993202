'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _WrapComponent = require('../WrapComponent');

var _WrapComponent2 = _interopRequireDefault(_WrapComponent);

var _Input = require('../../Input');

var _Input2 = _interopRequireDefault(_Input);

var _Tooltip = require('../../Tooltip');

var _Tooltip2 = _interopRequireDefault(_Tooltip);

require('./index.less');

var _reactTooltip = require('react-tooltip');

var _reactTooltip2 = _interopRequireDefault(_reactTooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InputComponent = function (_React$Component) {
	_inherits(InputComponent, _React$Component);

	function InputComponent(props, context) {
		_classCallCheck(this, InputComponent);

		var _this2 = _possibleConstructorReturn(this, (InputComponent.__proto__ || Object.getPrototypeOf(InputComponent)).call(this, props, context));

		_this2.onEdit = function () {
			var oldtext = _this2.state.oldtext;


			_this2.setState({
				editOpen: true
			}, function () {

				document.getElementById('focus').focus();
				document.getElementById('focus').value = oldtext;
				document.getElementsByClassName('contract')[0].style.display = "none";
			});
		};

		_this2.onSave = function () {
			var _this = _this2;
			_this2.setState({
				editOpen: false,
				oldtext: document.getElementById('focus').value
			}, function () {

				document.getElementsByClassName('contract')[0].style.display = "inline-block";

				_this.props.save(_this.state.oldtext);
			});
		};

		_this2.state = {
			editOpen: false,
			oldtext: props.oldText
		};
		return _this2;
	}

	_createClass(InputComponent, [{
		key: 'componentDidMount',
		value: function componentDidMount() {}
	}, {
		key: 'render',
		value: function render() {
			var _React$createElement;

			var _props = this.props,
			    input = _props.input,
			    label = _props.label,
			    type = _props.type,
			    requireLabel = _props.requireLabel,
			    disabled = _props.disabled,
			    placeholder = _props.placeholder,
			    style = _props.style,
			    inline = _props.inline,
			    alignRight = _props.alignRight,
			    simple = _props.simple,
			    heightStyle = _props.heightStyle,
			    tooltip = _props.tooltip,
			    other = _objectWithoutProperties(_props, ['input', 'label', 'type', 'requireLabel', 'disabled', 'placeholder', 'style', 'inline', 'alignRight', 'simple', 'heightStyle', 'tooltip']);

			var className = '';

			return _react2.default.createElement(
				_WrapComponent2.default,
				(_React$createElement = { label: label, wrapStyle: style, requireLabel: requireLabel, inline: inline }, _defineProperty(_React$createElement, 'wrapStyle', style), _defineProperty(_React$createElement, 'alignRight', alignRight), _React$createElement),
				!this.state.editOpen && _react2.default.createElement('span', { className: 'edit', onTouchTap: this.onEdit }),
				this.state.editOpen && _react2.default.createElement('input', { id: 'focus', onBlur: this.onSave, className: className, defaultValue: this.state.oldtext }),
				_react2.default.createElement(
					'span',
					{ className: 'editContent' },
					_react2.default.createElement(
						'span',
						{ className: 'ui-label-text', 'data-tip': true, 'data-for': '' + tooltip },
						_react2.default.createElement(
							_reactTooltip2.default,
							{ id: '' + tooltip },
							_react2.default.createElement(
								'p',
								{ style: { margin: 0 } },
								this.state.oldtext
							)
						),
						_react2.default.createElement(
							'span',
							{ className: 'contract' },
							this.state.oldtext
						)
					)
				)
			);
		}
	}]);

	return InputComponent;
}(_react2.default.Component);

InputComponent.defaultProps = {

	tooltip: ''
};
InputComponent.PropTypes = {
	tooltip: _react2.default.PropTypes.string,
	defaultValue: _react2.default.PropTypes.string,
	ajaxUrlName: _react2.default.PropTypes.string,
	ajaxParams: _react2.default.PropTypes.object

};
exports.default = InputComponent;