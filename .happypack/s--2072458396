'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class;

var _simpleAssign = require('simple-assign');

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Redux = require('kr/Redux');

var _jqueryParam = require('jquery-param');

var _jqueryParam2 = _interopRequireDefault(_jqueryParam);

var _reduxForm = require('redux-form');

var _reactBinding = require('react-binding');

var _reactMixin = require('react-mixin');

var _reactMixin2 = _interopRequireDefault(_reactMixin);

var _reactAddonsLinkedStateMixin = require('react-addons-linked-state-mixin');

var _reactAddonsLinkedStateMixin2 = _interopRequireDefault(_reactAddonsLinkedStateMixin);

var _dateformat = require('dateformat');

var _dateformat2 = _interopRequireDefault(_dateformat);

var _UnitPriceForm = require('./UnitPriceForm');

var _UnitPriceForm2 = _interopRequireDefault(_UnitPriceForm);

var _krUi = require('kr-ui');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NewCreateForm = (_dec = _reactMixin2.default.decorate(_reactAddonsLinkedStateMixin2.default), _dec(_class = function (_Component) {
	_inherits(NewCreateForm, _Component);

	function NewCreateForm(props, context) {
		_classCallCheck(this, NewCreateForm);

		var _this = _possibleConstructorReturn(this, (NewCreateForm.__proto__ || Object.getPrototypeOf(NewCreateForm)).call(this, props, context));

		_this.onCancel = _this.onCancel.bind(_this);
		_this.onSubmit = _this.onSubmit.bind(_this);

		_this.onChangeSearchPersonel = _this.onChangeSearchPersonel.bind(_this);
		return _this;
	}

	_createClass(NewCreateForm, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var initialValues = this.props.initialValues;

			_Redux.Store.dispatch((0, _reduxForm.initialize)('exitCreateForm', initialValues));
		}
	}, {
		key: 'onSubmit',
		value: function onSubmit(form) {
			var changeValues = this.props.changeValues;


			form = (0, _simpleAssign2.default)({}, form);

			form.lessorAddress = changeValues.lessorAddress;
			form.signdate = (0, _dateformat2.default)(form.signdate, "yyyy-mm-dd hh:MM:sss");
			form.leaseBegindate = (0, _dateformat2.default)(form.leaseBegindate, "yyyy-mm-dd hh:MM:ss");
			form.leaseEnddate = (0, _dateformat2.default)(form.leaseEnddate, "yyyy-mm-dd hh:MM:ss");
			form.contractVersionType = 'NEW';
			var onSubmit = this.props.onSubmit;

			onSubmit && onSubmit(form);
		}
	}, {
		key: 'onCancel',
		value: function onCancel() {
			var onCancel = this.props.onCancel;

			onCancel && onCancel();
		}
	}, {
		key: 'getStationUrl',
		value: function getStationUrl() {

			var url = "/krspace_operate_web/commnuity/communityFloorPlan/toCommunityFloorPlanSel?communityId={communityId}&floors={floors}&goalStationNum={goalStationNum}&goalBoardroomNum={goalBoardroomNum}&selectedObjs={selectedObjs}";

			var _props = this.props,
			    changeValues = _props.changeValues,
			    initialValues = _props.initialValues,
			    optionValues = _props.optionValues;
			var stationVos = this.state.stationVos;


			stationVos = stationVos.map(function (item) {
				var obj = {};
				obj.id = item.stationId;
				obj.type = item.stationType;
				return obj;
			});

			var params = {
				communityId: optionValues.mainbillCommunityId,
				floors: changeValues.wherefloor,
				//工位
				goalStationNum: changeValues.stationnum,
				//会议室
				goalBoardroomNum: changeValues.boardroomnum,
				selectedObjs: JSON.stringify(stationVos)
			};

			if (Object.keys(params).length) {
				for (var item in params) {
					if (params.hasOwnProperty(item)) {
						url = url.replace('{' + item + '}', params[item]);
						delete params[item];
					}
				}
			}

			return url;
		}
	}, {
		key: 'onChangeSearchPersonel',
		value: function onChangeSearchPersonel(personel) {
			console.log('personel', personel);
			_Redux.Store.dispatch((0, _reduxForm.change)('exitCreateForm', 'lessorContacttel', personel.mobile));
			_Redux.Store.dispatch((0, _reduxForm.change)('exitCreateForm', 'lessorContactName', personel.lastname));
		}
	}, {
		key: 'render',
		value: function render() {
			var _React$createElement;

			var _props2 = this.props,
			    error = _props2.error,
			    handleSubmit = _props2.handleSubmit,
			    pristine = _props2.pristine,
			    reset = _props2.reset,
			    submitting = _props2.submitting,
			    initialValues = _props2.initialValues,
			    changeValues = _props2.changeValues,
			    optionValues = _props2.optionValues;
			var fnaCorporationList = optionValues.fnaCorporationList;


			fnaCorporationList && fnaCorporationList.map(function (item, index) {
				if (changeValues.leaseId == item.id) {
					changeValues.lessorAddress = item.corporationAddress;
				}
			});

			return _react2.default.createElement(
				_krUi.Paper,
				{ width: 968 },
				_react2.default.createElement(
					'form',
					{ onSubmit: handleSubmit(this.onSubmit), style: { marginTop: 50 } },
					_react2.default.createElement(
						_krUi.CircleStyle,
						{ num: '1', info: '\u5408\u540C\u6587\u672C\u4FE1\u606F', circle: 'bottom' },
						_react2.default.createElement(_krUi.KrField, { name: 'mainbillid', type: 'hidden', component: 'input' }),
						_react2.default.createElement(_krUi.KrField, { name: 'contractstate', type: 'hidden', component: 'input' }),
						_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'contracttype', type: 'hidden', component: 'input' }),
						_react2.default.createElement(_krUi.KrField, { name: 'leaseId', style: { width: 370, marginLeft: 70 }, component: 'select', label: '\u51FA\u79DF\u65B9', options: optionValues.fnaCorporationList, requireLabel: true }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 90 }, name: 'lessorAddress', type: 'text', component: 'labelText', inline: false, label: '\u5730\u5740', value: changeValues.lessorAddress, defaultValue: '\u65E0' }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 70 }, name: 'lessorContactid', component: 'searchPersonel', label: '\u8054\u7CFB\u4EBA', onChange: this.onChangeSearchPersonel, requireLabel: true }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 90 }, name: 'lessorContacttel', type: 'text', component: 'input', label: '\u7535\u8BDD', requireLabel: true,
							requiredValue: true, pattern: /(^((\+86)|(86))?[1][3456789][0-9]{9}$)|(^(0\d{2,3}-\d{7,8})(-\d{1,4})?$)/, errors: { requiredValue: '电话号码为必填项', pattern: '请输入正确电话号' } }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 70 }, component: 'labelText', label: '\u627F\u79DF\u65B9', inline: false, value: optionValues.customerName }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 90 }, name: 'leaseAddress', type: 'text', component: 'input', label: '\u5730\u5740', requireLabel: true,
							requiredValue: true, pattern: /^.{0,120}$/, errors: { requiredValue: '地址为必填项', pattern: '地址最大60位' } }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 70 }, name: 'leaseContact', type: 'text', component: 'input', label: '\u8054\u7CFB\u4EBA', requireLabel: true,
							requiredValue: true, pattern: /^.{0,20}$/, errors: { requiredValue: '联系人为必填项', pattern: '联系人最大20位' } }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 90 }, name: 'leaseContacttel', type: 'text', component: 'input', label: '\u7535\u8BDD', requireLabel: true,
							requiredValue: true, pattern: /(^((\+86)|(86))?[1][3456789][0-9]{9}$)|(^(0\d{2,3}-\d{7,8})(-\d{1,4})?$)/, errors: { requiredValue: '电话号码为必填项', pattern: '请输入正确电话号' } }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 70 }, name: 'communityid', component: 'labelText', label: '\u6240\u5C5E\u793E\u533A', inline: false, value: optionValues.communityName }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 90 }, name: 'communityAddress', component: 'labelText', label: '\u5730\u5740', inline: false, value: optionValues.communityAddress }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 70 }, name: 'contractcode', grid: 1 / 2, type: 'text', component: 'input', label: '\u5408\u540C\u7F16\u53F7', requireLabel: true,
							requiredValue: true, pattern: /^.{0,50}$/, errors: { requiredValue: '合同为必填项', pattern: '合同编号最大50位' } }),
						_react2.default.createElement(_krUi.KrField, { name: 'totalreturn', style: { width: 370, marginLeft: 90 }, type: 'text', component: 'input', label: '\u9000\u79DF\u91D1\u603B\u989D',
							requireLabel: true, requiredValue: true, pattern: /^\d{0,16}(\.\d{0,2})?$/, errors: { requiredValue: '退租金总额为必填项', pattern: '请输入正数金额，小数点后最多两位' } }),
						_react2.default.createElement(_krUi.KrField, (_React$createElement = { name: 'depositamount', style: { width: 370, marginLeft: 70 }, type: 'text', component: 'input', label: '\u9000\u62BC\u91D1\u603B\u989D', requireLabel: true
						}, _defineProperty(_React$createElement, 'requireLabel', true), _defineProperty(_React$createElement, 'requiredValue', true), _defineProperty(_React$createElement, 'pattern', /^\d{0,16}(\.\d{0,2})?$/), _defineProperty(_React$createElement, 'errors', { requiredValue: '退押金总额为必填项', pattern: '请输入正数金额，小数点后最多两位' }), _React$createElement)),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 90 }, name: 'withdrawdate', component: 'date', label: '\u64A4\u573A\u65E5\u671F', requireLabel: true }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 70 }, name: 'signdate', component: 'date', grid: 1 / 2, label: '\u7B7E\u7F72\u65F6\u95F4', requireLabel: true }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 830, marginLeft: 70 }, name: 'contractmark', component: 'textarea', label: '\u5907\u6CE8', maxSize: 200 })
					),
					_react2.default.createElement(_krUi.KrField, { style: { width: 830, marginLeft: 90, marginTop: '-20px' }, name: 'contractFileList', component: 'input', type: 'hidden', label: '\u5408\u540C\u9644\u4EF6' }),
					_react2.default.createElement(_krUi.KrField, { style: { width: 830, marginLeft: 90, marginTop: '-20px' }, name: 'fileIdList', component: 'file', label: '\u5408\u540C\u9644\u4EF6', defaultValue: [], onChange: function onChange(files) {
							_Redux.Store.dispatch((0, _reduxForm.change)('exitCreateForm', 'contractFileList', files));
						} }),
					_react2.default.createElement(
						_krUi.Grid,
						{ style: { paddingBottom: 50 } },
						_react2.default.createElement(
							_krUi.Row,
							null,
							_react2.default.createElement(
								_krUi.ListGroup,
								null,
								_react2.default.createElement(
									_krUi.ListGroupItem,
									{ style: { width: '45%', textAlign: 'right', paddingRight: 15 } },
									_react2.default.createElement(_krUi.Button, { label: '\u786E\u5B9A', type: 'submit', disabled: pristine || submitting, width: 100, height: 40, fontSize: 16 })
								),
								_react2.default.createElement(
									_krUi.ListGroupItem,
									{ style: { width: '45%', textAlign: 'left', paddingLeft: 15 } },
									_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', cancle: true, type: 'button', onTouchTap: this.onCancel, width: 100, height: 40, fontSize: 16 })
								)
							)
						)
					)
				)
			);
		}
	}]);

	return NewCreateForm;
}(_react.Component)) || _class);
NewCreateForm.defaultPropTypes = {
	initialValues: {
		customerName: '',
		communityName: '',
		lessorAddress: '',
		payTypeList: [],
		paymentList: [],
		fnaCorporationList: []
	}
};
NewCreateForm.propTypes = {
	initialValues: _react2.default.PropTypes.object,
	onSubmit: _react2.default.PropTypes.func,
	onCancel: _react2.default.PropTypes.func
};

var validate = function validate(values) {

	var errors = {};

	if (!values.leaseId) {
		errors.leaseId = '请填写出租方';
	}

	if (!values.lessorContactid) {
		errors.lessorContactid = '请填写出租方联系人';
	}

	if (!values.lessorContacttel) {
		errors.lessorContacttel = '请填写出租方联系电话';
	}
	if (!values.leaseAddress) {
		errors.leaseAddress = '请填写承租方地址';
	}

	if (values.leaseAddress && !isNaN(values.leaseAddress)) {
		errors.leaseAddress = '承租方地址不能为数字';
	}

	if (!values.leaseContact) {
		errors.leaseContact = '请填写承租方联系人';
	}

	if (!values.leaseContacttel) {
		errors.leaseContacttel = '请填写承租方联系电话';
	}

	if (!values.contractcode) {
		errors.contractcode = '请填写合同编号';
	}

	if (!values.totalreturn) {
		errors.totalreturn = '请填写退租金总额';
	}

	if (values.totalreturn && isNaN(values.totalreturn)) {
		errors.totalreturn = '退租金总额必须为数字';
	}

	if (!values.depositamount) {
		errors.depositamount = '请填写退押金总额';
	}

	if (values.depositamount && isNaN(values.depositamount)) {
		errors.depositamount = '退押金总额必须为数字';
	}

	if (!values.withdrawdate) {
		errors.withdrawdate = '请填写撤场日期';
	}

	if (!values.signdate) {
		errors.signdate = '请填写签署时间';
	}

	return errors;
};

var selector = (0, _reduxForm.formValueSelector)('exitCreateForm');

NewCreateForm = (0, _reduxForm.reduxForm)({
	form: 'exitCreateForm',
	validate: validate,
	enableReinitialize: true,
	keepDirtyOnReinitialize: true
})(NewCreateForm);

exports.default = (0, _Redux.connect)(function (state) {

	var changeValues = {};

	changeValues.lessorId = selector(state, 'lessorId');
	changeValues.leaseId = selector(state, 'leaseId');
	changeValues.stationnum = selector(state, 'stationnum') || 0;
	changeValues.boardroomnum = selector(state, 'boardroomnum') || 0;
	changeValues.leaseBegindate = selector(state, 'leaseBegindate') || 0;
	changeValues.leaseEnddate = selector(state, 'leaseEnddate') || 0;
	changeValues.wherefloor = selector(state, 'wherefloor') || 0;

	return {
		changeValues: changeValues
	};
})(NewCreateForm);