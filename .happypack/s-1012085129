'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _simpleAssign = require('simple-assign');

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _transitions = require('../styles/transitions');

var _transitions2 = _interopRequireDefault(_transitions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = {
  /**
   * True if the parent `TextField` is disabled.
   */
  disabled: _react.PropTypes.bool,
  /**
   * Override the inline-styles of the underline when parent `TextField` is disabled.
   */
  disabledStyle: _react.PropTypes.object,
  /**
   * True if the parent `TextField` has an error.
   */
  error: _react.PropTypes.bool,
  /**
   * Override the inline-styles of the underline when parent `TextField` has an error.
   */
  errorStyle: _react.PropTypes.object,
  /**
   * True if the parent `TextField` is focused.
   */
  focus: _react.PropTypes.bool,
  /**
   * Override the inline-styles of the underline when parent `TextField` is focused.
   */
  focusStyle: _react.PropTypes.object,
  /**
   * @ignore
   * The material-ui theme applied to this component.
   */
  muiTheme: _react.PropTypes.object.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _react.PropTypes.object
};

var defaultProps = {
  disabled: false,
  disabledStyle: {},
  error: false,
  errorStyle: {},
  focus: false,
  focusStyle: {},
  style: {}
};

var TextFieldUnderline = function TextFieldUnderline(props) {
  var disabled = props.disabled,
      disabledStyle = props.disabledStyle,
      error = props.error,
      errorStyle = props.errorStyle,
      focus = props.focus,
      focusStyle = props.focusStyle,
      muiTheme = props.muiTheme,
      style = props.style;
  var errorStyleColor = errorStyle.color;
  var prepareStyles = muiTheme.prepareStyles,
      _muiTheme$textField = muiTheme.textField,
      borderColor = _muiTheme$textField.borderColor,
      disabledTextColor = _muiTheme$textField.disabledTextColor,
      errorColor = _muiTheme$textField.errorColor,
      focusColor = _muiTheme$textField.focusColor;


  var styles = {
    root: {
      border: 'none',
      borderBottom: 'solid 1px',
      borderColor: borderColor,
      bottom: 8,
      boxSizing: 'content-box',
      margin: 0,
      position: 'absolute',
      width: '100%'
    },
    disabled: {
      borderBottom: 'dotted 2px',
      borderColor: disabledTextColor
    },
    focus: {
      borderBottom: 'solid 2px',
      borderColor: focusColor,
      transform: 'scaleX(0)',
      transition: _transitions2.default.easeOut()
    },
    error: {
      borderColor: errorStyleColor ? errorStyleColor : errorColor,
      transform: 'scaleX(1)'
    }
  };

  var underline = (0, _simpleAssign2.default)({}, styles.root, style);
  var focusedUnderline = (0, _simpleAssign2.default)({}, underline, styles.focus, focusStyle);

  if (disabled) underline = (0, _simpleAssign2.default)({}, underline, styles.disabled, disabledStyle);
  if (focus) focusedUnderline = (0, _simpleAssign2.default)({}, focusedUnderline, { transform: 'scaleX(1)' });
  if (error) focusedUnderline = (0, _simpleAssign2.default)({}, focusedUnderline, styles.error);

  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement('hr', { style: prepareStyles(underline) }),
    _react2.default.createElement('hr', { style: prepareStyles(focusedUnderline) })
  );
};

TextFieldUnderline.propTypes = propTypes;
TextFieldUnderline.defaultProps = defaultProps;

var _default = TextFieldUnderline;
exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(propTypes, 'propTypes', '/Users/tmac_zc/Code/kr-admin/src/Components/DatePicker/TextField/TextFieldUnderline.js');

  __REACT_HOT_LOADER__.register(defaultProps, 'defaultProps', '/Users/tmac_zc/Code/kr-admin/src/Components/DatePicker/TextField/TextFieldUnderline.js');

  __REACT_HOT_LOADER__.register(TextFieldUnderline, 'TextFieldUnderline', '/Users/tmac_zc/Code/kr-admin/src/Components/DatePicker/TextField/TextFieldUnderline.js');

  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/tmac_zc/Code/kr-admin/src/Components/DatePicker/TextField/TextFieldUnderline.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Db21wb25lbnRzL0RhdGVQaWNrZXIvVGV4dEZpZWxkL1RleHRGaWVsZFVuZGVybGluZS5qcyJdLCJuYW1lcyI6WyJwcm9wVHlwZXMiLCJkaXNhYmxlZCIsImJvb2wiLCJkaXNhYmxlZFN0eWxlIiwib2JqZWN0IiwiZXJyb3IiLCJlcnJvclN0eWxlIiwiZm9jdXMiLCJmb2N1c1N0eWxlIiwibXVpVGhlbWUiLCJpc1JlcXVpcmVkIiwic3R5bGUiLCJkZWZhdWx0UHJvcHMiLCJUZXh0RmllbGRVbmRlcmxpbmUiLCJwcm9wcyIsImVycm9yU3R5bGVDb2xvciIsImNvbG9yIiwicHJlcGFyZVN0eWxlcyIsInRleHRGaWVsZCIsImJvcmRlckNvbG9yIiwiZGlzYWJsZWRUZXh0Q29sb3IiLCJlcnJvckNvbG9yIiwiZm9jdXNDb2xvciIsInN0eWxlcyIsInJvb3QiLCJib3JkZXIiLCJib3JkZXJCb3R0b20iLCJib3R0b20iLCJib3hTaXppbmciLCJtYXJnaW4iLCJwb3NpdGlvbiIsIndpZHRoIiwidHJhbnNmb3JtIiwidHJhbnNpdGlvbiIsImVhc2VPdXQiLCJ1bmRlcmxpbmUiLCJmb2N1c2VkVW5kZXJsaW5lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsWUFBWTtBQUNoQjs7O0FBR0FDLFlBQVUsaUJBQVVDLElBSko7QUFLaEI7OztBQUdBQyxpQkFBZSxpQkFBVUMsTUFSVDtBQVNoQjs7O0FBR0FDLFNBQU8saUJBQVVILElBWkQ7QUFhaEI7OztBQUdBSSxjQUFZLGlCQUFVRixNQWhCTjtBQWlCaEI7OztBQUdBRyxTQUFPLGlCQUFVTCxJQXBCRDtBQXFCaEI7OztBQUdBTSxjQUFZLGlCQUFVSixNQXhCTjtBQXlCaEI7Ozs7QUFJQUssWUFBVSxpQkFBVUwsTUFBVixDQUFpQk0sVUE3Qlg7QUE4QmhCOzs7QUFHQUMsU0FBTyxpQkFBVVA7QUFqQ0QsQ0FBbEI7O0FBb0NBLElBQU1RLGVBQWU7QUFDbkJYLFlBQVUs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Ozs7Ozs7O2dDQXJIVGIsUzs7Z0NBb0NBWSxZOztnQ0FVQUMsa0IiLCJmaWxlIjoiVGV4dEZpZWxkVW5kZXJsaW5lLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90bWFjX3pjL0NvZGUva3ItYWRtaW4iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHtQcm9wVHlwZXN9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0cmFuc2l0aW9ucyBmcm9tICcuLi9zdHlsZXMvdHJhbnNpdGlvbnMnO1xuXG5jb25zdCBwcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBUcnVlIGlmIHRoZSBwYXJlbnQgYFRleHRGaWVsZGAgaXMgZGlzYWJsZWQuXG4gICAqL1xuICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG4gIC8qKlxuICAgKiBPdmVycmlkZSB0aGUgaW5saW5lLXN0eWxlcyBvZiB0aGUgdW5kZXJsaW5lIHdoZW4gcGFyZW50IGBUZXh0RmllbGRgIGlzIGRpc2FibGVkLlxuICAgKi9cbiAgZGlzYWJsZWRTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgLyoqXG4gICAqIFRydWUgaWYgdGhlIHBhcmVudCBgVGV4dEZpZWxkYCBoYXMgYW4gZXJyb3IuXG4gICAqL1xuICBlcnJvcjogUHJvcFR5cGVzLmJvb2wsXG4gIC8qKlxuICAgKiBPdmVycmlkZSB0aGUgaW5saW5lLXN0eWxlcyBvZiB0aGUgdW5kZXJsaW5lIHdoZW4gcGFyZW50IGBUZXh0RmllbGRgIGhhcyBhbiBlcnJvci5cbiAgICovXG4gIGVycm9yU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIC8qKlxuICAgKiBUcnVlIGlmIHRoZSBwYXJlbnQgYFRleHRGaWVsZGAgaXMgZm9jdXNlZC5cbiAgICovXG4gIGZvY3VzOiBQcm9wVHlwZXMuYm9vbCxcbiAgLyoqXG4gICAqIE92ZXJyaWRlIHRoZSBpbmxpbmUtc3R5bGVzIG9mIHRoZSB1bmRlcmxpbmUgd2hlbiBwYXJlbnQgYFRleHRGaWVsZGAgaXMgZm9jdXNlZC5cbiAgICovXG4gIGZvY3VzU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqIFRoZSBtYXRlcmlhbC11aSB0aGVtZSBhcHBsaWVkIHRvIHRoaXMgY29tcG9uZW50LlxuICAgKi9cbiAgbXVpVGhlbWU6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgLyoqXG4gICAqIE92ZXJyaWRlIHRoZSBpbmxpbmUtc3R5bGVzIG9mIHRoZSByb290IGVsZW1lbnQuXG4gICAqL1xuICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbn07XG5cbmNvbnN0IGRlZmF1bHRQcm9wcyA9IHtcbiAgZGlzYWJsZWQ6IGZhbHNlLFxuICBkaXNhYmxlZFN0eWxlOiB7fSxcbiAgZXJyb3I6IGZhbHNlLFxuICBlcnJvclN0eWxlOiB7fSxcbiAgZm9jdXM6IGZhbHNlLFxuICBmb2N1c1N0eWxlOiB7fSxcbiAgc3R5bGU6IHt9LFxufTtcblxuY29uc3QgVGV4dEZpZWxkVW5kZXJsaW5lID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBkaXNhYmxlZCxcbiAgICBkaXNhYmxlZFN0eWxlLFxuICAgIGVycm9yLFxuICAgIGVycm9yU3R5bGUsXG4gICAgZm9jdXMsXG4gICAgZm9jdXNTdHlsZSxcbiAgICBtdWlUaGVtZSxcbiAgICBzdHlsZSxcbiAgfSA9IHByb3BzO1xuXG4gIGNvbnN0IHtcbiAgICBjb2xvcjogZXJyb3JTdHlsZUNvbG9yLFxuICB9ID0gZXJyb3JTdHlsZTtcblxuICBjb25zdCB7XG4gICAgcHJlcGFyZVN0eWxlcyxcbiAgICB0ZXh0RmllbGQ6IHtcbiAgICAgIGJvcmRlckNvbG9yLFxuICAgICAgZGlzYWJsZWRUZXh0Q29sb3IsXG4gICAgICBlcnJvckNvbG9yLFxuICAgICAgZm9jdXNDb2xvcixcbiAgICB9LFxuICB9ID0gbXVpVGhlbWU7XG5cbiAgY29uc3Qgc3R5bGVzID0ge1xuICAgIHJvb3Q6IHtcbiAgICAgIGJvcmRlcjogJ25vbmUnLFxuICAgICAgYm9yZGVyQm90dG9tOiAnc29saWQgMXB4JyxcbiAgICAgIGJvcmRlckNvbG9yOiBib3JkZXJDb2xvcixcbiAgICAgIGJvdHRvbTogOCxcbiAgICAgIGJveFNpemluZzogJ2NvbnRlbnQtYm94JyxcbiAgICAgIG1hcmdpbjogMCxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICB9LFxuICAgIGRpc2FibGVkOiB7XG4gICAgICBib3JkZXJCb3R0b206ICdkb3R0ZWQgMnB4JyxcbiAgICAgIGJvcmRlckNvbG9yOiBkaXNhYmxlZFRleHRDb2xvcixcbiAgICB9LFxuICAgIGZvY3VzOiB7XG4gICAgICBib3JkZXJCb3R0b206ICdzb2xpZCAycHgnLFxuICAgICAgYm9yZGVyQ29sb3I6IGZvY3VzQ29sb3IsXG4gICAgICB0cmFuc2Zvcm06ICdzY2FsZVgoMCknLFxuICAgICAgdHJhbnNpdGlvbjogdHJhbnNpdGlvbnMuZWFzZU91dCgpLFxuICAgIH0sXG4gICAgZXJyb3I6IHtcbiAgICAgIGJvcmRlckNvbG9yOiBlcnJvclN0eWxlQ29sb3IgPyBlcnJvclN0eWxlQ29sb3IgOiBlcnJvckNvbG9yLFxuICAgICAgdHJhbnNmb3JtOiAnc2NhbGVYKDEpJyxcbiAgICB9LFxuICB9O1xuXG4gIGxldCB1bmRlcmxpbmUgPSBPYmplY3QuYXNzaWduKHt9LCBzdHlsZXMucm9vdCwgc3R5bGUpO1xuICBsZXQgZm9jdXNlZFVuZGVybGluZSA9IE9iamVjdC5hc3NpZ24oe30sIHVuZGVybGluZSwgc3R5bGVzLmZvY3VzLCBmb2N1c1N0eWxlKTtcblxuICBpZiAoZGlzYWJsZWQpIHVuZGVybGluZSA9IE9iamVjdC5hc3NpZ24oe30sIHVuZGVybGluZSwgc3R5bGVzLmRpc2FibGVkLCBkaXNhYmxlZFN0eWxlKTtcbiAgaWYgKGZvY3VzKSBmb2N1c2VkVW5kZXJsaW5lID0gT2JqZWN0LmFzc2lnbih7fSwgZm9jdXNlZFVuZGVybGluZSwge3RyYW5zZm9ybTogJ3NjYWxlWCgxKSd9KTtcbiAgaWYgKGVycm9yKSBmb2N1c2VkVW5kZXJsaW5lID0gT2JqZWN0LmFzc2lnbih7fSwgZm9jdXNlZFVuZGVybGluZSwgc3R5bGVzLmVycm9yKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8aHIgc3R5bGU9e3ByZXBhcmVTdHlsZXModW5kZXJsaW5lKX0gLz5cbiAgICAgIDxociBzdHlsZT17cHJlcGFyZVN0eWxlcyhmb2N1c2VkVW5kZXJsaW5lKX0gLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cblRleHRGaWVsZFVuZGVybGluZS5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG5UZXh0RmllbGRVbmRlcmxpbmUuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuXG5leHBvcnQgZGVmYXVsdCBUZXh0RmllbGRVbmRlcmxpbmU7XG4iXX0=