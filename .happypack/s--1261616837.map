{"version":3,"sources":["src/Components/Divider/index.js"],"names":["Divider","props","context","inset","style","other","muiTheme","baseTheme","prepareStyles","styles","root","margin","marginTop","marginLeft","height","border","backgroundColor","palette","borderColor","muiName","propTypes","bool","object","defaultProps","contextTypes","isRequired"],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;AAEA,IAAMA,UAAU,SAAVA,OAAU,CAACC,KAAD,EAAQC,OAAR,EAAoB;AAAA,MAEhCC,KAFgC,GAK9BF,KAL8B,CAEhCE,KAFgC;AAAA,MAGhCC,KAHgC,GAK9BH,KAL8B,CAGhCG,KAHgC;AAAA,MAI7BC,KAJ6B,4BAK9BJ,KAL8B;;AAAA,0BAU9BC,QAAQI,QAVsB;AAAA,MAQhCC,SARgC,qBAQhCA,SARgC;AAAA,MAShCC,aATgC,qBAShCA,aATgC;;;AAYlC,MAAMC,SAAS;AACbC,UAAM;AACJC,cAAQ,CADJ;AAEJC,iBAAW,CAAC,CAFR;AAGJC,kBAAYV,QAAQ,EAAR,GAAa,CAHrB;AAIJW,cAAQ,CAJJ;AAKJC,cAAQ,MALJ;AAMJC,uBAAiBT,UAAUU,OAAV,CAAkBC;AAN/B;AADO,GAAf;;AAWA,SACE,iDAAQb,KAAR,IAAe,OAAOG,cAAc,4BAAcC,OAAOC,IAArB,EAA2BN,KAA3B,CAAd,CAAtB,IADF;AAGD,CA1BD;;AA4BAJ,QAAQmB,OAAR,GAAkB,SAAlB;;AAEAnB,QAAQoB,SAAR,GAAoB;AAClB;;;AAGAjB,SAAO,iBAAUkB,IAJC;AAKlB;;;AAGAjB,SAAO,iBAAUkB;AARC,CAApB;;AAWAtB,QAAQuB,YAAR,GAAuB;AACrBpB,SAAO;AADc,CAAvB;;AAIAH,QAAQwB,YAAR,GAAuB;AACrBlB,YAAU,iBAAUgB,MAAV,CAAiBG;AADN,CAAvB;;eAIezB,O;;;;;;;;;gCAjDTA,O","file":"index.js","sourceRoot":"/Users/tmac_zc/Code/kr-admin","sourcesContent":["import React, {PropTypes} from 'react';\n\nconst Divider = (props, context) => {\n  const {\n    inset,\n    style,\n    ...other\n  } = props;\n\n  const {\n    baseTheme,\n    prepareStyles,\n  } = context.muiTheme;\n\n  const styles = {\n    root: {\n      margin: 0,\n      marginTop: -1,\n      marginLeft: inset ? 72 : 0,\n      height: 1,\n      border: 'none',\n      backgroundColor: baseTheme.palette.borderColor,\n    },\n  };\n\n  return (\n    <hr {...other} style={prepareStyles(Object.assign(styles.root, style))} />\n  );\n};\n\nDivider.muiName = 'Divider';\n\nDivider.propTypes = {\n  /**\n   * If true, the `Divider` will be indented.\n   */\n  inset: PropTypes.bool,\n  /**\n   * Override the inline-styles of the root element.\n   */\n  style: PropTypes.object,\n};\n\nDivider.defaultProps = {\n  inset: false,\n};\n\nDivider.contextTypes = {\n  muiTheme: PropTypes.object.isRequired,\n};\n\nexport default Divider;\n"]}