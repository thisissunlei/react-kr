'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Redux = require('kr/Redux');

var _reduxForm = require('redux-form');

var _Utils = require('kr/Utils');

var _krUi = require('kr-ui');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EditEquipmentForm = function (_Component) {
	_inherits(EditEquipmentForm, _Component);

	function EditEquipmentForm(props, context) {
		var _this2$state;

		_classCallCheck(this, EditEquipmentForm);

		var _this2 = _possibleConstructorReturn(this, (EditEquipmentForm.__proto__ || Object.getPrototypeOf(EditEquipmentForm)).call(this, props, context));

		_this2.getBasicData = function (detail) {
			var _this = _this2;
			var SearchLocationParams = { communityId: detail.communityId, whereFloor: detail.floor };
			_Redux.Store.dispatch(_Redux.Actions.callAPI('getLocationByProperty', SearchLocationParams)).then(function (response) {
				var locationArr = [];
				for (var i = 0; i < response.length; i++) {
					locationArr[i] = { label: response[i].boardroomname, value: response[i].id };
				}
				_this.setState({
					locationOptions: locationArr
				});
			});
			_Redux.Store.dispatch(_Redux.Actions.callAPI('getFloorByComunity', { communityId: detail.communityId })).then(function (response) {
				// console.log("getFloorByComunity response",response);
				var arrNew = [];
				for (var i = 0; i < response.whereFloors.length; i++) {
					arrNew[i] = { label: response.whereFloors[i], value: response.whereFloors[i] };
				}
				_this.setState({
					floorsOptions: arrNew,
					floor: detail.floor,
					communityId: detail.communityId,
					propertyOption: [{ label: '大门', value: 1 }, { label: '会议室', value: 2 }, { label: '独立办公室', value: 3 }]
				});
			}).catch(function (err) {});

			_this.setState({
				id: detail.id
			});

			if (detail.propertyId && detail.propertyId !== 1) {
				_this.setState({
					locationOpen: !_this.state.locationOpen
				});
			}
			_Redux.Store.dispatch((0, _reduxForm.initialize)('EditEquipmentForm', detail));
		};

		_this2.onCancel = function () {
			var onCancel = _this2.props.onCancel;

			onCancel && onCancel();
		};

		_this2.onChangeSearchCommunity = function (community) {
			_Redux.Store.dispatch((0, _reduxForm.change)('EditEquipmentForm', 'floor', ""));
			_Redux.Store.dispatch((0, _reduxForm.change)('EditEquipmentForm', 'propertyId', ""));
			_Redux.Store.dispatch((0, _reduxForm.change)('EditEquipmentForm', 'locationId', ""));
			_this2.setState({
				locationOpen: false
			});
			var _this = _this2;
			if (community == null) {
				_this.setState({
					locationOpen: false,
					floorsOptions: []
				});
				_Redux.Store.dispatch((0, _reduxForm.change)('EditEquipmentForm', 'propertyId', ""));
				return;
			}
			var CommunityId = {
				communityId: community.id
			};
			_this2.setState({
				communityId: community.id,
				locationOpen: false
			});
			_Redux.Store.dispatch((0, _reduxForm.change)('EditEquipmentForm', 'communityId', community.communityId));
			_this2.getFloorByComunityFun(CommunityId);
		};

		_this2.getFloorByComunityFun = function (CommunityId) {
			var _this = _this2;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('getFloorByComunity', CommunityId)).then(function (response) {
				var arrNew = [];
				for (var i = 0; i < response.whereFloors.length; i++) {
					arrNew[i] = { label: response.whereFloors[i], value: response.whereFloors[i] };
				}
				_this.setState({
					floorsOptions: arrNew
				});
			}).catch(function (err) {});
		};

		_this2.onchooseType = function (typeId) {
			if (typeId == null) {
				return;
			} else {
				_this2.setState({
					typeId: typeId.value
				});
			}
			_Redux.Store.dispatch((0, _reduxForm.change)('EditEquipmentForm', 'typeId', typeId.value));
		};

		_this2.onchooseProperty = function (propertyId) {
			var _this = _this2;
			if (propertyId == null) {
				_this.setState({
					locationOpen: false,
					propertyOption: [{ label: '大门', value: 1 }, { label: '会议室', value: 2 }, { label: '独立办公室', value: 3 }]

				});
				return;
			}
			if (propertyId.value == "2" || propertyId.value == "3") {
				_this.setState({
					locationOpen: true,
					propertyId: propertyId.value,
					propertyOption: [{ label: '大门', value: 1 }, { label: '会议室', value: 2 }, { label: '独立办公室', value: 3 }]

				});
				var SearchLocationParams = { communityId: _this.state.communityId, whereFloor: _this.state.floor };
				_Redux.Store.dispatch(_Redux.Actions.callAPI('getLocationByProperty', SearchLocationParams)).then(function (response) {
					var locationArr = [];
					for (var i = 0; i < response.length; i++) {
						locationArr[i] = { label: response[i].boardroomname, value: response[i].id };
					}
					_this.setState({
						locationOptions: locationArr
					});
				});
			} else {
				_this.setState({
					locationOpen: false,
					propertyId: propertyId.value,
					propertyOption: [{ label: '大门', value: 1 }, { label: '会议室', value: 2 }, { label: '独立办公室', value: 3 }]

				});
			}
			_Redux.Store.dispatch((0, _reduxForm.change)('EditEquipmentForm', 'propertyId', propertyId.value));
			_Redux.Store.dispatch((0, _reduxForm.change)('EditEquipmentForm', 'locationId', ""));
			// 		this.setState({
			// 	statusClick : 1
			// })
		};

		_this2.onchooseCorrespondingFunction = function (functionId) {
			if (functionId == null) {
				return;
			}
			_this2.setState({
				functionId: functionId.value
			});

			_Redux.Store.dispatch((0, _reduxForm.change)('EditEquipmentForm', 'functionId', functionId.value));
		};

		_this2.onchooseCorrespondingLocation = function (locationId) {
			if (locationId == null) {
				return;
			}
			_this2.setState({
				locationId: locationId.value
			});
			_Redux.Store.dispatch((0, _reduxForm.change)('EditEquipmentForm', 'locationId', locationId.value));
		};

		_this2.getFloor = function (floor) {
			var _this = _this2;
			if (!floor) {
				_this.setState({
					propertyOption: [{ label: '', value: '' }],
					locationOpen: false
				});
				_Redux.Store.dispatch((0, _reduxForm.change)('EditEquipmentForm', 'propertyId', ""));
			} else {
				_this.setState({
					floor: floor.value,
					propertyOption: [{ label: '大门', value: 1 }, { label: '会议室', value: 2 }, { label: '独立办公室', value: 3 }]
				});
			}
		};

		_this2.onChangeTitle = function (showTitle) {
			_Redux.Store.dispatch((0, _reduxForm.change)('EditEquipmentForm', 'showTitle', showTitle));
			_this2.setState({
				showTitle: showTitle
			});
		};

		_this2.doorNumHasFun = function (deviceCode) {
			if (!deviceCode || /^\s+$/.test(deviceCode)) {
				return;
			}
			var _this = _this2;
			var params = {
				code: deviceCode,
				type: "deviceCode",
				id: _this2.detail.id
			};
			_Redux.Store.dispatch(_Redux.Actions.callAPI('doorNumberAndHardwareId', params)).then(function (response) {
				_this.setState({
					doorNumHasStatus: false
				});
			}).catch(function (err) {
				var isDoorNumHas = _this.props.isDoorNumHas;

				isDoorNumHas && isDoorNumHas();
				_this.setState({
					doorNumHas: true,
					doorNumHasStatus: true
				});
			});
		};

		_this2.hardwareIdHasFun = function (hardwareId) {
			var _this = _this2;
			_this2.setState({
				hardwareidHasStatus: false,
				hardwareId: hardwareId
			});
			if (!hardwareId || /^\s+$/.test(hardwareId)) {
				return;
			}
			var hardwareIdparams = {
				code: hardwareId,
				type: "hardwareid",
				id: _this2.detail.id
			};
			_Redux.Store.dispatch(_Redux.Actions.callAPI('doorNumberAndHardwareId', hardwareIdparams)).then(function (response) {
				_this.setState({
					hardwareidHasStatus: false,
					defaultChecked: true
				});
			}).catch(function (err) {
				var hardwareIdHas = _this.props.hardwareIdHas;

				hardwareIdHas && hardwareIdHas();
				_this.setState({
					hardwareidHasStatus: true,
					defaultChecked: true
				});
			});
		};

		_this2.chooseONLINE = function (e) {
			_this2.setState({
				isOnlines: !_this2.state.isOnlines
			}, function () {
				_Redux.Store.dispatch((0, _reduxForm.change)('EditEquipmentForm', 'enable', this.state.isOnlines));
			});
		};

		_this2.onSubmit = function (values) {
			values.id = _this2.state.id;
			var _this = _this2;
			values.enable = _this2.state.isOnlines ? "ONLINE" : "OFFLINE";
			// if(this.state.doorNumHasStatus){
			// 	let {isDoorNumHas} =this.props;
			// 	isDoorNumHas && isDoorNumHas();
			// 	return;
			// }
			// if(this.state.hardwareidHasStatus){
			// 	let {hardwareIdHas} =this.props;
			// 	hardwareIdHas && hardwareIdHas();
			// 	return;
			// }
			var EditParams = {
				communityId: values.communityId,
				deviceCode: values.deviceCode,
				enable: values.enable,
				floor: values.floor,
				functionId: values.functionId,
				hardwareId: values.hardwareId,
				id: values.id,
				locationId: values.locationId,
				propertyId: values.propertyId,
				showTitle: values.showTitle,
				typeId: values.typeId
			};
			// 此处判断门编号是否存在
			var deviceCodeParams = {
				code: values.deviceCode,
				type: "deviceCode",
				id: values.id
			};
			var hardwareIdParams = {
				code: values.hardwareId,
				type: "hardwareid",
				id: values.id
			};
			_Redux.Store.dispatch(_Redux.Actions.callAPI('doorNumberAndHardwareId', deviceCodeParams)).then(function (response) {
				console.log("门编号不存在");
				_Redux.Store.dispatch(_Redux.Actions.callAPI('doorNumberAndHardwareId', hardwareIdParams)).then(function (response) {

					console.log("硬件ID不存在");
					var onSubmit = _this.props.onSubmit;

					onSubmit && onSubmit(EditParams);
				}).catch(function (err) {
					console.log("硬件ID存在");
					var hardwareIdHas = _this.props.hardwareIdHas;

					hardwareIdHas && hardwareIdHas();
				});
			}).catch(function (err) {
				console.log("门编号存在");
				var isDoorNumHas = _this.props.isDoorNumHas;

				isDoorNumHas && isDoorNumHas();
			});
		};

		_this2.closeEditEquipment = function () {
			var closeEditEquipment = _this2.props.closeEditEquipment;

			closeEditEquipment && closeEditEquipment();
		};

		_this2.detail = _this2.props.detail;
		_this2.state = (_this2$state = {
			locationOpen: false,
			floorsOptions: [],
			locationOptions: [],
			confirmSubmit: false,
			doorNumHas: false,
			communityId: '',
			propertyOption: [{ label: "", value: "" }],
			propertyId: "",
			hardwareidHas: false,
			isOnlines: true,
			showTitle: '',
			hardwareId: '',
			typeId: '',
			startDeviceCode: '',
			startHardwareId: ''
		}, _defineProperty(_this2$state, 'propertyId', ''), _defineProperty(_this2$state, 'functionId', ''), _defineProperty(_this2$state, 'locationId', ''), _defineProperty(_this2$state, 'id', ''), _defineProperty(_this2$state, 'initializeValues', {}), _defineProperty(_this2$state, 'isNewAndAdd', false), _this2$state);
		return _this2;
	}
	//首次加载，只执行一次


	_createClass(EditEquipmentForm, [{
		key: 'componentWillMount',
		value: function componentWillMount() {
			this.getBasicData(this.detail);
		}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			if (!(0, _Utils.ShallowEqual)(this.state.initializeValues, nextProps.detail)) {
				this.setState({
					initializeValues: nextProps.detail
				});
			}
		}
		// 社区模糊查询

		// 根据社区Id获取楼层

		//选择类型

		//选择属性(获取会议室／大门)

		//选择对应功能

		// 选择对应位置

		// 选择楼层

		// 判断门编号是否存在

		// 判断智能硬件ID是否存在

		// 是否上线

		// 编辑设备定义

		// 关闭编辑窗口

	}, {
		key: 'render',
		value: function render() {
			var _state = this.state,
			    floorsOptions = _state.floorsOptions,
			    propertyOption = _state.propertyOption,
			    propertyId = _state.propertyId,
			    locationOptions = _state.locationOptions,
			    defaultChecked = _state.defaultChecked;
			var _props = this.props,
			    error = _props.error,
			    handleSubmit = _props.handleSubmit,
			    pristine = _props.pristine,
			    reset = _props.reset,
			    detail = _props.detail;
			// 类型待选项

			var typeOptions = [{
				label: '门禁',
				value: 1
			}];
			// 对应功能选项
			var correspondingFunction = [{
				label: '开门',
				value: 1
			}, {
				label: '开门／预定',
				value: 2
			}, {
				label: '预定',
				value: 3
			}];
			return _react2.default.createElement(
				'div',
				{ style: { padding: '35px 0 0 35px' } },
				_react2.default.createElement(
					'form',
					{ onSubmit: handleSubmit(this.onSubmit) },
					_react2.default.createElement(_krUi.KrField, { name: 'communityId',
						component: 'searchCommunity',
						onChange: this.onChangeSearchCommunity,
						label: '\u793E\u533A\u540D\u79F0',
						requireLabel: true,
						style: { width: 252, margin: '0 35px 5px 0' }
					}),
					_react2.default.createElement(_krUi.KrField, { name: 'floor',
						component: 'select',
						label: '\u697C\u5C42',
						options: floorsOptions,
						requireLabel: true,
						style: { width: '252px' },
						onChange: this.getFloor
					}),
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'showTitle',
						component: 'input',
						ref: 'showTitleInput',
						type: 'text',
						label: '\u5C55\u793A\u6807\u9898',
						requireLabel: true,
						style: { width: '252px', margin: '0 35px 5px 0' },
						onBlur: this.onChangeTitle
					}),
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'deviceCode',
						component: 'input',
						type: 'text',
						label: '\u95E8\u7F16\u53F7',
						requireLabel: true,
						style: { width: '252px' },
						onBlur: this.doorNumHasFun
					}),
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'hardwareId',
						component: 'input',
						type: 'text',
						label: '\u667A\u80FD\u786C\u4EF6ID',
						requireLabel: true,
						style: { width: '252px', margin: '0 35px 5px 0' },
						onBlur: this.hardwareIdHasFun
					}),
					_react2.default.createElement(_krUi.KrField, { name: 'typeId',
						component: 'select',
						label: '\u7C7B\u578B',
						onChange: this.onchooseType,
						options: typeOptions,
						requireLabel: true,
						style: { width: '252px' }
					}),
					_react2.default.createElement(_krUi.KrField, { name: 'propertyId',
						component: 'select',
						label: '\u5C5E\u6027',
						onChange: this.onchooseProperty,
						options: propertyOption,
						requireLabel: true,
						style: { width: '252px', margin: '0 35px 5px 0' }
					}),
					_react2.default.createElement(_krUi.KrField, { name: 'functionId',
						component: 'select',
						options: correspondingFunction,
						label: '\u5BF9\u5E94\u529F\u80FD',
						onChange: this.onchooseCorrespondingFunction,
						requireLabel: true,
						style: { width: '252px' },
						ref: 'loacationKrfield'
					}),
					_react2.default.createElement(_krUi.KrField, { name: 'locationId',
						component: 'select',
						options: locationOptions,
						label: '\u5BF9\u5E94\u4F4D\u7F6E',
						onChange: this.onchooseCorrespondingLocation,
						style: { width: '252px', display: this.state.locationOpen ? 'block' : 'none' }
					}),
					_react2.default.createElement(
						'div',
						null,
						_react2.default.createElement('input', { type: 'checkbox', defaultChecked: this.state.isOnlines, onChange: this.chooseONLINE }),
						_react2.default.createElement(
							'span',
							{ style: { fontSize: 14, color: "#333333" } },
							'\u4FDD\u5B58\u540E\u81EA\u52A8\u4E0A\u7EBF'
						)
					),
					_react2.default.createElement(
						_krUi.Grid,
						{ style: { marginTop: 19, marginBottom: '4px' } },
						_react2.default.createElement(
							_krUi.Row,
							{ style: { textAlign: 'center' } },
							_react2.default.createElement(
								_krUi.ListGroup,
								null,
								_react2.default.createElement(
									_krUi.ListGroupItem,
									{ style: { padding: 0, display: 'inline-block', marginRight: 30 } },
									_react2.default.createElement(_krUi.Button, { label: '\u63D0\u4EA4', type: 'submit' })
								),
								_react2.default.createElement(
									_krUi.ListGroupItem,
									{ style: { padding: 0, display: 'inline-block', marginRight: 3 } },
									_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', type: 'button', cancle: true, onTouchTap: this.closeEditEquipment })
								)
							)
						)
					)
				)
			);
		}
	}]);

	return EditEquipmentForm;
}(_react.Component);

var validate = function validate(values) {
	var errors = {};
	if (!values.communityId) {
		errors.communityId = '社区名称为必填项';
	}
	if (!values.floor) {
		errors.floor = '楼层为必填项,社区已选才有楼层配置';
	}
	if (!values.showTitle || /^\s+$/.test(values.showTitle)) {
		errors.showTitle = '展示标题为必填项';
	}
	if (values.showTitle && values.showTitle.length > 13) {
		errors.showTitle = '展示标题最多13个字符';
	}
	if (!values.deviceCode || /^\s+$/.test(values.showTitle)) {
		errors.deviceCode = '门编号为必填项';
	}
	if (values.deviceCode && values.deviceCode.length > 50) {
		errors.deviceCode = '门编号最多50个字符';
	}
	if (!values.hardwareId || /^\s+$/.test(values.hardwareId)) {
		errors.hardwareId = '智能硬件ID为必填项';
	}
	if (values.hardwareId && values.hardwareId.length > 50) {
		errors.hardwareId = '智能硬件ID最多50个字符';
	}
	if (!values.typeId) {
		errors.typeId = '类型为必填项';
	}
	if (!values.propertyId) {
		errors.propertyId = '属性为必填项';
	}
	// if(values.property == "meetingRoom" || values.property == "functionRoom" ){
	// 	if(!values.locationId){
	// 		errors.locationId = '对应位置为必填项';
	// 	}
	// }
	if (!values.functionId) {
		errors.functionId = '对应功能为必填项';
	}
	return errors;
};

var _default = EditEquipmentForm = (0, _reduxForm.reduxForm)({
	form: 'EditEquipmentForm',
	validate: validate,
	enableReinitialize: true,
	keepDirtyOnReinitialize: true
})(EditEquipmentForm);

exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(EditEquipmentForm, 'EditEquipmentForm', '/Users/liuyihao/Code/kr-admin/src/Containers/Operation/BasicConfig/EquipmentDefinition/EditEquipmentForm.js');

	__REACT_HOT_LOADER__.register(validate, 'validate', '/Users/liuyihao/Code/kr-admin/src/Containers/Operation/BasicConfig/EquipmentDefinition/EditEquipmentForm.js');

	__REACT_HOT_LOADER__.register(_default, 'default', '/Users/liuyihao/Code/kr-admin/src/Containers/Operation/BasicConfig/EquipmentDefinition/EditEquipmentForm.js');
}();

;
//# sourceMappingURL=data:application/json;base64,