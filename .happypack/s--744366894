'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reduxForm = require('redux-form');

var _DatePicker = require('../../DatePicker');

var _DatePicker2 = _interopRequireDefault(_DatePicker);

var _InputDate = require('../../InputDate');

var _InputDate2 = _interopRequireDefault(_InputDate);

var _Utils = require('kr/Utils');

require('./index.less');

var _WrapComponent = require('../WrapComponent');

var _WrapComponent2 = _interopRequireDefault(_WrapComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//import DatePicker from 'material-ui/DatePicker';


var DateComponent = function (_React$Component) {
	_inherits(DateComponent, _React$Component);

	function DateComponent(props) {
		_classCallCheck(this, DateComponent);

		var _this = _possibleConstructorReturn(this, (DateComponent.__proto__ || Object.getPrototypeOf(DateComponent)).call(this, props));

		_this.onChange = _this.onChange.bind(_this);
		_this.supplementZero = _this.supplementZero.bind(_this);

		_this.formatDate = _this.formatDate.bind(_this);
		_this.setInputValue = _this.setInputValue.bind(_this);

		_this.isInit = false;
		_this.state = {
			value: ''
		};

		return _this;
	}

	_createClass(DateComponent, [{
		key: 'setDefaultDate',
		value: function setDefaultDate(value) {

			if (!value) {
				return;
			}

			if (typeof value === 'string') {
				value = new Date(Date.parse(value));
				this.setInputValue(value);
			}

			if (typeof value === 'number') {
				this.setInputValue(value);
				value = new Date(value);
			}

			this.setState({
				value: value
			});

			this.isInit = true;
		}
	}, {
		key: 'setInputValue',
		value: function setInputValue(value) {
			var input = this.props.input;


			if (this.props.flag == 'true') {
				return;
			}
			value = (0, _Utils.DateFormat)(value, "yyyy-mm-dd") + ' 00:00:00';
			input.onChange(value);
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {}
	}, {
		key: 'supplementZero',
		value: function supplementZero(value) {
			if (value < 10) {
				value = '0' + value;
			}
			return value;
		}
	}, {
		key: 'formatDate',
		value: function formatDate(value) {

			var dt = new Date(value);
			var year = dt.getFullYear();
			var month = this.supplementZero(1 + dt.getMonth());
			var date = this.supplementZero(dt.getDate());
			var hours = this.supplementZero(dt.getHours());
			var minutes = this.supplementZero(dt.getMinutes());
			var seconds = this.supplementZero(dt.getSeconds());

			var result = year + '-' + month + '-' + date + ' 00:00:00';

			if (this.props.dateNoSecond == 'true') {
				var result = year + '-' + month + '-' + date;
			}

			return result;
		}
	}, {
		key: 'onChange',
		value: function onChange(value) {

			if (!value) {
				return;
			}

			var _props = this.props,
			    input = _props.input,
			    onChange = _props.onChange;


			var result = this.formatDate(value);

			this.setInputValue(result);

			onChange && onChange(result);
		}
	}, {
		key: 'render',
		value: function render() {
			var _props2 = this.props,
			    input = _props2.input,
			    label = _props2.label,
			    type = _props2.type,
			    _props2$meta = _props2.meta,
			    touched = _props2$meta.touched,
			    error = _props2$meta.error,
			    requireLabel = _props2.requireLabel,
			    disabled = _props2.disabled,
			    search = _props2.search,
			    placeholder = _props2.placeholder,
			    style = _props2.style,
			    defaultValue = _props2.defaultValue,
			    inline = _props2.inline;


			var styles = {
				border: '1px solid #ddd',
				height: 40,
				borderRadius: '4px',
				paddingLeft: 10,
				color: '#fff',
				backgroundColor: 'transparent',
				opacity: 0
			};

			return _react2.default.createElement(
				_WrapComponent2.default,
				{ label: label, wrapStyle: style, requireLabel: requireLabel, inline: inline, search: search },
				_react2.default.createElement(
					'div',
					{ className: 'date-component' },
					_react2.default.createElement(_InputDate2.default, {
						value: input.value,
						placeholder: placeholder,
						name: input.name,
						defaultValue: defaultValue,
						onChange: this.onChange })
				),
				touched && error && _react2.default.createElement(
					'div',
					{ className: 'error-wrap error-tip' },
					' ',
					_react2.default.createElement(
						'span',
						null,
						error
					)
				)
			);
		}
	}]);

	return DateComponent;
}(_react2.default.Component);

DateComponent.displayName = 'DateComponent';
DateComponent.defaultProps = {
	inline: false
};
DateComponent.PropTypes = {
	defaultValue: _react2.default.PropTypes.string,
	onChange: _react2.default.PropTypes.func,
	inline: _react2.default.PropTypes.bool,
	search: _react2.default.PropTypes.bool
};
exports.default = DateComponent;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(DateComponent, 'DateComponent', '/Users/liuyihao/Code/kr-admin/src/Components/KrField/DateComponent/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,