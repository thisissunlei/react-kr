'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _FlatButton = require('material-ui/FlatButton');

var _FlatButton2 = _interopRequireDefault(_FlatButton);

var _RaisedButton = require('material-ui/RaisedButton');

var _RaisedButton2 = _interopRequireDefault(_RaisedButton);

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Button = function (_Component) {
	_inherits(Button, _Component);

	function Button(props) {
		_classCallCheck(this, Button);

		return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));
	}

	_createClass(Button, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    type = _props.type,
			    label = _props.label,
			    disabled = _props.disabled,
			    backgroundColor = _props.backgroundColor,
			    labelColor = _props.labelColor,
			    labelStyleLink = _props.labelStyleLink,
			    cancle = _props.cancle,
			    width = _props.width,
			    height = _props.height,
			    fontSize = _props.fontSize,
			    searchStyle = _props.searchStyle,
			    searchClick = _props.searchClick,
			    linkTrue = _props.linkTrue,
			    other = _objectWithoutProperties(_props, ['type', 'label', 'disabled', 'backgroundColor', 'labelColor', 'labelStyleLink', 'cancle', 'width', 'height', 'fontSize', 'searchStyle', 'searchClick', 'linkTrue']);

			var border = 'none';
			if (cancle) {
				backgroundColor = '#fff';
				labelColor = '#499df1';
				border = '1px solid #499df1';
			}
			var defaultStyle = {
				minWidth: 30,
				width: width || 80,
				height: height || 30
			};
			var divStyle = {
				boxShadow: "0 2px 8px rgba(134,174,214,.7)",
				border: border,
				borderRadius: 4
			};
			var labelStyle = {
				padding: 0,
				fontSize: fontSize || 14
			};

			var linkStyles = {
				minWidth: 30,
				color: '#499df1'
			};
			var heightLinkStyle = {
				minWidth: 30,
				color: '#499df1',
				height: '36px',
				lineHeight: '32px'
			};
			if (type == 'link') {
				if (disabled) {
					delete other.href;
				}
				var style = {};
				if (linkTrue) {
					style = heightLinkStyle;
				} else {
					style = linkStyles;
				}
				return _react2.default.createElement(
					'div',
					{ className: 'ui-button' },
					_react2.default.createElement(_FlatButton2.default, _extends({ backgroundColor: backgroundColor, labelColor: labelColor, labelStyle: labelStyleLink, label: label, primary: true, style: style }, other))
				);
			}

			if (type == 'button') {

				return _react2.default.createElement(
					'div',
					{ className: 'ui-button', style: divStyle },
					_react2.default.createElement(_RaisedButton2.default, _extends({ backgroundColor: backgroundColor || "#499df1", labelStyle: labelStyle, labelColor: labelColor || "#fff", style: defaultStyle, label: label }, other))
				);
			}

			if (type == 'operation') {
				return _react2.default.createElement(
					'div',
					{ className: 'ui-button' },
					_react2.default.createElement(
						'span',
						_extends({}, other, { style: { color: '#499df1', marginLeft: '5px', cursor: 'pointer' } }),
						label
					)
				);
			}

			if (type == 'search') {
				return _react2.default.createElement(
					'div',
					{ style: searchStyle, onClick: searchClick },
					_react2.default.createElement('span', { className: 'ui-search-upper', style: { cursor: 'pointer', display: 'inline-block' } })
				);
			}

			if (type == 'submit') {

				return _react2.default.createElement(
					'div',
					{ className: 'ui-button', style: divStyle },
					_react2.default.createElement(_RaisedButton2.default, _extends({ backgroundColor: backgroundColor || "#499df1", labelStyle: labelStyle, labelColor: labelColor || "#fff", label: label, style: defaultStyle, type: 'submit' }, other))
				);
			}

			return _react2.default.createElement(
				'div',
				{ className: 'ui-button' },
				_react2.default.createElement(_RaisedButton2.default, _extends({ backgroundColor: '#499df1', label: label, labelStyle: labelStyle, labelColor: '#fff', style: defaultStyle }, other))
			);
		}
	}]);

	return Button;
}(_react.Component);

Button.displayName = 'Button';
Button.defaultProps = {
	cancle: false,
	width: 80,
	height: 30,
	size: 'default'
};
Button.propTypes = {
	/**
  * 按钮大小：large、defualt、small、xsmall
  */
	size: _react2.default.PropTypes.string,
	/**
  *自定义样式名称
  */
	className: _react2.default.PropTypes.string,
	/**
  *子元素
  */
	children: _react2.default.PropTypes.node,
	/**
  *行内样式
  */
	style: _react2.default.PropTypes.object,
	/**
  *按钮类型：button、link、submit
  */
	type: _react2.default.PropTypes.string,
	/**
  *按钮文本显示
  */
	label: _react2.default.PropTypes.string,
	/**
  *按钮禁用
  */
	disabled: _react2.default.PropTypes.bool,
	backgroundColor: _react2.default.PropTypes.string,
	labelColor: _react2.default.PropTypes.string,
	cancle: _react2.default.PropTypes.bool,
	/**
  *宽
  */
	width: _react2.default.PropTypes.number,
	/**
  *高
  */
	height: _react2.default.PropTypes.number,
	fontSize: _react2.default.PropTypes.number,
	/**
 *高级查询的行内样式
 */
	searchStyle: _react2.default.PropTypes.object,
	/**
 *高级查询点击事件
 */
	searchClick: _react2.default.PropTypes.func
};
exports.default = Button;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(Button, 'Button', '/Users/liuyihao/Code/kr-admin/src/Components/Button/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,