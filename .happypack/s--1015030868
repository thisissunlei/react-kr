'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _simpleAssign = require('simple-assign');

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('./index.less');

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

var _krUi = require('kr-ui');

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SearchForm = function (_Component) {
	_inherits(SearchForm, _Component);

	function SearchForm(props, context) {
		_classCallCheck(this, SearchForm);

		var _this = _possibleConstructorReturn(this, (SearchForm.__proto__ || Object.getPrototypeOf(SearchForm)).call(this, props, context));

		_this.hasClass = function (obj, cls) {
			return obj.className.match(new RegExp('(\\s|^)' + cls + '(\\s|$)'));
		};

		_this.onBlur = function (event) {
			var _this$props = _this.props,
			    onSubmit = _this$props.onSubmit,
			    searchFilter = _this$props.searchFilter;
			var value = _this.state.value;

			var type = '';
			searchFilter.map(function (item) {
				if (item.label == value) {
					type = item.value;
				}
			});
			_this.setState({
				content: event.target.value
			});
			var search = {
				value: type,
				content: event.target.value
			};

			onSubmit && onSubmit(search);
		};

		_this.removeClass = function (obj, cls) {
			if (_this.hasClass(obj, cls)) {
				var reg = new RegExp('(\\s|^)' + cls + '(\\s|$)');
				obj.className = obj.className.replace(reg, '');
			}
		};

		_this.toggleClass = function (obj, cls) {
			if (hasClass(obj, cls)) {
				removeClass(obj, cls);
			} else {
				obj.className += ' ' + cls;
			}
		};

		_this.selectShow = function () {
			var list = _reactDom2.default.findDOMNode(_this.selectList);
			var ul = list.getElementsByTagName('ul')[0];
			if (!_this.hasClass(ul, 'show-li')) {
				ul.className += ' show-li';
			}
		};

		_this.selectHidden = function () {
			var list = _reactDom2.default.findDOMNode(_this.selectList);
			var ul = list.getElementsByTagName('ul')[0];
			_this.removeClass(ul, 'show-li');
		};

		_this.getValue = function (event) {
			// console.log('getvalue',event);
			var _this$props2 = _this.props,
			    onSubmit = _this$props2.onSubmit,
			    searchFilter = _this$props2.searchFilter;
			var _this$state = _this.state,
			    content = _this$state.content,
			    value = _this$state.value;

			var list = _reactDom2.default.findDOMNode(_this.selectList);
			var ul = list.getElementsByTagName('ul')[0];
			var className = event.target.className;
			var aa = document.getElementsByClassName(className)[0].innerHTML;
			document.getElementsByClassName('search-name')[0].innerHTML = aa;
			_this.removeClass(ul, 'show-li');
			_this.setState({
				value: aa
			});
			searchFilter.map(function (item) {
				if (item.label == aa) {
					value = item.value;
				}
			});
			var search = {
				value: value,
				content: content
			};

			onSubmit && onSubmit(search);
		};

		_this.renderFilter = function () {
			var _this$props3 = _this.props,
			    searchFilter = _this$props3.searchFilter,
			    defaultFilter = _this$props3.defaultFilter;
			var value = _this.state.value;
			// console.log('ddddd',defaultFilter);

			var select = '请选择';
			if (searchFilter && !value) {
				select = searchFilter[0].label;
			}
			if (value) {
				select = value;
			}
			if (defaultFilter && !value) {
				searchFilter.map(function (item) {
					// console.log(item.label);
					if (item.value == defaultFilter) {
						select = item.label;
					}
				});
				// select = defaultFilter;
			}
			// console.log(value);

			// console.log('searchFilter',searchFilter);
			if (searchFilter) {
				return _react2.default.createElement(
					'div',
					{ className: 'search-filter', ref: function ref(div) {
							_this.selectList = div;
						} },
					_react2.default.createElement(
						'span',
						{ className: 'filter-container', onMouseOver: _this.selectShow, onMouseOut: _this.selectHidden },
						_react2.default.createElement(
							'span',
							{ className: 'search-name' },
							select
						),
						_react2.default.createElement('em', { className: 'icon-return' })
					),
					_react2.default.createElement(
						'ul',
						{ onMouseOver: _this.selectShow, onMouseOut: _this.selectHidden, ref: function ref(li) {
								_this.li = li;
							} },
						searchFilter && searchFilter.map(function (item, index) {

							return _react2.default.createElement(
								'li',
								{ className: '' + index, onClick: _this.getValue, key: index },
								item.label
							);
						})
					)
				);
			}
		};

		_this.state = {
			num: 0,
			value: '',
			content: ''
		};

		return _this;
	}
	// var aa = document.getElementById("keywords").value;


	_createClass(SearchForm, [{
		key: 'componentDidMount',
		value: function componentDidMount() {}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			if (!this.isInit && nextProps.value) {
				var value = nextProps.value;
				this.setState({
					value: value
				});
				this.isInit = true;
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props = this.props,
			    left = _props.left,
			    right = _props.right,
			    _props$grid = _props.grid,
			    grid = _props$grid === undefined ? 1 : _props$grid,
			    style = _props.style,
			    defaultFilter = _props.defaultFilter,
			    defaultContent = _props.defaultContent;

			var WrapStyles = (0, _simpleAssign2.default)({}, {
				width: grid * 100 + '%',
				paddingLeft: left,
				paddingRight: right
			}, style);

			return _react2.default.createElement(
				'div',
				{ className: 'search-form-member', ref: function ref(div) {
						_this2.form = div;
					}, name: 'search-form', style: WrapStyles },
				_react2.default.createElement(
					'div',
					{ className: 'search-status' },
					this.renderFilter(),
					_react2.default.createElement(
						'div',
						{ className: 'search-content' },
						_react2.default.createElement('input', { type: 'text', defaultValue: defaultContent, className: 'search-val', placeholder: '\u8BF7\u8F93\u5165\u67E5\u627E\u5185\u5BB9', onBlur: this.onBlur, name: 'keywords', id: 'keywords', autoComplete: 'off' })
					)
				)
			);
		}
	}]);

	return SearchForm;
}(_react.Component);

SearchForm.PropTypes = {
	searchFilter: _react2.default.PropTypes.array,
	style: _react2.default.PropTypes.object,
	//事件
	onSubmit: _react2.default.PropTypes.func,
	grid: _react2.default.PropTypes.number,
	left: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.number]),
	right: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.number])
};
exports.default = SearchForm;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(SearchForm, 'SearchForm', '/Users/dongfanai/Desktop/project/kr-admin/src/Components/SearchForm/index.js');
}();

;