{"version":3,"sources":["src/Components/KrForm/Field/index.js"],"names":["Field","props","context","name","value","initializeField","initializeValidations","defaultValue","errors","validationKeys","Object","keys","validation","map","item","index","hasOwnProperty","children","minLength","maxLength","requiredValue","component","renderComponent","Component","displayName","propTypes","PropTypes","string","any","contextTypes","blur","func","isRequired","focus","error","change","syncErrors","object","fields","values","onFocus","onBlur","onError","message","onChange","input","oBlur","field","touched","active","meta","dirty","autofilled","warning","pristine","invalid","valid","visited","ref","handles","createElement"],"mappings":"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","file":"index.js","sourceRoot":"/Users/liuyihao/Code/kr-admin","sourcesContent":["import React from 'react';\n\nimport Input from '../Input';\n\nexport default class Field extends React.Component{\n\n  static displayName = 'Field';\n\n  static propTypes = {\n     name:React.PropTypes.string,\n     component:React.PropTypes.any\n  }\n\n  static contextTypes =  {\n      blur: React.PropTypes.func.isRequired,\n      focus: React.PropTypes.func.isRequired,\n      error: React.PropTypes.func.isRequired,\n      change: React.PropTypes.func.isRequired,\n      initializeField:React.PropTypes.func.isRequired,\n      syncErrors:React.PropTypes.object.isRequired,\n      fields:React.PropTypes.object.isRequired,\n      initializeValidations:React.PropTypes.func.isRequired,\n      values:React.PropTypes.object.isRequired,\n  }\n\n\tconstructor(props,context){\n\t\tsuper(props, context);\n\n    const {name} = this.props;\n\n    this.name = name;\n    this.value = '';\n\n\t}\n\n  onFocus =  ()=>{\n    const {focus} = this.context;\n    focus && focus(this.props.name);\n  }\n\n  onBlur = ()=>{\n\n  }\n\n  onError = (message)=>{\n\n    const {error} = this.context;\n    const {name} = this.props;\n    error && error(name,message);\n\n  }\n\n\n  onChange =(value)=>{\n\n    const {change} = this.context;\n    const {name,onChange} = this.props;\n\n    change && change(name,value);\n    onChange && onChange(value);\n\n  }\n\n  componentDidMount(){\n\n      const {initializeField,initializeValidations} = this.context;\n      const {name,defaultValue} = this.props;\n      initializeField && initializeField(name,defaultValue);\n\n      let props = this.props;\n      let {errors} = this.props;\n\n      if(!errors){\n          return ;\n      }\n      let validationKeys = Object.keys(errors);\n\n      let validation = {\n          errors,\n      };\n\n      validationKeys.map(function(item,index){\n         if(item && props.hasOwnProperty(item)){\n            validation[item] = props[item];\n         }\n      });\n\n      initializeValidations &&  initializeValidations(name,validation);\n  }\n\n  renderComponent = (component)=>{\n\n    const {syncErrors,fields,values} = this.context;\n    const {name} = this.props;\n\n\n    const input = {\n      name:this.props.name,\n      value:values[name],\n      onChange:this.onChange,\n      onBlur:this.oBlur,\n      onFocus:this.onFocus,\n      onError:this.onError,\n    };\n\n\n\n    let field = {\n      touched:false,\n      active:false,\n    };\n\n    if(fields && fields.hasOwnProperty(name)){\n      field = fields[name];\n    }\n\n    const meta = {\n      dirty:false,\n      autofilled:false,\n      error:'',\n      warning:'',\n      pristine:false,\n      invalid:false,\n      valid:false,\n      visited:false,\n      active:field.active,\n      touched:field.touched,\n      error:syncErrors[this.props.name]\n    };\n\n    const props = Object.assign({},{\n      ref:name,\n      input,\n      meta,\n    },{...this.props});\n\n    const handles = {\n\n    };\n\n    if(typeof component === 'undefined' || typeof component === 'string'){\n      return <Input name={name}  type=\"text\"  {...props} {...handles} />\n    }\n\n\n  return React.createElement(component,{\n      ...props,\n      ...handles\n  });\n\n  }\n\n\trender(){\n\n    const {name,children,minLength,maxLength,errors,requiredValue,component} = this.props;\n\n\t  return (\n      <span>\n       {this.renderComponent(component)}\n     </span>\n\t );\n\t}\n\n}\n"]}