'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _redux = require('redux');

var _Actions = require('kr-ui/../Redux/Actions');

var actionCreators = _interopRequireWildcard(_Actions);

var _reactAddonsPureRenderMixin = require('react-addons-pure-render-mixin');

var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);

var _Redux = require('kr/Redux');

var _krUi = require('kr-ui');

var _PanelComponents = require('./PanelComponents');

var _PanelComponents2 = _interopRequireDefault(_PanelComponents);

require('./index.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Home = function (_Component) {
	_inherits(Home, _Component);

	function Home(props, context) {
		_classCallCheck(this, Home);

		var _this2 = _possibleConstructorReturn(this, (Home.__proto__ || Object.getPrototypeOf(Home)).call(this, props, context));

		_this2.getInitData = function () {};

		_this2.activeTable = function (index, id) {
			var _this2$state = _this2.state,
			    action = _this2$state.action,
			    groupId = _this2$state.groupId;


			_this2.setState({
				action: index,
				groupId: id
			}, function () {});
		};

		_this2.renderGroupTabs = function () {
			var _this2$state2 = _this2.state,
			    groupList = _this2$state2.groupList,
			    active = _this2$state2.active;


			var activeTab = {
				color: '#499df1',
				borderBottom: "1px solid #eee",
				fontSize: 16
			};
			var commenTab = {
				color: '#666',
				borderBottom: "1px solid #eee",
				fontSize: 16
			};
			return _react2.default.createElement(
				'div',
				{ className: 'backStatic' },
				_react2.default.createElement(
					'div',
					{ className: 'static-tabWrap' },
					_react2.default.createElement(
						_krUi.Tabs,
						{
							tabItemContainerStyle: { background: '#FFF' },
							inkBarStyle: {
								background: '-webkit-linear-gradient(right, #03ec56, #499df1)',
								position: 'absolute', top: 0, height: 3
							},
							style: {
								background: '#fff',
								position: 'relative',
								paddingLeft: '20',
								paddingRight: '20'
							}
						},
						groupList.map(function (item, index) {
							var activeStyle = {};
							if (_this2.state.action == index) {
								activeStyle = activeTab;
								var activeTabPanel = _react2.default.createElement(_PanelComponents2.default, { panels: item.templateList, groupId: _this2.state.groupId });
							} else {
								activeStyle = commenTab;
							}
							return _react2.default.createElement(
								_krUi.Tab,
								{ label: item.groupName, key: index, onActive: _this2.activeTable.bind(_this2, index, item.id), style: activeStyle },
								_react2.default.createElement(
									'div',
									{ className: 'tabWrap_section' },
									activeTabPanel
								)
							);
						})
					)
				)
			);
		};

		_this2.renderGroupSingle = function () {
			var groupList = _this2.state.groupList;

			var groupItem = groupList[0];

			return _react2.default.createElement(
				'div',
				{ className: 'static-section' },
				_react2.default.createElement(
					_krUi.Section,
					{ title: groupItem.groupName, style: { background: 'none' }, headerStyle: { background: '#fff' } },
					_react2.default.createElement(
						'div',
						{ className: 'static-section-inner', style: { borderTop: 'solid 1px #e8e9e9' } },
						_react2.default.createElement(_PanelComponents2.default, { panels: groupItem.templateList, groupId: groupItem.id })
					)
				)
			);
		};

		_this2.shouldComponentUpdate = _reactAddonsPureRenderMixin2.default.shouldComponentUpdate.bind(_this2);

		_this2.state = {
			groupList: [],
			groupId: '',
			action: 0
		};
		return _this2;
	}

	_createClass(Home, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _this = this;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('get-my-groups')).then(function (response) {
				_this.setState({
					groupList: response.groupList,
					groupId: response.groupList[0].id
				});
			}).catch(function (err) {
				_krUi.Message.error(err);
			});

			_Redux.Store.dispatch(_Redux.Actions.switchSidebarNav(false));
		}
	}, {
		key: 'render',
		value: function render() {
			var groupList = this.state.groupList;


			if (groupList.length == 1) {
				return this.renderGroupSingle();
			}

			return _react2.default.createElement(
				'div',
				{ className: 'g-statistical' },
				this.renderGroupTabs()
			);
		}
	}]);

	return Home;
}(_react.Component);

exports.default = Home;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(Home, 'Home', '/Users/tmac_zc/Code/kr-admin/src/Containers/Statistical/Home/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,