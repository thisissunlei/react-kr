'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Utils = require('kr/Utils');

var _Checkbox = require('../../Checkbox');

var _Checkbox2 = _interopRequireDefault(_Checkbox);

var _WrapComponent = require('../WrapComponent');

var _WrapComponent2 = _interopRequireDefault(_WrapComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GroupCheckboxComponent = function (_React$Component) {
  _inherits(GroupCheckboxComponent, _React$Component);

  function GroupCheckboxComponent(props) {
    _classCallCheck(this, GroupCheckboxComponent);

    var _this2 = _possibleConstructorReturn(this, (GroupCheckboxComponent.__proto__ || Object.getPrototypeOf(GroupCheckboxComponent)).call(this, props));

    _this2.onChange = function (checked, index) {
      var options = _this2.state.options;

      options[index].checked = checked;
      _this2.setState({
        options: options
      }, function () {
        this.valuationInputValue();
      });
    };

    _this2.onSelectAll = function (checkedAll) {
      var options = _this2.state.options;


      options.forEach(function (item, index) {
        item.checked = checkedAll;
      });

      _this2.setState({
        options: options,
        checkedAll: checkedAll
      }, function () {
        this.valuationInputValue();
      });
    };

    _this2.renderSelectAllSwitch = function () {

      var _this = _this2;

      return _react2.default.createElement(_Checkbox2.default, { label: '\u5168\u90E8',
        value: 'all',
        checked: _this2.state.checkedAll,
        onCheck: function onCheck(checked) {
          _this.onSelectAll(checked);
        }
      });
    };

    _this2.renderOptions = function () {

      var children = [];
      var options = _this2.state.options;
      var name = _this2.props.name;


      var _this = _this2;

      children = options.map(function (item, index) {
        return _react2.default.createElement(
          'div',
          { key: index },
          _react2.default.createElement(_Checkbox2.default, { label: item.label, value: item.value, checked: item.checked, onCheck: function onCheck(checked) {
              _this.onChange(checked, index);
            } }),
          item.checked && item.component && item.component()
        );
      });

      return children;
    };

    _this2.valuationInputValue = function () {
      var options = _this2.state.options;

      var values = [];
      var _this2$props = _this2.props,
          input = _this2$props.input,
          onChange = _this2$props.onChange;


      options.map(function (item, index) {
        if (item.checked) {
          values.push(item.value);
        }
      });

      input.onChange && input.onChange(values.join(','));
      onChange && onChange(options);
    };

    _this2.state = {
      defaultValue: props.defaultValue,
      options: props.defaultValue,
      checkedAll: false
    };

    return _this2;
  }

  _createClass(GroupCheckboxComponent, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (!(0, _Utils.ShallowEqual)(this.props.defaultValue, nextProps.defaultValue)) {
        this.setState({
          defaultValue: nextProps.defaultValue,
          options: nextProps.defaultValue
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          input = _props.input,
          label = _props.label,
          type = _props.type,
          _props$meta = _props.meta,
          touched = _props$meta.touched,
          error = _props$meta.error,
          requireLabel = _props.requireLabel,
          disabled = _props.disabled,
          placeholder = _props.placeholder,
          style = _props.style,
          defaultValue = _props.defaultValue,
          inline = _props.inline;


      return _react2.default.createElement(
        _WrapComponent2.default,
        { label: label, wrapStyle: style, requireLabel: requireLabel, inline: inline },
        _react2.default.createElement(
          'div',
          { className: 'ui-group-checkbox' },
          this.renderOptions()
        )
      );
    }
  }]);

  return GroupCheckboxComponent;
}(_react2.default.Component);

GroupCheckboxComponent.displayName = 'GroupCheckboxComponent';
GroupCheckboxComponent.propTypes = {
  inline: _react2.default.PropTypes.bool
};
exports.default = GroupCheckboxComponent;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(GroupCheckboxComponent, 'GroupCheckboxComponent', '/Users/tmac_zc/Code/kr-admin/src/Components/KrField/GroupCheckboxComponent/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,