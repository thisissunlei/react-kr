'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _simpleAssign = require('simple-assign');

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _reactAddonsPureRenderMixin = require('react-addons-pure-render-mixin');

var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);

var _Redux = require('kr/Redux');

var _krUi = require('kr-ui');

var _CreateForm = require('./CreateForm');

var _CreateForm2 = _interopRequireDefault(_CreateForm);

var _EditForm = require('./EditForm');

var _EditForm2 = _interopRequireDefault(_EditForm);

var _SearchUpperFrom = require('./SearchUpperFrom');

var _SearchUpperFrom2 = _interopRequireDefault(_SearchUpperFrom);

require('./index.less');

var _reduxForm = require('redux-form');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GroupSetting = function (_Component) {
	_inherits(GroupSetting, _Component);

	function GroupSetting(props, context) {
		_classCallCheck(this, GroupSetting);

		var _this2 = _possibleConstructorReturn(this, (GroupSetting.__proto__ || Object.getPrototypeOf(GroupSetting)).call(this, props, context));

		_this2.onCreateSubmit = function (params) {

			var _this = _this2;
			params = (0, _simpleAssign2.default)({}, params);
			if (_this2.state.noinit) {
				params.templateIdList = "";
				_krUi.Message.error("模板列表不能为空");
				return;
			} else {
				params.templateIdList = _this2.state.templateListIds;
			}

			_Redux.Store.dispatch(_Redux.Actions.callAPI('GroupNewAndEidt', {}, params)).then(function (response) {
				var obj = {
					page: 1,
					pageSize: 15,
					other: !_this.state.searchParams.other,
					groupName: _this.state.searchText

				};

				_this.setState({
					openNewCreate: false,
					openEditDetail: false,
					searchParams: obj

				});
			}).catch(function (err) {
				if (!params.templateIdList) {
					err.message = "模板列表不能为空";
				}
				_krUi.Message.error(err.message);
			});
		};

		_this2.openEditDetailDialog = function () {
			var _this = _this2;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('MouldGroupDetails', { id: _this2.state.id })).then(function (data) {

				_this.changeMudle(data.templateList);

				_Redux.Store.dispatch((0, _reduxForm.initialize)('newCreateForm', data));

				_this.setState({
					itemDetail: data
				}, function () {
					_this.setState({
						openEditDetail: !_this.state.openEditDetail
					});
				});
			}).catch(function (err) {

				_krUi.Notify.show([{
					message: err.message,
					type: 'danger'
				}]);
			});
		};

		_this2.onSearchUpperForm = function (searchParams) {

			var _this = _this2;

			var obj = {
				groupName: searchParams.groupName || "",
				pageSize: 15,
				page: 1,
				enable: searchParams.enable || ""
			};

			_this2.setState({
				searchParams: obj
			});
			_this2.openSearchUpperFormDialog();
		};

		_this2.openNewCreateDialog = function () {
			_Redux.Store.dispatch((0, _reduxForm.initialize)('newCreateForm', {
				enable: 'ENABLE'
			}));
			var _this = _this2;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('GroupNewModule')).then(function (data) {
				_this.setState({
					templateList: data.templateList
				}, function () {
					this.setState({
						openNewCreate: !_this.state.openNewCreate
					});
				});
			}).catch(function (err) {
				_krUi.Notify.show([{
					message: err.message,
					type: 'danger'
				}]);
			});
		};

		_this2.openSearchUpperFormDialog = function () {
			var _this = _this2;
			_this2.setState({
				openSearchUpperForm: !_this2.state.openSearchUpperForm
			});
		};

		_this2.changeMudle = function (arr) {
			var ids = [];

			for (var i = 0; i < arr.length; i++) {
				ids.push(arr[i].id);
			}
			_this2.setState({ templateListIds: ids, noinit: false });
		};

		_this2.shouldComponentUpdate = _reactAddonsPureRenderMixin2.default.shouldComponentUpdate.bind(_this2);
		_this2.openEditDetailDialog = _this2.openEditDetailDialog.bind(_this2);
		_this2.onOperation = _this2.onOperation.bind(_this2);
		_this2.onSearchSubmit = _this2.onSearchSubmit.bind(_this2);
		_this2.openNewCreateDialog = _this2.openNewCreateDialog.bind(_this2);
		_this2.openEditDetailDialog = _this2.openEditDetailDialog.bind(_this2);
		_this2.state = {
			openNewCreate: false,
			openView: false,
			openEditDetail: false,
			openSearchUpperForm: false,
			itemDetail: {},
			accountname: {},
			//已选模板列表
			templateList: [],
			templateListIds: [],
			//未选模板列表
			unselectedList: [],
			allData: {},
			searchParams: {
				page: 1,
				pageSize: 15,
				enable: '',
				groupName: '',
				other: false
			},
			id: null,
			noinit: true,
			searchText: ""

		};
		return _this2;
	}

	//新建提交数据和编辑数据的提交


	_createClass(GroupSetting, [{
		key: 'onExport',


		//导出事件
		value: function onExport(values) {

			var idList = [];
			if (values.length != 0) {
				values.map(function (item, value) {
					idList.push(item.id);
				});
			}
			var url = '/api/krspace-finance-web/finaccount/property/exportDatas?ids=' + idList;
			window.location.href = url;
		}

		//操作相关

	}, {
		key: 'onOperation',
		value: function onOperation(type, itemDetail) {
			this.setState({
				id: itemDetail.id
			}, function () {

				this.openEditDetailDialog();
			});
		}

		//编辑

	}, {
		key: 'onSearchSubmit',

		//搜索功能
		value: function onSearchSubmit(searchParams) {
			var obj = {
				groupName: searchParams.content,
				pageSize: 15,
				page: 1
			};
			_Redux.Store.dispatch((0, _reduxForm.initialize)('SearchUpperForm', obj));

			this.setState({
				searchParams: obj,
				searchText: searchParams.content

			});
		}
	}, {
		key: 'onSearchCancel',
		value: function onSearchCancel() {}
		//高级搜索功能点击确定

		//新建

		//高级搜索

		// 改变模板分组

	}, {
		key: 'render',


		//
		//  component={(value,item)=>{<span>{value}</span>}}

		value: function render() {
			return _react2.default.createElement(
				'div',
				{ className: 'switchhover' },
				_react2.default.createElement(_krUi.Title, { value: '\u6570\u636E\u6A21\u677F\u7BA1\u7406_\u57FA\u7840\u914D\u7F6E' }),
				_react2.default.createElement(
					_krUi.Section,
					{ title: '\u6A21\u677F\u5206\u7EC4', description: '', style: { minHeight: "900px" } },
					_react2.default.createElement(
						_krUi.Grid,
						{ style: { marginBottom: 22, marginTop: 2 } },
						_react2.default.createElement(
							_krUi.Row,
							null,
							_react2.default.createElement(
								_krUi.Col,
								{ md: 4, align: 'left' },
								' ',
								_react2.default.createElement(_krUi.Button, { label: '\u65B0\u5EFA', type: 'button', joinEditForm: true, onTouchTap: this.openNewCreateDialog }),
								' '
							),
							_react2.default.createElement(
								_krUi.Col,
								{ md: 8, align: 'right', style: { marginTop: 0 } },
								_react2.default.createElement(
									_krUi.ListGroup,
									null,
									_react2.default.createElement(
										_krUi.ListGroupItem,
										null,
										' ',
										_react2.default.createElement(_krUi.SearchForms, { onSubmit: this.onSearchSubmit, onCancel: this.onSearchCancel })
									),
									_react2.default.createElement(
										_krUi.ListGroupItem,
										null,
										' ',
										_react2.default.createElement(_krUi.Button, { searchClick: this.openSearchUpperFormDialog, type: 'search', searchStyle: { marginLeft: '20', marginTop: '5' } })
									)
								)
							)
						)
					),
					_react2.default.createElement(
						_krUi.Table,
						{ style: { marginTop: 10 },
							ajax: true,
							onOperation: this.onOperation,
							onProcessData: function onProcessData(state) {

								return state;
							},
							displayCheckbox: false,
							onExport: this.onExport,
							ajaxParams: this.state.searchParams,

							ajaxFieldListName: 'items',
							ajaxUrlName: 'MouldGroupList' },
						_react2.default.createElement(
							_krUi.TableHeader,
							null,
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u5206\u7EC4\u540D\u79F0'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u6392\u5E8F'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								{ style: { maxWidth: 150 } },
								'\u5206\u7EC4\u63CF\u8FF0'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u6A21\u677F\u6570'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u521B\u5EFA\u4EBA'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u521B\u5EFA\u65F6\u95F4'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u542F\u7528\u72B6\u6001'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u64CD\u4F5C'
							)
						),
						_react2.default.createElement(
							_krUi.TableBody,
							null,
							_react2.default.createElement(
								_krUi.TableRow,
								null,
								_react2.default.createElement(_krUi.TableRowColumn, { style: { overflow: "visible", textAlign: "center" }, name: 'groupName', component: function component(value, oldValue) {
										var TooltipStyle = "";
										var lest = '';
										if (value.length >= 10) {
											value = value.substring(0, 10);
											lest = "...";
										}

										if (value.length == "") {
											TooltipStyle = "none";
										} else {
											TooltipStyle = "block";
										}

										return _react2.default.createElement(
											'div',
											{ style: { display: TooltipStyle } },
											_react2.default.createElement(
												'span',
												{ className: 'tableOver', style: { maxWidth: 160, display: "inline-block" } },
												value,
												_react2.default.createElement(
													'span',
													{ style: { display: "inline-block" } },
													lest
												)
											),
											_react2.default.createElement(
												_krUi.Tooltip,
												{ offsetTop: 10, place: 'top' },
												_react2.default.createElement(
													'div',
													{ style: { width: "260px", whiteSpace: "normal", lineHeight: "22px" } },
													oldValue
												)
											)
										);
									} }),
								_react2.default.createElement(_krUi.TableRowColumn, { name: 'sort' }),
								_react2.default.createElement(_krUi.TableRowColumn, { style: { overflow: "visible", textAlign: "center" }, name: 'groupDesc', component: function component(value, oldValue) {
										var TooltipStyle = "";
										var lest = '';
										if (value.length >= 10) {
											value = value.substring(0, 10);
											lest = "...";
										}
										if (value.length == "") {
											TooltipStyle = "none";
										} else {
											TooltipStyle = "block";
										}
										return _react2.default.createElement(
											'div',
											{ style: { display: TooltipStyle } },
											_react2.default.createElement(
												'span',
												{ className: 'tableOver', style: { maxWidth: 160, display: "inline-block" } },
												value,
												_react2.default.createElement(
													'span',
													{ style: { display: "inline-block" } },
													lest
												)
											),
											_react2.default.createElement(
												_krUi.Tooltip,
												{ offsetTop: 10, place: 'top' },
												_react2.default.createElement(
													'div',
													{ style: { width: "260px", whiteSpace: "normal", lineHeight: "22px" } },
													oldValue
												)
											)
										);
									} }),
								_react2.default.createElement(_krUi.TableRowColumn, { name: 'templateNum' }),
								_react2.default.createElement(_krUi.TableRowColumn, { name: 'creator' }),
								_react2.default.createElement(_krUi.TableRowColumn, { name: 'createTime', type: 'date', format: 'yyyy-mm-dd hh:MM:ss' }),
								_react2.default.createElement(_krUi.TableRowColumn, { name: 'enable', options: [{ label: '启用', value: 'ENABLE' }, { label: '禁用', value: 'DISABLE' }],
									component: function component(value, oldValue) {
										var fontColor = "";
										if (value == "禁用") {
											fontColor = "#ff6060";
										}
										return _react2.default.createElement(
											'span',
											{ style: { color: fontColor } },
											value
										);
									}

								}),
								_react2.default.createElement(
									_krUi.TableRowColumn,
									null,
									_react2.default.createElement(_krUi.Button, { label: '\u7F16\u8F91', type: 'operation', operation: 'edit' })
								)
							)
						),
						_react2.default.createElement(_krUi.TableFooter, null)
					)
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u7F16\u8F91',
						modal: true,
						open: this.state.openEditDetail,
						onClose: this.openEditDetailDialog,
						contentStyle: { width: 687 }

					},
					_react2.default.createElement(_EditForm2.default, { changeMudle: this.changeMudle, detail: this.state.itemDetail, onSubmit: this.onCreateSubmit, onCancel: this.openEditDetailDialog })
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u65B0\u5EFA\u5206\u7EC4',
						modal: true,
						contentStyle: { width: 687 }
						// detail={this.state.templateList}
						, open: this.state.openNewCreate,
						onClose: this.openNewCreateDialog
					},
					_react2.default.createElement(_CreateForm2.default, { changeMudle: this.changeMudle, open: this.state.openNewCreate, detail: this.state.templateList, onSubmit: this.onCreateSubmit, onCancel: this.openNewCreateDialog })
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u9AD8\u7EA7\u67E5\u8BE2',
						modal: true,
						open: this.state.openSearchUpperForm,
						onClose: this.openSearchUpperFormDialog,
						bodyStyle: { paddingTop: 34 },
						contentStyle: { width: 687 }
					},
					_react2.default.createElement(_SearchUpperFrom2.default, { detail: this.state.itemDetail, onSubmit: this.onSearchUpperForm, onCancel: this.openSearchUpperFormDialog })
				)
			);
		}
	}]);

	return GroupSetting;
}(_react.Component);

exports.default = GroupSetting;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(GroupSetting, 'GroupSetting', '/Users/tmac_zc/Code/kr-admin/src/Containers/Operation/GroupSetting/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,