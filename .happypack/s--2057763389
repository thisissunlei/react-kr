'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CalendarToolbar = function (_React$Component) {
	_inherits(CalendarToolbar, _React$Component);

	function CalendarToolbar(props) {
		_classCallCheck(this, CalendarToolbar);

		var _this = _possibleConstructorReturn(this, (CalendarToolbar.__proto__ || Object.getPrototypeOf(CalendarToolbar)).call(this, props));

		_this.onNextMonth = function () {
			var onNextMonth = _this.context.onNextMonth;

			onNextMonth && onNextMonth();
		};

		_this.onPrevMonth = function () {
			var onPrevMonth = _this.context.onPrevMonth;

			onPrevMonth && onPrevMonth();
		};

		return _this;
	}

	_createClass(CalendarToolbar, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    year = _props.year,
			    month = _props.month,
			    openYearSelectorDialog = _props.openYearSelectorDialog,
			    openMonthSelectorDialog = _props.openMonthSelectorDialog;


			return _react2.default.createElement(
				'div',
				{ className: 'calendar-toolbar' },
				_react2.default.createElement(
					'span',
					{ className: 'left-button', onClick: this.onPrevMonth },
					'<'
				),
				_react2.default.createElement(
					'span',
					{ className: 'main-content' },
					_react2.default.createElement(
						'span',
						{ className: 'month-number', onClick: openMonthSelectorDialog },
						month,
						'\xA0\u6708'
					),
					_react2.default.createElement(
						'span',
						{ className: 'year-number', onClick: openYearSelectorDialog },
						year,
						'\xA0\u5E74'
					)
				),
				_react2.default.createElement(
					'span',
					{ className: 'right-button', onClick: this.onNextMonth },
					'>'
				)
			);
		}
	}]);

	return CalendarToolbar;
}(_react2.default.Component);

CalendarToolbar.displayName = 'CalendarToolbar';
CalendarToolbar.contextTypes = {
	onSelectedYear: _react2.default.PropTypes.func.isRequired,
	onSelectedMonth: _react2.default.PropTypes.func.isRequired,
	onSelectedDate: _react2.default.PropTypes.func.isRequired,
	onPrevMonth: _react2.default.PropTypes.func.isRequired,
	onNextMonth: _react2.default.PropTypes.func.isRequired
};
CalendarToolbar.propTypes = {
	/**
 *样式class类名
 */
	className: _react2.default.PropTypes.string,
	/**
 * 样式
 */
	style: _react2.default.PropTypes.object,
	openYearSelectorDialog: _react2.default.PropTypes.func.isRequired,
	openMonthSelectorDialog: _react2.default.PropTypes.func.isRequired
};
exports.default = CalendarToolbar;