'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('./index.less');

var _materialUi = require('material-ui');

var _moreVert = require('material-ui/svg-icons/navigation/more-vert');

var _moreVert2 = _interopRequireDefault(_moreVert);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Section = function (_Component) {
	_inherits(Section, _Component);

	function Section(props) {
		_classCallCheck(this, Section);

		var _this = _possibleConstructorReturn(this, (Section.__proto__ || Object.getPrototypeOf(Section)).call(this, props));

		_this.renderSectionTitle = _this.renderSectionTitle.bind(_this);
		_this.renderHeaderLeftIcon = _this.renderHeaderLeftIcon.bind(_this);
		_this.renderDescription = _this.renderDescription.bind(_this);

		_this.touchHeaderTitle = _this.touchHeaderTitle.bind(_this);
		_this.renderRightElement = _this.renderRightElement.bind(_this);

		_this.state = {
			openBody: true
		};

		return _this;
	}

	_createClass(Section, [{
		key: 'renderRightElement',
		value: function renderRightElement() {

			if (!this.props.rightElement) {
				return null;
			}

			return _react2.default.createElement(
				'div',
				{ className: 'right-element' },
				this.props.rightMenu
			);
		}
	}, {
		key: 'renderRightMenu',
		value: function renderRightMenu() {

			if (!this.props.rightMenu) {
				return null;
			}

			return _react2.default.createElement(
				'div',
				{ className: 'right-menu' },
				_react2.default.createElement(
					_materialUi.IconMenu,
					{
						iconButtonElement: _react2.default.createElement(
							_materialUi.IconButton,
							null,
							_react2.default.createElement(_moreVert2.default, null)
						),
						anchorOrigin: { horizontal: 'left', vertical: 'top' },
						targetOrigin: { horizontal: 'left', vertical: 'top' }
					},
					this.props.rightMenu
				)
			);
		}
	}, {
		key: 'renderHeaderLeftIcon',
		value: function renderHeaderLeftIcon() {

			if (!this.props.leftIcon) {
				return null;
			}

			return _react2.default.createElement(
				'div',
				{ className: 'left-icon' },
				this.props.leftIcon
			);
		}
	}, {
		key: 'touchHeaderTitle',
		value: function touchHeaderTitle() {
			// this.setState({
			// 	openBody:!this.state.openBody
			// });
		}
	}, {
		key: 'renderSectionTitle',
		value: function renderSectionTitle() {

			if (!this.props.title) {
				return null;
			}

			return _react2.default.createElement(
				'div',
				{ className: 'section-title' },
				this.renderHeaderLeftIcon(),
				_react2.default.createElement(
					'div',
					{ className: 'title', onTouchTap: this.touchHeaderTitle },
					this.props.title
				),
				_react2.default.createElement(
					'div',
					{ className: 'right-element' },
					this.renderRightElement()
				),
				_react2.default.createElement(
					'div',
					{ className: 'right-menu' },
					this.renderRightMenu()
				)
			);
		}
	}, {
		key: 'renderBody',
		value: function renderBody() {
			var _props = this.props,
			    children = _props.children,
			    bodyPadding = _props.bodyPadding;


			if (!this.state.openBody) {
				return null;
			}
			var height = this.props.height;

			var bodyStyles = {
				height: 'auto'
			};

			if (height) {
				bodyStyles.height = height + 'px';
				bodyStyles.overflowY = 'auto';
			}
			if (bodyPadding) {
				bodyStyles.padding = bodyPadding;
			}

			return _react2.default.createElement(
				'div',
				{ className: 'section-body', style: bodyStyles },
				this.props.children
			);
		}
	}, {
		key: 'renderDescription',
		value: function renderDescription() {

			return _react2.default.createElement(
				'div',
				{ className: 'section-description' },
				this.props.description
			);
		}
	}, {
		key: 'render',
		value: function render() {
			var _props2 = this.props,
			    style = _props2.style,
			    hide = _props2.hide,
			    children = _props2.children,
			    headerStyle = _props2.headerStyle;


			if (hide) {
				return _react2.default.createElement(
					'div',
					null,
					children
				);
			}

			return _react2.default.createElement(
				'div',
				{ className: 'section', style: style },
				_react2.default.createElement(
					'div',
					{ className: 'section-header', style: headerStyle },
					this.renderSectionTitle(),
					this.renderDescription()
				),
				this.renderBody()
			);
		}
	}]);

	return Section;
}(_react.Component);

Section.propTypes = {
	children: _react2.default.PropTypes.node,
	title: _react2.default.PropTypes.string.isRequired,
	description: _react2.default.PropTypes.string,
	leftIcon: _react2.default.PropTypes.node,
	rightMenu: _react2.default.PropTypes.node,
	height: _react2.default.PropTypes.number,
	style: _react2.default.PropTypes.object,
	headerStyle: _react2.default.PropTypes.object,
	hide: _react2.default.PropTypes.bool,
	bodyPadding: _react2.default.PropTypes.string
};
exports.default = Section;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(Section, 'Section', '/Users/smile/Documents/kr-admin/src/Components/Section/index.js');
}();

;