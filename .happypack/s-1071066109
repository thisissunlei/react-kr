'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CalendarDay = function (_React$Component) {
	_inherits(CalendarDay, _React$Component);

	function CalendarDay(props) {
		_classCallCheck(this, CalendarDay);

		var _this = _possibleConstructorReturn(this, (CalendarDay.__proto__ || Object.getPrototypeOf(CalendarDay)).call(this, props));

		_this.onClick = function () {
			var _this$props = _this.props,
			    value = _this$props.value,
			    onClick = _this$props.onClick;

			onClick && onClick(value);
		};

		return _this;
	}

	_createClass(CalendarDay, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    value = _props.value,
			    date = _props.date;


			var classNames = 'calendar-day';

			if (date == value) {
				classNames += ' day-active';
			} else {
				classNames = 'calendar-day';
			}

			return _react2.default.createElement(
				'span',
				{ className: classNames, onClick: this.onClick },
				value
			);
		}
	}]);

	return CalendarDay;
}(_react2.default.Component);

CalendarDay.displayName = 'CalendarDay';
CalendarDay.propTypes = {
	/**
 *样式class类名
 */
	className: _react2.default.PropTypes.string,
	/**
 * 样式
 */
	style: _react2.default.PropTypes.object,
	value: _react2.default.PropTypes.any,
	onClick: _react2.default.PropTypes.func
};
exports.default = CalendarDay;