'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _simpleAssign = require('simple-assign');

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _reactAddonsPureRenderMixin = require('react-addons-pure-render-mixin');

var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);

var _reduxForm = require('redux-form');

var _Redux = require('kr/Redux');

var _mobxReact = require('mobx-react');

var _krUi = require('kr-ui');

var _Utils = require('kr/Utils');

var _Utils2 = _interopRequireDefault(_Utils);

var _State = require('../EditCustomerList/State');

var _State2 = _interopRequireDefault(_State);

var _State3 = require('./State');

var _State4 = _interopRequireDefault(_State3);

var _State5 = require('../NewVisitIndent/State.js');

var _State6 = _interopRequireDefault(_State5);

var _NewCustomerList = require('../NewCustomerList');

var _NewCustomerList2 = _interopRequireDefault(_NewCustomerList);

var _LookCustomerList = require('../LookCustomerList');

var _LookCustomerList2 = _interopRequireDefault(_LookCustomerList);

var _State7 = require('../LookCustomerList/State');

var _State8 = _interopRequireDefault(_State7);

var _SearchUpperForm = require('../SearchUpperForm');

var _SearchUpperForm2 = _interopRequireDefault(_SearchUpperForm);

var _EditCustomerList = require('../EditCustomerList');

var _EditCustomerList2 = _interopRequireDefault(_EditCustomerList);

var _NewIndent = require('../NewIndent');

var _NewIndent2 = _interopRequireDefault(_NewIndent);

var _EditIndent = require('../EditIndent');

var _EditIndent2 = _interopRequireDefault(_EditIndent);

var _NewVisitIndent = require('../NewVisitIndent');

var _NewVisitIndent2 = _interopRequireDefault(_NewVisitIndent);

var _SwitchPerson = require('../SwitchPerson');

var _SwitchPerson2 = _interopRequireDefault(_SwitchPerson);

var _QuitContinue = require('./QuitContinue');

var _QuitContinue2 = _interopRequireDefault(_QuitContinue);

var _OrderDelete = require('../OrderDelete');

var _OrderDelete2 = _interopRequireDefault(_OrderDelete);

var _State9 = require('../EditIndent/State');

var _State10 = _interopRequireDefault(_State9);

var _State11 = require('../NewIndent/State');

var _State12 = _interopRequireDefault(_State11);

require('./index.less');

var _State13 = require('../../../../../Components/KrField/TreeComponent/State');

var _State14 = _interopRequireDefault(_State13);

var _State15 = require('../../../../../Components/KrField/CityComponent/State');

var _State16 = _interopRequireDefault(_State15);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Personal = (0, _mobxReact.observer)(_class = function (_Component) {
	_inherits(Personal, _Component);

	function Personal(props, context) {
		_classCallCheck(this, Personal);

		var _this2 = _possibleConstructorReturn(this, (Personal.__proto__ || Object.getPrototypeOf(Personal)).call(this, props, context));

		_this2.switchNewMerchants = function () {
			var customerItem = ['sourceId', 'recommendName', 'recommendTel', 'stationNum', 'name', 'staionTypeId', 'tel', 'staionPrice', 'mail', 'intentionCommunityId', 'wechat', 'inTime', 'company', 'roundId', 'teamNum', 'amount', 'distinctId', 'projectName', 'projectCategoryId', 'detailAddress', 'deadline', 'website', 'companyIntroduce', 'remark'];
			customerItem.map(function (item, index) {
				_Redux.Store.dispatch((0, _reduxForm.change)('NewCustomerList', item, ''));
			});
			_Redux.Store.dispatch((0, _reduxForm.change)('NewCustomerList', 'hasOffice', 'NO'));
			_State4.default.switchNewCustomerList();
			// if(response.hasOffice=="YES"){
			// 	State.hasOfficeChange(true);
			// }else{
			// 	State.hasOfficeChange(false);
			// }
			_State14.default.listValue = "请选择项目类型";
			_State16.default.city = "请选择";
		};

		_this2.switchLookCustomerList = function () {
			_State4.default.switchLookCustomerList();
		};

		_this2.openEditCustomerList = function () {
			var listId = _State4.default.listId;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('get-edit-info', { id: listId })).then(function (response) {

				_Redux.Store.dispatch((0, _reduxForm.initialize)('EditCustomerList', response));
				if (!response.countyName) {
					_State4.default.editCity = response.provinceName + '/' + response.cityName;
				} else if (!response.countyName && !response.cityName && !response.countyName) {
					_State4.default.editCity = "";
				} else {
					_State4.default.editCity = response.provinceName + '/' + response.cityName + '/' + response.countyName;
				}
				if (response.sourceName.indexOf("介绍") != -1) {

					_State2.default.sourceCustomer = true;
				} else {
					_State2.default.sourceCustomer = false;
				}
				if (!response) {
					return;
				}
				if (response.hasOffice == "YES") {
					_State4.default.hasOfficeChange(true);
				} else {
					_State4.default.hasOfficeChange(false);
				}
				_State4.default.editprojectName = response.projectCategoryName;
			}).catch(function (err) {});
			_State4.default.switchEditCustomerList();
		};

		_this2.switchEditCustomerList = function () {
			_State4.default.switchEditCustomerList();
		};

		_this2.switchCustomerIndent = function () {
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'customerId', _State4.default.listId));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'visitType', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'visitTime', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'isContinue', 'YES'));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'linkName', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'linkTel', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'visitDetail', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'levelId', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'remark', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'reasonId', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'reasonOther', ''));
			_State6.default.noShowMatureTime();
			_State6.default.noShowOtherContinue();
			_State4.default.switchCustomerIndent();
		};

		_this2.openNewIndent = function () {
			_Redux.Store.dispatch((0, _reduxForm.initialize)('NewIndent', {}));
			_State4.default.orderNameInit(_State4.default.listId);
			_State4.default.switchNewIndent();
			_State4.default.isOpenIndent = true;
			_State12.default.cityLable = "";
		};

		_this2.switchNewIndent = function () {
			_State4.default.isOpenIndent = false;
			_State4.default.switchNewIndent();
		};

		_this2.openEditIndent = function (editIndentId) {
			var data = {};
			var orderReady = _this2.props.orderReady;

			_State4.default.editIndentIdChange(editIndentId);
			_State10.default.orderName = "";
			_State10.default.cityLable = "";
			data.mainBillId = editIndentId;

			var _this = _this2;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('get-simple-order', data)).then(function (response) {
				for (var i = 0; i < orderReady.communityCity.length; i++) {
					if (orderReady.communityCity[i].communityId == response.communityid) {
						response.cityid = orderReady.communityCity[i].cityId;
						_State4.default.cityNameIndent = orderReady.communityCity[i].cityName;

						break;
					}
				}
				data.cityid = orderReady.communityCity[i].cityId;
				data.mainbillname = response.mainbillname;
				data.communityid = "" + response.communityid;
				data.mainbilltype = response.mainbilltype;
				data.mainbilldesc = response.mainbilldesc;
				_Redux.Store.dispatch((0, _reduxForm.initialize)('EditIndent', data));
				_State4.default.mainbillname = response.mainbillname;
				_State4.default.customerName = response.customerName;
				_State4.default.orderCount = response.orderCount;
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
			_State4.default.switchEditIndent();
		};

		_this2.switchEditIndent = function (data) {
			_State4.default.switchEditIndent();
		};

		_this2.onOperation = function (type, itemDetail) {
			if (type == 'watch') {
				_State8.default.orderList(itemDetail.id);
				_State8.default.lookListId(itemDetail.id, 'PERSON');
				_State4.default.MerchantsListId(itemDetail.id);
				_State4.default.switchLookCustomerList();
				_State4.default.companyName = itemDetail.company;
			}
		};

		_this2.onSelect = function (value) {
			var arrItem = [];
			var loadData = _this2.state.loadData;

			if (loadData.length > 15) {
				value = value.splice(0, 15);
			}
			if (loadData.length <= 15) {
				value = value.splice(0, loadData.length);
			}
			for (var i = 0; i < value.length; i++) {
				var allId = value[i];
				arrItem.push(loadData[allId].id);
			}
			if (value.length > 0) {
				_State4.default.openPersonDialog = true;
				_this2.setState({
					dialogNum: value.length,
					arrItem: arrItem
				});
			} else {
				_State4.default.openPersonDialog = false;
			}
		};

		_this2.onLoaded = function (value) {
			var loadData = value.items;
			_this2.setState({
				loadData: loadData
			});
		};

		_this2.merClose = function () {
			_State4.default.openPersonDialog = false;
		};

		_this2.onSearchSubmit = function (params) {
			var obj = {
				company: params.content
			};
			_State4.default.searchParams = obj;
		};

		_this2.switchPersonSubmit = function (params) {
			var arrItem = _this2.state.arrItem;

			if (!params.receiveId) {
				return;
			}
			var switchData = {};
			switchData.receiveId = params.receiveId;
			switchData.ids = arrItem;
			switchData.operType = 'PERSON';
			_State4.default.switchSureSubmit(switchData);
		};

		_this2.openSearchUpperDialog = function () {
			_State4.default.searchParams.company = '';
			_State4.default.searchParams.createEndDate = '';
			_State4.default.searchParams.createStartDate = '';
			_State4.default.searchParams.intentionCityId = '';
			_State4.default.searchParams.intentionCommunityId = '';
			_State4.default.searchParams.levelId = '';
			_State4.default.searchParams.sourceId = '';
			_State4.default.searchUpperCustomer();
		};

		_this2.onSearchUpperSubmit = function (searchParams) {
			searchParams = (0, _simpleAssign2.default)({}, _State4.default.searchParams, searchParams);
			searchParams.time = +new Date();
			if (searchParams.createStartDate != '' && searchParams.createEndDate != '' && searchParams.createEndDate < searchParams.createStartDate) {
				_krUi.Message.error('开始时间不能大于结束时间');
				return;
			}
			if (searchParams.createStartDate == '' && searchParams.createEndDate != '') {
				searchParams.createStartDate = searchParams.createEndDate;
			}
			if (searchParams.createStartDate != '' && searchParams.createEndDate == '') {
				searchParams.createEndDate = searchParams.createStartDate;
			}
			_State4.default.searchParams = searchParams;
			_State4.default.searchUpperCustomer();
		};

		_this2.onExport = function (value) {
			_State4.default.exportData(value);
		};

		_this2.closeAllMerchants = function () {
			_State4.default.closeAllMerchants();
		};

		_this2.openSwitchDialog = function () {
			_State4.default.openSwitchGoDialog();
		};

		_this2.openQuitDialog = function () {
			_State4.default.openQuitContinue();
		};

		_this2.quitContinueSubmit = function () {
			var arrItem = _this2.state.arrItem;

			_State4.default.quitSubmit(arrItem);
		};

		_this2.openDeleteDialog = function () {
			_State4.default.openDeleteOrder();
		};

		_this2.state = {
			//选中的数量
			dialogNum: 0,
			//加载后的数据
			loadData: [],
			//选中的值
			arrItem: []
		};
		return _this2;
	}

	//新建页面的开关


	//查看页面开关

	//客户编辑页面开关

	//新增拜访记录的开关

	//打开新建订单页

	//新建订单页面的开关

	//打开编辑订单页


	//编辑订单页面的开关


	//查看相关操作


	//选中几项领取，转移等


	//加载所有数据


	//领取浮框的关闭


	//搜索


	_createClass(Personal, [{
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			_State4.default.openPersonDialog = false;
			if (nextProps.initSearch == 'p') {
				_State4.default.searchParams = {
					time: +new Date(),
					company: '',
					page: 1
				};
			}
		}

		//转移确定

		//高级查询

		//高级查询提交

		//导出


		//转移客户

		//取消客户跟进

		//取消跟进确定

		//订单删除

	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    dataReady = _props.dataReady,
			    searchParams = _props.searchParams,
			    orderReady = _props.orderReady;

			var blockStyle = {};
			if (_State4.default.openPersonDialog == true) {
				blockStyle = {
					display: 'inline-block'
				};
			} else {
				blockStyle = {
					display: 'none'
				};
			}
			return _react2.default.createElement(
				'div',
				{ className: 'm-personal', style: { paddingTop: 25 } },
				_react2.default.createElement(_krUi.Title, { value: '\u5BA2\u6237\u5217\u8868' }),
				_react2.default.createElement(
					'div',
					{ className: 'merchants-dialog', style: blockStyle },
					_react2.default.createElement(
						'div',
						{ className: 'selectCheck' },
						'\u5DF2\u9009\u4E2D',
						_react2.default.createElement(
							'span',
							{ className: 'dialog-number' },
							this.state.dialogNum
						),
						'\u9879'
					),
					_react2.default.createElement(
						'div',
						{ style: { marginRight: 20, display: 'inline-block' } },
						_react2.default.createElement(_krUi.Button, { label: '\u8F6C\u79FB', type: 'button', onTouchTap: this.openSwitchDialog })
					),
					_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88\u8DDF\u8FDB', type: 'button', cancle: true, style: { height: 29, minWidth: 80 }, onTouchTap: this.openQuitDialog }),
					_react2.default.createElement('span', { className: 'mer-close', onClick: this.merClose })
				),
				_react2.default.createElement(
					_krUi.Row,
					{ style: { marginBottom: 21 } },
					_react2.default.createElement(
						_krUi.Col,
						{
							align: 'left',
							style: { float: 'left' }
						},
						_react2.default.createElement(_krUi.Button, {
							label: '\u65B0\u5EFA\u5BA2\u6237',
							type: 'button',
							onTouchTap: this.switchNewMerchants
						})
					),
					_react2.default.createElement(
						_krUi.Col,
						{ align: 'right', style: { marginTop: 0, float: "right", marginRight: -10 } },
						_react2.default.createElement(
							_krUi.ListGroup,
							null,
							_react2.default.createElement(
								_krUi.ListGroupItem,
								null,
								_react2.default.createElement(_krUi.SearchForms, { placeholder: '\u8BF7\u8F93\u5165\u516C\u53F8\u540D\u79F0', inputName: 'per', onSubmit: this.onSearchSubmit })
							),
							_react2.default.createElement(
								_krUi.ListGroupItem,
								null,
								_react2.default.createElement(_krUi.Button, { searchClick: this.openSearchUpperDialog, type: 'search', searchStyle: { marginLeft: '20', marginTop: '3' } })
							)
						)
					)
				),
				_react2.default.createElement(
					_krUi.Table,
					{
						style: { marginTop: 8 },
						ajax: true,
						onOperation: this.onOperation,
						displayCheckbox: true,
						exportSwitch: true,
						onSelect: this.onSelect,
						onLoaded: this.onLoaded,
						onExport: this.onExport,
						ajaxParams: _State4.default.searchParams,
						ajaxUrlName: 'personalCustomers',
						ajaxFieldListName: 'items'
					},
					_react2.default.createElement(
						_krUi.TableHeader,
						null,
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u516C\u53F8\u540D\u79F0'
						),
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u610F\u5411\u57CE\u5E02'
						),
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u610F\u5411\u793E\u533A'
						),
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u610F\u5411\u5DE5\u4F4D\u6570'
						),
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u6765\u6E90'
						),
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u5BA2\u6237\u5206\u7C7B'
						),
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u9886\u53D6\u4EBA'
						),
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u521B\u5EFA\u65F6\u95F4'
						),
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u64CD\u4F5C'
						)
					),
					_react2.default.createElement(
						_krUi.TableBody,
						null,
						_react2.default.createElement(
							_krUi.TableRow,
							{ displayCheckbox: true },
							_react2.default.createElement(_krUi.TableRowColumn, { name: 'company', component: function component(value, oldValue) {
									var TooltipStyle = "";
									if (value.length == "") {
										TooltipStyle = "none";
									} else {
										TooltipStyle = "inline-block";
									}
									return _react2.default.createElement(
										'div',
										{ style: { display: TooltipStyle, paddingTop: 5 }, className: 'financeDetail-hover' },
										_react2.default.createElement(
											'span',
											{ className: 'tableOver', style: { maxWidth: 130, display: "inline-block", overflowX: "hidden", textOverflow: " ellipsis", whiteSpace: " nowrap" } },
											value
										),
										_react2.default.createElement(
											_krUi.Tooltip,
											{ offsetTop: 5, place: 'top' },
											value
										)
									);
								} }),
							_react2.default.createElement(_krUi.TableRowColumn, { name: 'intentionCityName' }),
							_react2.default.createElement(_krUi.TableRowColumn, { name: 'intentionCommunityName', component: function component(value, oldValue) {
									var TooltipStyle = "";
									if (value.length == "") {
										TooltipStyle = "none";
									} else {
										TooltipStyle = "inline-block";
									}
									return _react2.default.createElement(
										'div',
										{ style: { display: TooltipStyle, paddingTop: 5 }, className: 'financeDetail-hover' },
										_react2.default.createElement(
											'span',
											{ className: 'tableOver', style: { maxWidth: 130, display: "inline-block", overflowX: "hidden", textOverflow: " ellipsis", whiteSpace: " nowrap" } },
											value
										),
										_react2.default.createElement(
											_krUi.Tooltip,
											{ offsetTop: 5, place: 'top' },
											value
										)
									);
								} }),
							_react2.default.createElement(_krUi.TableRowColumn, { name: 'stationNum' }),
							_react2.default.createElement(_krUi.TableRowColumn, { name: 'sourceName', component: function component(value, oldValue) {
									var TooltipStyle = "";
									if (value.length == "") {
										TooltipStyle = "none";
									} else {
										TooltipStyle = "inline-block";
									}
									return _react2.default.createElement(
										'div',
										{ style: { display: TooltipStyle, paddingTop: 5 }, className: 'financeDetail-hover' },
										_react2.default.createElement(
											'span',
											{ className: 'tableOver', style: { maxWidth: 130, display: "inline-block", overflowX: "hidden", textOverflow: " ellipsis", whiteSpace: " nowrap" } },
											value
										),
										_react2.default.createElement(
											_krUi.Tooltip,
											{ offsetTop: 5, place: 'top' },
											value
										)
									);
								} }),
							_react2.default.createElement(_krUi.TableRowColumn, { name: 'levelName', component: function component(value, oldValue) {
									var TooltipStyle = "";
									if (value.length == "") {
										TooltipStyle = "none";
									} else {
										TooltipStyle = "inline-block";
									}
									return _react2.default.createElement(
										'div',
										{ style: { display: TooltipStyle, paddingTop: 5 }, className: 'financeDetail-hover' },
										_react2.default.createElement(
											'span',
											{ className: 'tableOver', style: { maxWidth: 130, display: "inline-block", overflowX: "hidden", textOverflow: " ellipsis", whiteSpace: " nowrap" } },
											value
										),
										_react2.default.createElement(
											_krUi.Tooltip,
											{ offsetTop: 5, place: 'top' },
											value
										)
									);
								} }),
							_react2.default.createElement(_krUi.TableRowColumn, { name: 'receiveName' }),
							_react2.default.createElement(_krUi.TableRowColumn, { name: 'createDate', type: 'date', component: function component(value, oldValue) {
									var show = "inline-block";
									if (value.length == 0) {
										show = "none";
									} else {
										show = "inline-block";
									}
									return _react2.default.createElement(
										'div',
										{ style: { display: "inline-block" } },
										_react2.default.createElement(
											'span',
											{ className: 'tableOver', style: { maxWidth: 130, marginTop: 5, display: "inline-block", overflowX: "hidden", textOverflow: " ellipsis", whiteSpace: " nowrap" } },
											_react2.default.createElement(_krUi.KrDate, { value: value, format: 'yyyy-mm-dd' }),
											_react2.default.createElement(
												'span',
												null,
												'...'
											)
										),
										_react2.default.createElement(
											_krUi.Tooltip,
											{ offsetTop: 10, place: 'top', style: { left: 50, display: show } },
											_react2.default.createElement(
												'div',
												null,
												_react2.default.createElement(_krUi.KrDate, { value: value, format: 'yyyy-mm-dd HH:MM:ss' })
											)
										)
									);
								} }),
							_react2.default.createElement(
								_krUi.TableRowColumn,
								{ type: 'operation' },
								_react2.default.createElement(_krUi.Button, { label: '\u67E5\u770B', type: 'operation', operation: 'watch' })
							)
						)
					),
					_react2.default.createElement(_krUi.TableFooter, null)
				),
				_react2.default.createElement(
					_krUi.Drawer,
					{
						open: _State4.default.openNewMerchants,
						width: 750,
						openSecondary: true,
						className: 'm-finance-drawer',
						containerStyle: { top: 60, paddingBottom: 48, zIndex: 20 }
					},
					_react2.default.createElement(_NewCustomerList2.default, {
						onSubmit: this.onNewMerchants,
						onCancel: this.switchNewMerchants,
						dataReady: dataReady,
						operType: 'PERSON'
					})
				),
				_react2.default.createElement(
					_krUi.Drawer,
					{
						open: _State4.default.openLookMerchants,
						width: 750,
						openSecondary: true,
						className: 'm-finance-drawer',
						containerStyle: { top: 60, paddingBottom: 228, zIndex: 20 }
					},
					_react2.default.createElement(_LookCustomerList2.default, {
						comeFrom: 'Personal',
						companyName: _State4.default.companyName,
						onCancel: this.switchLookCustomerList,
						listId: _State4.default.listId,
						dataReady: dataReady,
						editsSwitch: this.openEditCustomerList,
						IndentSwitch: this.switchCustomerIndent,
						newIndentSwitch: this.openNewIndent,
						editIndentSwitch: this.openEditIndent,
						DeleteSwitch: this.openDeleteDialog,
						operType: 'PERSON'
					})
				),
				_react2.default.createElement(
					_krUi.Drawer,
					{
						open: _State4.default.openEditCustomerList,
						width: 750,
						operType: 'PERSON',
						openSecondary: true,
						className: 'm-finance-drawer',
						containerStyle: { top: 60, paddingBottom: 48, zIndex: 20 }
					},
					_react2.default.createElement(_EditCustomerList2.default, {
						comeFrom: 'Merchant',
						onCancel: this.switchEditCustomerList,
						listId: _State4.default.listId,
						dataReady: dataReady,
						operType: 'PERSON',
						hasOffice: _State4.default.ishasOffice,
						cityName: _State4.default.editCity,
						listValue: _State4.default.editprojectName
					})
				),
				_react2.default.createElement(
					_krUi.Drawer,
					{
						open: _State4.default.openNewIndent,
						width: 750,
						openSecondary: true,
						className: 'm-finance-drawer',
						containerStyle: { top: 60, paddingBottom: 228, zIndex: 20 }
					},
					_react2.default.createElement(_NewIndent2.default, {
						companyName: _State4.default.companyName,
						onCancel: this.switchNewIndent,
						orderReady: orderReady,
						listId: _State4.default.listId,
						customerName: _State4.default.customerName,
						orderCount: _State4.default.orderCount,
						isOpenIndent: _State4.default.orderName
					})
				),
				_react2.default.createElement(
					_krUi.Drawer,
					{
						open: _State4.default.openEditIndent,
						width: 750,
						openSecondary: true,
						className: 'm-finance-drawer',
						listId: _State4.default.listId,
						containerStyle: { top: 60, paddingBottom: 228, zIndex: 20 }
					},
					_react2.default.createElement(_EditIndent2.default, {
						companyName: _State4.default.companyName,
						onCancel: this.switchEditIndent,
						listId: _State4.default.listId,
						orderReady: orderReady,
						editIndentData: _State4.default.editIndentData,
						editIndentId: _State4.default.editIndentId,

						customerName: _State4.default.customerName,
						orderCount: _State4.default.orderCount,
						mainbillname: _State4.default.mainbillname,
						cityNameIndent: _State4.default.cityNameIndent,
						listValue: _State4.default.editprojectName
					})
				),
				_react2.default.createElement(
					_krUi.Drawer,
					{
						open: _State4.default.openNewCustomerIndent,
						width: 750,
						openSecondary: true,
						className: 'm-finance-drawer',
						containerStyle: { top: 60, paddingBottom: 228, zIndex: 20 }
					},
					_react2.default.createElement(_NewVisitIndent2.default, {
						comeFrom: 'Merchant',
						onCancel: this.switchCustomerIndent,
						listId: _State4.default.listId,
						operType: 'PERSON',
						selectDatas: dataReady,
						companyName: _State4.default.companyName
					})
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u9AD8\u7EA7\u67E5\u8BE2',
						modal: true,
						operType: 'PERSON',
						onClose: this.openSearchUpperDialog,
						open: _State4.default.openSearchUpper,
						contentStyle: { width: '666', height: '458px', overflow: 'visible' }

					},
					_react2.default.createElement(_SearchUpperForm2.default, {
						onCancel: this.openSearchUpperDialog,
						onSubmit: this.onSearchUpperSubmit,
						flag: '\u4E2A\u4EBA',
						searchParams: searchParams
					})
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u8F6C\u79FB\u5BA2\u6237',
						modal: true,
						onClose: this.openSwitchDialog,
						open: _State4.default.openSwitch,
						contentStyle: { width: '444', height: '284', overflow: 'visible' }
					},
					_react2.default.createElement(_SwitchPerson2.default, {
						onSubmit: this.switchPersonSubmit,
						onCancel: this.openSwitchDialog,
						customerIds: this.state.dialogNum
					})
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u53D6\u6D88\u5BA2\u6237\u8DDF\u8FDB',
						modal: true,
						onClose: this.openQuitDialog,
						open: _State4.default.openQuit,
						contentStyle: { width: '445', height: '230' }
					},
					_react2.default.createElement(_QuitContinue2.default, {
						onSubmit: this.quitContinueSubmit,
						onCancel: this.openQuitDialog
					})
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u63D0\u793A',
						modal: true,
						onClose: this.openDeleteDialog,
						open: _State4.default.openDelete,
						contentStyle: { width: '445', height: '230' }
					},
					_react2.default.createElement(_OrderDelete2.default, {
						onCancel: this.openDeleteDialog,
						orderId: _State4.default.deleteId,
						operType: 'PERSON',
						listId: _State4.default.listId

					})
				),
				(_State4.default.openNewMerchants || _State4.default.openEditMerchants || _State4.default.openLookMerchants || _State4.default.openEditCustomerList || _State4.default.openNewCustomerIndent || _State4.default.openNewIndent || _State4.default.openEditIndent) && _react2.default.createElement('div', { className: 'mask',
					onClick: this.closeAllMerchants
				})
			);
		}
	}]);

	return Personal;
}(_react.Component)) || _class;

var _default = Personal;
exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(Personal, 'Personal', '/Users/liuyihao/Code/kr-admin/src/Containers/Operation/CustomerManage/CustomerList/Personal/index.js');

	__REACT_HOT_LOADER__.register(_default, 'default', '/Users/liuyihao/Code/kr-admin/src/Containers/Operation/CustomerManage/CustomerList/Personal/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,