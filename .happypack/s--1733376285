'use strict';

var _mobx = require('mobx');

var _mobx2 = _interopRequireDefault(_mobx);

var _Redux = require('kr/Redux');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var State = (0, _mobx.observable)({
	detail: [],
	matureTime: false,
	selectData: {
		communityBaselist: [],
		customerSourceList: [],
		giveupList: [],
		levelList: [],
		roundList: [],
		stationTypeList: [],
		visitTypeList: []
	},
	orderReady: [],
	community: [],
	city: [],
	orderFound: [],
	isInit: false,
	orderName: "",
	everyid: '',
	cityLable: ""

});
//select下拉数组的初始化
State.selectDataInit = (0, _mobx.action)(function (params) {
	this.selectData = params;
});
//显示到期时间
State.showMatureTime = (0, _mobx.action)(function () {
	this.matureTime = true;
});

//不显示到期时间
State.noShowMatureTime = (0, _mobx.action)(function () {
	this.matureTime = false;
});
//
State.changeEveryid = (0, _mobx.action)(function (params) {
	this.everyid = params;
});
//所在城市
State.cityLableChange = (0, _mobx.action)(function (params) {
	this.cityLable = params;
});

//下拉框的数据初始化
State.orderReady = (0, _mobx.action)(function (params) {
	if (this.isInit) {
		return;
	}
	if (!params) {
		return;
	}
	var communityArr = [];
	var cityArr = [];
	var isCity = {};
	if (!params.communityCity) {
		return;
	}
	if (!params.sysDicPayments) {
		return;
	}
	for (var i = 0; i < params.communityCity.length; i++) {
		var communityObject = {};
		var cityObject = {};
		communityObject.value = params.communityCity[i].communityId;
		communityObject.label = params.communityCity[i].communityName;
		this.community.push(communityObject);
		if (!isCity[params.communityCity[i].cityName]) {
			cityObject.value = params.communityCity[i].cityId;
			cityObject.label = params.communityCity[i].cityName;
			this.city.push(cityObject);
			isCity[params.communityCity[i].cityName] = true;
		}
	}
	for (var i = 0; i < params.sysDicPayments.length; i++) {
		var orderFoundOb = {};
		orderFoundOb.value = params.sysDicPayments[i].id;
		orderFoundOb.label = params.sysDicPayments[i].dicName;
		this.orderFound.push(orderFoundOb);
	}
	this.orderReady = params;

	this.isInit = true;
});

module.exports = State;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(State, 'State', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Operation/CustomerManage/CustomerList/EditIndent/State.js');
}();

;