{"version":3,"sources":["src/Components/DatePicker/utils/events.js"],"names":["once","el","type","callback","typeArray","split","recursiveFunction","event","target","removeEventListener","i","length","on","addEventListener","attachEvent","call","off","detachEvent","isKeyboard","indexOf"],"mappings":";;;;;eAAe;AAEbA,MAFa,gBAERC,EAFQ,EAEJC,IAFI,EAEEC,QAFF,EAEY;AACvB,QAAMC,YAAYF,OAAOA,KAAKG,KAAL,CAAW,GAAX,CAAP,GAAyB,EAA3C;AACA,QAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnCA,YAAMC,MAAN,CAAaC,mBAAb,CAAiCF,MAAML,IAAvC,EAA6CI,iBAA7C;AACA,aAAOH,SAASI,KAAT,CAAP;AACD,KAHD;;AAKA,SAAK,IAAIG,IAAIN,UAAUO,MAAV,GAAmB,CAAhC,EAAmCD,KAAK,CAAxC,EAA2CA,GAA3C,EAAgD;AAC9C,WAAKE,EAAL,CAAQX,EAAR,EAAYG,UAAUM,CAAV,CAAZ,EAA0BJ,iBAA1B;AACD;AACF,GAZY;AAcbM,IAda,cAcVX,EAdU,EAcNC,IAdM,EAcAC,QAdA,EAcU;AACrB,QAAIF,GAAGY,gBAAP,EAAyB;AACvBZ,SAAGY,gBAAH,CAAoBX,IAApB,EAA0BC,QAA1B;AACD,KAFD,MAEO;AACL;AACAF,SAAGa,WAAH,QAAoBZ,IAApB,EAA4B,YAAM;AAChCC,iBAASY,IAAT,CAAcd,EAAd;AACD,OAFD;AAGD;AACF,GAvBY;AAyBbe,KAzBa,eAyBTf,EAzBS,EAyBLC,IAzBK,EAyBCC,QAzBD,EAyBW;AACtB,QAAIF,GAAGQ,mBAAP,EAA4B;AAC1BR,SAAGQ,mBAAH,CAAuBP,IAAvB,EAA6BC,QAA7B;AACD,KAFD,MAEO;AACL;AACAF,SAAGgB,WAAH,QAAoBf,IAApB,EAA4BC,QAA5B;AACD;AACF,GAhCY;AAkCbe,YAlCa,sBAkCFX,KAlCE,EAkCK;AAChB,WAAO,CACL,SADK,EAEL,UAFK,EAGL,OAHK,EAILY,OAJK,CAIGZ,MAAML,IAJT,MAImB,CAAC,CAJ3B;AAKD;AAxCY,C","file":"events.js","sourceRoot":"/Users/liuyihao/Code/kr-admin","sourcesContent":["export default {\n\n  once(el, type, callback) {\n    const typeArray = type ? type.split(' ') : [];\n    const recursiveFunction = (event) => {\n      event.target.removeEventListener(event.type, recursiveFunction);\n      return callback(event);\n    };\n\n    for (let i = typeArray.length - 1; i >= 0; i--) {\n      this.on(el, typeArray[i], recursiveFunction);\n    }\n  },\n\n  on(el, type, callback) {\n    if (el.addEventListener) {\n      el.addEventListener(type, callback);\n    } else {\n      // IE8+ Support\n      el.attachEvent(`on${type}`, () => {\n        callback.call(el);\n      });\n    }\n  },\n\n  off(el, type, callback) {\n    if (el.removeEventListener) {\n      el.removeEventListener(type, callback);\n    } else {\n      // IE8+ Support\n      el.detachEvent(`on${type}`, callback);\n    }\n  },\n\n  isKeyboard(event) {\n    return [\n      'keydown',\n      'keypress',\n      'keyup',\n    ].indexOf(event.type) !== -1;\n  },\n};\n"]}