'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class;

var _simpleAssign = require('simple-assign');

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Redux = require('kr/Redux');

var _jqueryParam = require('jquery-param');

var _jqueryParam2 = _interopRequireDefault(_jqueryParam);

var _reduxForm = require('redux-form');

var _reactBinding = require('react-binding');

var _reactMixin = require('react-mixin');

var _reactMixin2 = _interopRequireDefault(_reactMixin);

var _reactAddonsLinkedStateMixin = require('react-addons-linked-state-mixin');

var _reactAddonsLinkedStateMixin2 = _interopRequireDefault(_reactAddonsLinkedStateMixin);

var _dateformat = require('dateformat');

var _dateformat2 = _interopRequireDefault(_dateformat);

var _nzh = require('nzh');

var _nzh2 = _interopRequireDefault(_nzh);

var _AllStation = require('./AllStation');

var _AllStation2 = _interopRequireDefault(_AllStation);

var _krUi = require('kr-ui');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NewCreateForm = (_dec = _reactMixin2.default.decorate(_reactAddonsLinkedStateMixin2.default), _dec(_class = function (_Component) {
	_inherits(NewCreateForm, _Component);

	function NewCreateForm(props, context) {
		_classCallCheck(this, NewCreateForm);

		//stationsRefs表单
		var _this2 = _possibleConstructorReturn(this, (NewCreateForm.__proto__ || Object.getPrototypeOf(NewCreateForm)).call(this, props, context));

		_this2.setAllRent = function (list) {
			var _this = _this2;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('getAllRent', {}, { stationList: JSON.stringify(list) })).then(function (response) {
				_this.setState({
					allRent: response
				});
			}).catch(function (err) {
				_krUi.Notify.show([{
					message: err.message,
					type: 'danger'
				}]);
			});
		};

		_this2.getSingleRent = function (item) {
			//年月日
			var mounth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
			var rentBegin = (0, _dateformat2.default)(item.leaseBeginDate, "yyyy-mm-dd").split('-');
			var rentEnd = (0, _dateformat2.default)(item.leaseEndDate, "yyyy-mm-dd").split('-');
			var rentDay = 0;
			var rentMounth = (rentEnd[0] - rentBegin[0]) * 12 + (rentEnd[1] - rentBegin[1]);
			var years = rentEnd[0];
			if (rentBegin[2] - rentEnd[2] == 1) {
				rentDay = 0;
			} else {
				var a = rentEnd[2] - rentBegin[2];
				console.log('a', a);
				if (a >= 0) {
					rentDay = a + 1;
				} else {
					var mounthIndex = rentEnd[1] - 1;
					if (years % 4 == 0 && years % 100 != 0 || years % 400 == 0 && rentEnd[1] == 2) {
						rentDay = mounth[mounthIndex] + 2 + a;
					}
					rentDay = mounth[mounthIndex] + 1 + a;
					rentMounth = rentMounth - 1;
				}
			}
			console.log('day', rentMounth, rentDay);
			//计算日单价
			var rentPriceByDay = (item.unitprice * 12 / 365).toFixed(6);
			//工位总价钱
			var allRent = rentPriceByDay * rentDay + rentMounth * item.unitprice;
			allRent = allRent.toFixed(2) * 1;
			console.log('allRent', allRent, rentPriceByDay);
			return allRent;
		};

		_this2.dealRentName = function (allRent) {
			var name = '';
			var nzhcn = _nzh2.default.cn;
			if (!allRent) {
				return '零';
			}
			var allRentName = nzhcn.encodeB(parseFloat(allRent));
			var allRentNameArray = allRentName.split('点');
			if (allRentNameArray.length == 1) {
				name = allRentNameArray[0] + '元整';
			} else {
				var xiaoshu = allRentNameArray[1];
				name = allRentNameArray[0] + '元' + xiaoshu[0] + '角';
				if (xiaoshu[1]) {
					name = name + xiaoshu[1] + '分';
				}
			}
			return name;
		};

		_this2.stationRefs = {};

		_this2.onCancel = _this2.onCancel.bind(_this2);
		_this2.onSubmit = _this2.onSubmit.bind(_this2);

		_this2.onStationSubmit = _this2.onStationSubmit.bind(_this2);
		_this2.onStationCancel = _this2.onStationCancel.bind(_this2);

		_this2.onStationDelete = _this2.onStationDelete.bind(_this2);
		_this2.onStationSelect = _this2.onStationSelect.bind(_this2);

		_this2.openStationDialog = _this2.openStationDialog.bind(_this2);
		_this2.onStationUnitPrice = _this2.onStationUnitPrice.bind(_this2);
		_this2.openStationUnitPriceDialog = _this2.openStationUnitPriceDialog.bind(_this2);
		_this2.onChangeSearchPersonel = _this2.onChangeSearchPersonel.bind(_this2);
		_this2.onStationVosChange = _this2.onStationVosChange.bind(_this2);
		_this2.state = {
			originStationVos: [],
			stationVos: [],
			delStationVos: [],
			selectedStation: [],
			openStation: false,
			openStationUnitPrice: false,
			allRent: '-1'
		};

		return _this2;
	}

	_createClass(NewCreateForm, [{
		key: 'onStationVosChange',
		value: function onStationVosChange(index, value) {
			var stationVos = this.state.stationVos;

			stationVos[index].unitprice = value;
			this.setState({
				stationVos: stationVos
			});
		}

		//录入单价dialog

	}, {
		key: 'openStationUnitPriceDialog',
		value: function openStationUnitPriceDialog() {
			this.setState({
				openStationUnitPrice: !this.state.openStationUnitPrice
			});
		}

		//录入单价

	}, {
		key: 'onStationUnitPrice',
		value: function onStationUnitPrice(form) {

			var value = form.price;
			var _state = this.state,
			    stationVos = _state.stationVos,
			    selectedStation = _state.selectedStation;


			stationVos = stationVos.map(function (item, index) {
				if (selectedStation.indexOf(index) != -1) {
					item.unitprice = value;
				}
				return item;
			});

			this.setState({
				stationVos: stationVos
			});

			this.openStationUnitPriceDialog();
		}
	}, {
		key: 'onChangeSearchPersonel',
		value: function onChangeSearchPersonel(personel) {
			_Redux.Store.dispatch((0, _reduxForm.change)('reduceCreateForm', 'lessorContacttel', personel.mobile));
		}

		// station list

	}, {
		key: 'onStationCancel',
		value: function onStationCancel() {
			this.openStationDialog();
		}
	}, {
		key: 'onStationSubmit',
		value: function onStationSubmit(stationVos) {
			var _this = this;
			var allRent = 0;
			this.setAllRent(stationVos);
			this.setState({
				stationVos: stationVos
			});

			this.openStationDialog();
		}
	}, {
		key: 'onStationDelete',


		//删除工位
		value: function onStationDelete() {
			var _state2 = this.state,
			    selectedStation = _state2.selectedStation,
			    stationVos = _state2.stationVos,
			    delStationVos = _state2.delStationVos;


			stationVos = stationVos.filter(function (item, index) {
				if (selectedStation.indexOf(index) != -1) {
					delStationVos.push(item);
					return false;
				}
				return true;
			});
			var _this = this;
			var allRent = 0;
			this.setAllRent(stationVos);

			this.setState({
				stationVos: stationVos,
				delStationVos: delStationVos,
				allRent: allRent
			});
		}
	}, {
		key: 'onStationSelect',
		value: function onStationSelect(selectedStation) {
			this.setState({
				selectedStation: selectedStation
			});
		}
	}, {
		key: 'openStationDialog',
		value: function openStationDialog() {
			this.setState({
				openStation: !this.state.openStation
			});
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			var initialValues = this.props.initialValues;

			console.log('=====>', this.props.initialValues);
			_Redux.Store.dispatch((0, _reduxForm.initialize)('reduceCreateForm', initialValues));
		}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			if (!this.isInit && nextProps.stationVos.length) {
				var stationVos = nextProps.stationVos;
				var originStationVos = [].concat(stationVos);
				this.setState({
					stationVos: stationVos,
					originStationVos: originStationVos
				});
				this.isInit = true;
			};
		}
	}, {
		key: 'onSubmit',
		value: function onSubmit(form) {
			console.log('fffff');

			form = (0, _simpleAssign2.default)({}, form);

			var _props = this.props,
			    changeValues = _props.changeValues,
			    initialValues = _props.initialValues;
			var _state3 = this.state,
			    stationVos = _state3.stationVos,
			    delStationVos = _state3.delStationVos,
			    originStationVos = _state3.originStationVos;


			delStationVos = originStationVos.filter(function (origin) {
				var isOk = true;
				stationVos.map(function (station) {
					if (station.id == origin.id) {
						isOk = false;
					}
				});
				return isOk;
			});
			// form.contractmark = '';
			if (typeof form.contractmark == 'undefined') {
				form.contractmark = '';
			}

			form.leaseBegindate = (0, _dateformat2.default)(stationVos[0].leaseBeginDate, "yyyy-mm-dd hh:MM:ss");
			form.leaseEnddate = (0, _dateformat2.default)(stationVos[0].leaseEndDate, "yyyy-mm-dd hh:MM:ss");
			form.signdate = (0, _dateformat2.default)(form.signdate, "yyyy-mm-dd hh:MM:ss");
			form.lessorAddress = changeValues.lessorAddress;
			form.firstpaydate = (0, _dateformat2.default)(form.firstpaydate, "yyyy-mm-dd hh:MM:ss");
			form.lessorContactid = form.lessorContactid;
			form.totalrent = this.state.allRent != '-1' ? this.state.allRent : initialValues.totalrent;

			form.stationVos = JSON.stringify(stationVos);
			form.delStationVos = JSON.stringify(delStationVos);
			console.log('contractmark', form);
			var onSubmit = this.props.onSubmit;

			onSubmit && onSubmit(form);
		}
	}, {
		key: 'onCancel',
		value: function onCancel() {
			var onCancel = this.props.onCancel;

			onCancel && onCancel();
		}
	}, {
		key: 'render',
		value: function render() {
			var _props2 = this.props,
			    error = _props2.error,
			    handleSubmit = _props2.handleSubmit,
			    pristine = _props2.pristine,
			    reset = _props2.reset,
			    submitting = _props2.submitting,
			    initialValues = _props2.initialValues,
			    changeValues = _props2.changeValues,
			    optionValues = _props2.optionValues;
			var fnaCorporationList = optionValues.fnaCorporationList;


			fnaCorporationList && fnaCorporationList.map(function (item, index) {
				if (initialValues.leaseId == item.id) {
					changeValues.lessorAddress = item.corporationAddress;
				}
			});

			var _state4 = this.state,
			    stationVos = _state4.stationVos,
			    allRent = _state4.allRent;

			allRent = allRent != '-1' ? allRent : initialValues.totalrent;
			var allRentName = this.dealRentName(allRent);

			return _react2.default.createElement(
				_krUi.Paper,
				{ width: 968 },
				_react2.default.createElement(
					'form',
					{ onSubmit: handleSubmit(this.onSubmit) },
					_react2.default.createElement(
						_krUi.CircleStyle,
						{ num: 1, info: '\u79DF\u8D41\u660E\u7EC6' },
						_react2.default.createElement(
							'div',
							{ className: 'detailList', style: { marginTop: '-50px' } },
							_react2.default.createElement(
								_krUi.DotTitle,
								{ title: '\u79DF\u8D41\u660E\u7EC6' },
								_react2.default.createElement(
									_krUi.Grid,
									{ style: { marginTop: '-40px' } },
									_react2.default.createElement(
										_krUi.Row,
										null,
										_react2.default.createElement(
											_krUi.Col,
											{ align: 'right' },
											_react2.default.createElement(
												_krUi.ButtonGroup,
												null,
												_react2.default.createElement(_krUi.Button, { label: '\u5220\u9664', onTouchTap: this.onStationDelete }),
												_react2.default.createElement(_krUi.Button, { label: '\u7EED\u79DF', onTouchTap: this.openStationDialog })
											)
										)
									)
								),
								_react2.default.createElement(
									'div',
									{ style: { marginTop: "-10px" } },
									_react2.default.createElement(
										_krUi.Table,
										{ displayCheckbox: true, onSelect: this.onStationSelect },
										_react2.default.createElement(
											_krUi.TableHeader,
											null,
											_react2.default.createElement(
												_krUi.TableHeaderColumn,
												null,
												'\u7C7B\u522B'
											),
											_react2.default.createElement(
												_krUi.TableHeaderColumn,
												null,
												'\u7F16\u53F7\uFF0F\u540D\u79F0'
											),
											_react2.default.createElement(
												_krUi.TableHeaderColumn,
												null,
												'\u5355\u4EF7(\u5143/\u6708)'
											),
											_react2.default.createElement(
												_krUi.TableHeaderColumn,
												null,
												'\u7EED\u79DF\u5F00\u59CB\u65F6\u95F4'
											),
											_react2.default.createElement(
												_krUi.TableHeaderColumn,
												null,
												'\u7EED\u79DF\u7ED3\u675F\u65E5\u671F'
											)
										),
										_react2.default.createElement(
											_krUi.TableBody,
											null,
											stationVos.map(function (item, index) {
												return _react2.default.createElement(
													_krUi.TableRow,
													{ key: index },
													_react2.default.createElement(
														_krUi.TableRowColumn,
														null,
														item.stationType == 1 ? '工位' : '会议室'
													),
													_react2.default.createElement(
														_krUi.TableRowColumn,
														null,
														item.stationName
													),
													_react2.default.createElement(
														_krUi.TableRowColumn,
														null,
														item.unitprice
													),
													_react2.default.createElement(
														_krUi.TableRowColumn,
														null,
														' ',
														_react2.default.createElement(_krUi.KrDate, { value: item.leaseBeginDate })
													),
													_react2.default.createElement(
														_krUi.TableRowColumn,
														null,
														_react2.default.createElement(_krUi.KrDate, { value: item.leaseEndDate })
													)
												);
											})
										)
									)
								)
							),
							_react2.default.createElement(
								'div',
								{ style: { marginTop: '-20px', marginBottom: 60 } },
								'\u670D\u52A1\u8D39\u603B\u8BA1\uFF1A',
								_react2.default.createElement(
									'span',
									{ style: { marginRight: 50, color: 'red' } },
									'\uFFE5',
									allRent
								),
								_react2.default.createElement(
									'span',
									null,
									allRentName
								)
							)
						)
					),
					_react2.default.createElement(
						_krUi.CircleStyle,
						{ num: 2, info: '\u5408\u540C\u6587\u672C\u4FE1\u606F', circle: 'bottom' },
						_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'mainbillid', type: 'hidden', component: 'input' }),
						_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'contractstate', type: 'hidden', component: 'input' }),
						_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'contracttype', type: 'hidden', component: 'input' }),
						_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'contractVersionType', type: 'hidden', component: 'input' }),
						_react2.default.createElement(_krUi.KrField, { name: 'leaseId', style: { width: 370, marginLeft: 70 }, component: 'select', label: '\u51FA\u79DF\u65B9', options: optionValues.fnaCorporationList, requireLabel: true }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 90 }, name: 'lessorAddress', type: 'text', component: 'labelText', label: '\u5730\u5740', inline: false, value: changeValues.lessorAddress, defaultValue: '\u65E0' }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 70 }, name: 'lessorContactid', component: 'searchPersonel', label: '\u8054\u7CFB\u4EBA', onChange: this.onChangeSearchPersonel, placeholder: optionValues.lessorContactName, requireLabel: true }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 90 }, name: 'lessorContacttel', type: 'text', component: 'input', label: '\u7535\u8BDD', requireLabel: true,
							requiredValue: true, pattern: /(^((\+86)|(86))?[1][3456789][0-9]{9}$)|(^(0\d{2,3}-\d{7,8})(-\d{1,4})?$)/, errors: { requiredValue: '电话号码为必填项', pattern: '请输入正确电话号' } }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 70 }, component: 'labelText', label: '\u627F\u79DF\u65B9', inline: false, value: optionValues.customerName, requireLabel: true }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 90 }, name: 'leaseAddress', type: 'text', component: 'input', label: '\u5730\u5740', requireLabel: true,
							requiredValue: true, pattern: /^.{0,120}$/, errors: { requiredValue: '地址为必填项', pattern: '地址最大60位' } }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 70 }, name: 'leaseContact', type: 'text', component: 'input', label: '\u8054\u7CFB\u4EBA', requireLabel: true,
							requiredValue: true, pattern: /^.{0,20}$/, errors: { requiredValue: '联系人为必填项', pattern: '联系人最大20位' } }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 90 }, name: 'leaseContacttel', type: 'text', component: 'input', label: '\u7535\u8BDD', requireLabel: true,
							requiredValue: true, pattern: /(^((\+86)|(86))?[1][3456789][0-9]{9}$)|(^(0\d{2,3}-\d{7,8})(-\d{1,4})?$)/, errors: { requiredValue: '电话号码为必填项', pattern: '请输入正确电话号' } }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 70 }, name: 'communityid', component: 'labelText', label: '\u6240\u5C5E\u793E\u533A', inline: false, value: optionValues.communityName }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 90 }, name: 'communityAddress', component: 'labelText', label: '\u5730\u5740', inline: false, value: optionValues.communityAddress }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 70 }, name: 'contractcode', type: 'text', component: 'input', label: '\u5408\u540C\u7F16\u53F7', requireLabel: true,
							requiredValue: true, pattern: /^.{0,50}$/, errors: { requiredValue: '合同编号为必填项', pattern: '合同编号最大50位' } }),
						_react2.default.createElement(_krUi.KrField, { name: 'paymodel', style: { width: 370, marginLeft: 90 }, component: 'select', label: '\u4ED8\u6B3E\u65B9\u5F0F', options: optionValues.paymentList, requireLabel: true }),
						_react2.default.createElement(_krUi.KrField, { name: 'paytype', style: { width: 370, marginLeft: 70 }, component: 'select', label: '\u652F\u4ED8\u65B9\u5F0F', options: optionValues.payTypeList }),
						_react2.default.createElement(_krUi.KrField, { name: 'firstpaydate', style: { width: 370, marginLeft: 90 }, component: 'date', label: '\u9996\u4ED8\u6B3E\u65F6\u95F4', requireLabel: true }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 70 }, name: 'signdate', component: 'date', label: '\u7B7E\u7F72\u65F6\u95F4', requireLabel: true }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 90 }, name: 'totalrent', type: 'text', component: 'labelText', label: '\u79DF\u91D1\u603B\u989D', placeholder: '', inline: false, value: allRent, defaultValue: initialValues.totalrent, requireLabel: true,
							requiredValue: true, pattern: /^\d{0,16}(\.\d{0,2})?$/, errors: { requiredValue: '租金总额为必填项', pattern: '请输入正数金额，小数点后最多两位' } }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 370, marginLeft: 70 }, name: 'totaldeposit', type: 'text', component: 'input', label: '\u62BC\u91D1\u603B\u989D', requireLabel: true,
							requiredValue: true, pattern: /^\d{0,16}(\.\d{0,2})?$/, errors: { requiredValue: '押金总额为必填项', pattern: '请输入正数金额，小数点后最多两位' } }),
						_react2.default.createElement(_krUi.KrField, { style: { width: 830, marginLeft: 70 }, name: 'contractmark', component: 'textarea', label: '\u5907\u6CE8', maxSize: 200 })
					),
					_react2.default.createElement(_krUi.KrField, { style: { width: 830, marginLeft: 90, marginTop: '-20px' }, name: 'fileIdList', component: 'file', label: '\u5408\u540C\u9644\u4EF6', defaultValue: optionValues.contractFileList }),
					_react2.default.createElement(
						_krUi.Grid,
						{ style: { padding: '10px 0 50px' } },
						_react2.default.createElement(
							_krUi.Row,
							null,
							_react2.default.createElement(
								_krUi.ListGroup,
								null,
								_react2.default.createElement(
									_krUi.ListGroupItem,
									{ style: { width: '45%', textAlign: 'right', paddingRight: 15 } },
									_react2.default.createElement(_krUi.Button, { label: '\u786E\u5B9A', type: 'submit', disabled: pristine || submitting, width: 100, height: 40, fontSize: 16 })
								),
								_react2.default.createElement(
									_krUi.ListGroupItem,
									{ style: { width: '45%', textAlign: 'left', paddingLeft: 15 } },
									' ',
									_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', cancle: true, type: 'button', onTouchTap: this.onCancel, width: 100, height: 40, fontSize: 16 }),
									' '
								)
							)
						)
					)
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u5206\u914D\u5DE5\u4F4D',
						open: this.state.openStation,
						modal: true,
						autoScrollBodyContent: true,
						autoDetectWindowHeight: true, onClose: this.onStationCancel },
					_react2.default.createElement(_AllStation2.default, { onSubmit: this.onStationSubmit, onCancel: this.onStationCancel, changeValues: this.props.changeValues })
				)
			);
		}
	}]);

	return NewCreateForm;
}(_react.Component)) || _class);
NewCreateForm.DefaultPropTypes = {
	initialValues: {
		customerName: '',
		communityName: '',
		lessorAddress: '',
		payTypeList: [],
		paymentList: [],
		fnaCorporationList: []
	}
};
NewCreateForm.PropTypes = {
	initialValues: _react2.default.PropTypes.object,
	onSubmit: _react2.default.PropTypes.func,
	onCancel: _react2.default.PropTypes.func
};

var selector = (0, _reduxForm.formValueSelector)('reduceCreateForm');
var validate = function validate(values) {

	var errors = {};

	if (!values.leaseId) {
		errors.leaseId = '请填写出租方';
	}

	if (!values.lessorContactid) {
		errors.lessorContactid = '请填写出租方联系人';
	}

	if (!values.lessorContacttel) {
		errors.lessorContacttel = '请填写出租方联系电话';
	}

	if (!values.leaseAddress) {
		errors.leaseAddress = '请填写承租方地址';
	}
	if (!values.wherefloor) {
		errors.wherefloor = '请先选择楼层';
	}

	if (!values.leaseContacttel) {
		errors.leaseContacttel = '请填写承租方电话';
	}

	if (!values.leaseAddress) {
		errors.leaseAddress = '请填写承租方地址';
	}

	if (values.leaseAddress && !isNaN(values.leaseAddress)) {
		errors.leaseAddress = '承租方地址不能为数字';
	}

	if (!values.leaseContact) {
		errors.leaseContact = '请填写承租方联系人';
	}

	// if (!values.fileIdList) {
	// 	errors.fileIdList = '请填写合同附件';
	// }

	if (!values.paymodel) {
		errors.paymodel = '请填写付款方式';
	}

	if (!values.signdate) {
		errors.signdate = '请填写签署时间';
	}

	if (!values.contractcode) {
		errors.contractcode = '请填写合同编号';
	}

	if (!String(values.totaldeposit)) {
		errors.totaldeposit = '请填写押金总额';
	}

	return errors;
};

NewCreateForm = (0, _reduxForm.reduxForm)({
	form: 'reduceCreateForm',
	validate: validate,
	enableReinitialize: true,
	keepDirtyOnReinitialize: true
})(NewCreateForm);

var _default = (0, _Redux.connect)(function (state) {

	var changeValues = {};

	changeValues.lessorId = selector(state, 'lessorId');
	changeValues.leaseId = selector(state, 'leaseId');
	changeValues.stationnum = selector(state, 'stationnum') || 0;
	changeValues.boardroomnum = selector(state, 'boardroomnum') || 0;
	changeValues.leaseBegindate = selector(state, 'leaseBegindate') || 0;
	changeValues.leaseEnddate = selector(state, 'leaseEnddate') || 0;

	return {
		changeValues: changeValues
	};
})(NewCreateForm);

exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(NewCreateForm, 'NewCreateForm', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Operation/CustomerManage/Agreement/Renew/Edit/NewCreateForm.js');

	__REACT_HOT_LOADER__.register(selector, 'selector', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Operation/CustomerManage/Agreement/Renew/Edit/NewCreateForm.js');

	__REACT_HOT_LOADER__.register(validate, 'validate', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Operation/CustomerManage/Agreement/Renew/Edit/NewCreateForm.js');

	__REACT_HOT_LOADER__.register(_default, 'default', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Operation/CustomerManage/Agreement/Renew/Edit/NewCreateForm.js');
}();

;