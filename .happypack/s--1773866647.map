{"version":3,"sources":["src/Redux/Utils/fetch.js"],"names":["polyfill","env","process","NODE_ENV","getUrl","path","params","mode","server","url","indexOf","err","console","error","Object","keys","length","item","hasOwnProperty","replace","encodeURI","searchParams","set","toString","getMethod","apiConfig","method","check401","res","code","window","location","href","jsonParse","json","http","request","payload","promise","get","post","update","remove","transformPreResponse","response","data","prototype","call","pop","transformResponse","resolve","reject","headers","credentials","then","parseInt","catch","getdemo","xhr","XMLHttpRequest","withCredentials","open","responseType","onload","e","status","send","bodyParams","p","push","encodeURIComponent","document","cookie","body","join","prop","module","exports"],"mappings":"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","file":"fetch.js","sourceRoot":"/Users/tmac_zc/Code/kr-admin","sourcesContent":[" import Promise from 'promise-polyfill';\n import fetch from 'isomorphic-fetch';\n import URLSearchParams from 'url-search-params';\n import {\n     browserHistory\n } from 'react-router';\n import APIS from '../../Configs/apis';\n\n import ES6Promise from 'es6-promise';\n ES6Promise.polyfill();\n\n var env = process.env.NODE_ENV;\n\n function getUrl(path, params = {}, mode = false) {\n\n     let server = '';\n\n\n     if (env === 'test') {\n         server = 'http://optest.krspace.cn';\n     }\n     if (env === 'development') {\n         server = 'http://optest.krspace.cn';\n     } else if (env === 'test01') {\n         //server = 'http://sso.krspace.cn';\n         server = 'http://optest01.krspace.cn';\n     } else if (env === 'test02') {\n         server = 'http://optest02.krspace.cn';\n     } else {\n         server = '';\n     }\n\n\n\n     /*\n     if (path.match(/^http/) != 'null') {\n         return path;\n     }\n     */\n     //本地联调接口\n     // let url = APIS[path].url;\n     // if(url.indexOf('apixr')){\n     //  server = ''\n     // }\n\n\n     var url = APIS[path].url;\n\n     if (url.indexOf('mockjsdata') !== -1) {\n         server = '';\n     }\n     try {\n         server += APIS[path].url;\n     } catch (err) {\n         console.error(`${path} not defined in apis.js`);\n         return false;\n     }\n\n\n     if (Object.keys(params).length) {\n         for (let item in params) {\n             if (params.hasOwnProperty(item)) {\n                 server = server.replace('{' + item + '}', encodeURI(params[item]));\n                 delete params[item];\n             }\n         }\n     }\n\n\n     if (!mode) {\n\n         var searchParams = new URLSearchParams();\n\n         for (let item in params) {\n             if (params.hasOwnProperty(item)) {\n                 searchParams.set(item, params[item]);\n             }\n         }\n\n         if (server.indexOf('?') !== -1) {\n             server += '&' + searchParams.toString();\n         } else {\n             server += '?' + searchParams.toString();\n         }\n     }\n\n     //去除多余参数\n     server = server.replace(/={.*?}/gi, '=');\n\n     return server;\n }\n\n\n\n function getMethod(path) {\n\n     const apiConfig = APIS[path];\n     return apiConfig.method;\n }\n\n function check401(res) {\n     if (res.code === -4011) {\n         window.location.href = '/';\n     }\n     return res;\n }\n\n function jsonParse(res) {\n     return res.json();\n }\n\n const http = {\n\n     request: (path = 'demo', params, payload, method) => {\n\n\n\n         const url = getUrl(path, params);\n\n         method = method || getMethod(path);\n         var promise = '';\n\n         if (!url) {\n             return;\n         }\n\n         switch (method) {\n             case 'get':\n                 {\n\n                     promise = http.get(url, params);\n                     break;\n                 }\n             case 'post':\n                 {\n                     promise = http.post(url, params, payload);\n                     break;\n                 }\n\n             case 'put':\n                 {\n                     promise = http.update(url, params, payload);\n                     break;\n                 }\n             case 'delete':\n                 {\n                     promise = http.remove(url, params, payload);\n                     break;\n                 }\n             default:\n                 {\n                     promise = http.get(url, params, payload);\n                     break;\n                 }\n         }\n\n         return promise;\n     },\n     transformPreResponse(response) {\n         var data = response;\n         //处理mock 数据\n         if (Object.prototype.toString.call(response) === '[object Array]') {\n             data = response.pop();\n         }\n         return data;\n     },\n     transformResponse: function(response) {\n         return response.data;\n     },\n     get: (url, params) => new Promise((resolve, reject) => {\n\n         if (!url) {\n             return;\n         }\n\n         fetch(url, {\n                 method: 'GET',\n                 headers: {\n                     'Accept': '*',\n                     'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n                 },\n                 mode: 'cors',\n                 credentials: 'include',\n             })\n             .then(jsonParse)\n             .then(check401)\n             .then(http.transformPreResponse)\n             .then(json => {\n                 if (parseInt(json.code) > 0) {\n                     //处理数据格式\n                     resolve(http.transformResponse(json));\n                 } else {\n                     reject(json);\n                 }\n             })\n             .catch(err => reject(err));\n     }),\n\n     getdemo: (url, params) => new Promise((resolve, reject) => {\n\n         if (!url) {\n             return;\n         }\n\n         var xhr = new XMLHttpRequest();\n\n         xhr.withCredentials = true;\n         xhr.open('GET', url, true);\n         xhr.responseType = 'json';\n         xhr.onload = function(e) {\n             if (this.status >= 200 || this.status < 300) {\n                 var json = http.transformPreResponse(xhr.response);\n                 if (json && json.code && parseInt(json.code) > 0) {\n                     //处理数据格式\n                     resolve(http.transformResponse(json))\n                 } else {\n                     reject(json)\n                 }\n             } else {\n                 reject(xhr.response);\n             }\n         };\n         xhr.send();\n     }),\n\n     post: (url, params, payload) => new Promise((resolve, reject) => {\n\n         if (!url) {\n             return\n         }\n\n         var bodyParams = [];\n         for (var p in payload) {\n             bodyParams.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(payload[p]));\n         }\n\n         fetch(url, {\n             method: 'POST',\n             credentials: 'include',\n             mode: 'cors',\n             headers: {\n                 'Accept': '*',\n                 'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n                 \"Cookie\": document.cookie\n             },\n             body: bodyParams.join('&')\n         })\n\n         .then(jsonParse)\n             .then(check401)\n             .then(http.transformPreResponse)\n             .then(json => {\n\n                 if (parseInt(json.code) > 0) {\n                     //处理数据格式\n                     resolve(http.transformResponse(json));\n                 } else {\n                     reject(json);\n                 }\n             })\n             .catch(err => reject(err));\n     }),\n\n     update: (url, params, payload) => new Promise((resolve, reject) => {\n         const searchParams = new URLSearchParams();\n\n         if (!url) {\n             return\n         }\n\n         for (const prop in payload) {\n             searchParams.set(prop, payload[prop])\n         }\n\n         fetch(url, {\n                 method: 'PUT',\n                 credentials: 'include',\n                 mode: 'cors',\n                 headers: {\n                     'Accept': '*',\n                     'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n                 },\n                 body: searchParams\n             })\n             .then(jsonParse)\n             .then(check401)\n             .then(http.transformPreResponse)\n             .then(json => {\n                 if (parseInt(json.code) > 0) {\n                     //处理数据格式\n                     resolve(http.transformResponse(json));\n                 } else {\n                     reject(json);\n                 }\n             })\n             .catch(err => reject(err));\n     }),\n\n     remove: (url, params, payload) => new Promise((resolve, reject) => {\n         const searchParams = new URLSearchParams();\n\n         if (!url) {\n             return\n         }\n\n         for (const prop in payload) {\n             searchParams.set(prop, payload[prop])\n         }\n\n         return fetch(url, {\n                 method: 'DELETE',\n                 credentials: 'include',\n                 mode: 'cors',\n                 headers: {\n                     'Accept': '*',\n                     'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n                 },\n                 body: searchParams\n             })\n             .then(jsonParse)\n             .then(check401)\n             .then(http.transformPreResponse)\n             .then(json => {\n                 if (parseInt(json.code) > 0) {\n                     //处理数据格式\n                     resolve(http.transformResponse(json))\n                 } else {\n                     reject(json)\n                 }\n             })\n             .catch(err => reject(err));\n     }),\n }\n\n\n\n module.exports = http;"]}