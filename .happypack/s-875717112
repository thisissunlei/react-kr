'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Select = require('../../Select/Select');

var _Select2 = _interopRequireDefault(_Select);

var _Input = require('../../Input');

var _Input2 = _interopRequireDefault(_Input);

var _Redux = require('kr/Redux');

var _WrapComponent = require('../WrapComponent');

var _WrapComponent2 = _interopRequireDefault(_WrapComponent);

require('./index.less');

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

var _Utils = require('kr/Utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//import 'react-select/dist/react-select.css';

var SelectComponent = function (_React$Component) {
	_inherits(SelectComponent, _React$Component);

	function SelectComponent(props) {
		_classCallCheck(this, SelectComponent);

		var _this2 = _possibleConstructorReturn(this, (SelectComponent.__proto__ || Object.getPrototypeOf(SelectComponent)).call(this, props));

		_this2.getMenberList = function () {
			var _this = _this2;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('memberRecvList')).then(function (response) {
				console.log('response', response);
				var option = [];
				option = response.map(function (item) {
					item.value = item.id;
					item.label = item.name;
					return item;
				});
				_this.setState({
					options: option,
					optionsList: option
				}, function () {
					console.log('dddddd', _this.state);
				});
			}).catch(function (err) {
				console.log('err', err);
			});
		};

		_this2.onfocus = function () {
			var showCity = _this2.state.showCity;

			if (showCity) {
				return;
			}
			_this2.bodyEvent();
			_this2.setState({
				showCity: true
			});
			console.log('onfocus');
		};

		_this2.onChange = function (e) {
			console.log('onChange', e.target.value);
			var key = e.target.value;
			var options = _this2.state.options;

			var optionsList = [];
			options.forEach(function (item) {
				if (item.label.indexOf(key) >= 0) {
					optionsList.push(item);
				}
			});
			_this2.setState({
				optionsList: optionsList,
				selected: false
			});
		};

		_this2.selectList = function (e) {
			console.log(e.target.id, e.target.innerHTML);
			var select = _this2.refs.input;
			var nameId = e.target.id.split('-')[2];
			console.log(select.value);
			select.value = e.target.innerHTML;

			_this2.setState({
				showCity: false,
				value: nameId,
				name: e.target.innerHTML,
				selected: true
			});
			var onSubmit = _this2.props.onSubmit;

			onSubmit && onSubmit(nameId);
		};

		_this2.onBlur = function () {
			var value = _this2.state.value;

			var select = _this2.refs.input;
			if (!value) {
				select.value = '';
			}
		};

		_this2.bodyEvent = function () {
			var _this = _this2;
			var select = _this2.refs.input;
			var onSubmit = _this2.props.onSubmit;

			(0, _jquery2.default)('body').click(function (event) {
				if (event.target.id.indexOf('ui-selectlist')) {
					if (!_this.state.selected) {
						select.value = null;
						_this.setState({
							value: ''
						}, function () {
							onSubmit && onSubmit(0);
						});
					}
					_this.setState({
						showCity: false
					});
				}
			});
		};

		_this2.handleChange = _this2.handleChange.bind(_this2);

		_this2.setInitValue = _this2.setInitValue.bind(_this2);

		_this2.isInit = false;

		_this2.state = {
			value: '',
			options: [],
			showCity: false,
			optionsList: [],
			name: '',
			selected: false
		};
		return _this2;
	}

	_createClass(SelectComponent, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			this.setInitValue(this.props.input.value);
			this.getMenberList();
		}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {}
	}, {
		key: 'setInitValue',
		value: function setInitValue(value) {

			if (!value) {
				return;
			}

			this.setState({
				value: value
			});
			this.isInit = true;
		}
	}, {
		key: 'handleChange',
		value: function handleChange(value) {
			var input = this.props.input;

			this.setState({
				value: value
			});
			input.onChange(value);
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var _props = this.props,
			    input = _props.input,
			    label = _props.label,
			    inline = _props.inline,
			    search = _props.search,
			    type = _props.type,
			    _props$meta = _props.meta,
			    touched = _props$meta.touched,
			    error = _props$meta.error,
			    children = _props.children,
			    disabled = _props.disabled,
			    style = _props.style,
			    requireLabel = _props.requireLabel,
			    multi = _props.multi,
			    other = _objectWithoutProperties(_props, ['input', 'label', 'inline', 'search', 'type', 'meta', 'children', 'disabled', 'style', 'requireLabel', 'multi']);

			var _state = this.state,
			    options = _state.options,
			    optionsList = _state.optionsList;

			console.log('options', optionsList);
			var showCity = this.state.showCity;

			var cityDiv = {};
			cityDiv.display = showCity ? 'block' : 'none';

			return _react2.default.createElement(
				_WrapComponent2.default,
				{ label: label, wrapStyle: style, requireLabel: requireLabel, inline: inline, search: search },
				_react2.default.createElement(
					'div',
					{ className: 'ui-list-compontent' },
					_react2.default.createElement('input', { ref: 'input', id: 'ui-selectlist-input', autoComplete: 'off', onFocus: this.onfocus, onChange: this.onChange, placeholder: '\u8BF7\u8F93\u5165...', onBlur: this.onBlur }),
					_react2.default.createElement('span', { className: 'arrow' }),
					_react2.default.createElement(
						'div',
						{ className: 'ui-list-cantainer', style: cityDiv },
						optionsList.map(function (item) {
							return _react2.default.createElement(
								'div',
								{ className: 'ui-list-content', id: 'ui-selectlist-' + item.value, onClick: _this3.selectList, ref: 'selectContent' },
								item.label
							);
						})
					)
				),
				touched && error && _react2.default.createElement(
					'div',
					{ className: 'error-wrap' },
					' ',
					_react2.default.createElement(
						'span',
						null,
						error
					),
					' '
				)
			);
		}
	}]);

	return SelectComponent;
}(_react2.default.Component);

SelectComponent.defaultProps = {
	inline: false
};
SelectComponent.PropTypes = {
	onChange: _react2.default.PropTypes.func,
	inline: _react2.default.PropTypes.bool,
	search: _react2.default.PropTypes.bool
};
exports.default = SelectComponent;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(SelectComponent, 'SelectComponent', '/Users/liuyihao/Code/kr-admin/src/Components/KrField/SearchListComponent/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,