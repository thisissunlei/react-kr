'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reduxForm = require('redux-form');

var _Redux = require('kr/Redux');

var _fetch = require('kr/Redux/Utils/fetch');

var _fetch2 = _interopRequireDefault(_fetch);

var _krUi = require('kr-ui');

var _State = require('../../State');

var _State2 = _interopRequireDefault(_State);

var _NewCreateForm = require('./NewCreateForm');

var _NewCreateForm2 = _interopRequireDefault(_NewCreateForm);

var _ConfirmFormDetail = require('./ConfirmFormDetail');

var _ConfirmFormDetail2 = _interopRequireDefault(_ConfirmFormDetail);

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var JoinCreate = function (_Component) {
	_inherits(JoinCreate, _Component);

	_createClass(JoinCreate, [{
		key: 'getChildContext',
		value: function getChildContext() {
			return {
				params: this.props.params
			};
		}
	}]);

	function JoinCreate(props, context) {
		_classCallCheck(this, JoinCreate);

		var _this2 = _possibleConstructorReturn(this, (JoinCreate.__proto__ || Object.getPrototypeOf(JoinCreate)).call(this, props, context));

		_this2.openConfirmCreateDialog = _this2.openConfirmCreateDialog.bind(_this2);
		_this2.onCreateSubmit = _this2.onCreateSubmit.bind(_this2);
		_this2.onCancel = _this2.onCancel.bind(_this2);

		_this2.state = {
			stationVos: [],
			initialValues: {},
			optionValues: {},
			openConfirmCreate: false
		};

		_Redux.Store.dispatch((0, _reduxForm.reset)('reduceCreateForm'));

		return _this2;
	}

	_createClass(JoinCreate, [{
		key: 'onCreateSubmit',
		value: function onCreateSubmit(formValues) {
			var params = this.props.params;

			_Redux.Store.dispatch(_Redux.Actions.callAPI('getFnaContractRentController', {}, formValues)).then(function (response) {
				_krUi.Notify.show([{
					message: '更新成功',
					type: 'success'
				}]);
				_State2.default.ajaxListData({ cityName: '', communityName: '', createDateBegin: '', createDateEnd: '', createrName: '', customerName: '', page: '', pageSize: '', salerName: '' });
				_State2.default.openEditAgreement = false;

				//location.href = "./#/operation/customerManage/" + params.customerId + "/order/" + params.orderId + "/agreement/reduce/" + response.contractId + "/detail";
			}).catch(function (err) {
				_krUi.Notify.show([{
					message: err.message,
					type: 'danger'
				}]);
			});

			//this.openConfirmCreateDialog();
		}
	}, {
		key: 'onCancel',
		value: function onCancel() {
			var params = this.context.params;

			_State2.default.openEditAgreement = false;
			//window.location.href = `./#/operation/customerManage/${params.customerId}/order/${params.orderId}/detail`;
		}
	}, {
		key: 'openConfirmCreateDialog',
		value: function openConfirmCreateDialog() {
			this.setState({
				openConfirmCreate: !this.state.openConfirmCreate
			});
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {

			var _this = this;
			var params = this.props.params;

			var initialValues = {};
			var optionValues = {};
			var stationVos = [];
			var rentamount = 0;

			_Redux.Store.dispatch(_Redux.Actions.callAPI('fina-contract-intention', {
				customerId: params.customerId,
				mainBillId: params.orderId,
				communityId: 1
			})).then(function (response) {

				initialValues.contractstate = 'UNSTART';
				initialValues.mainbillid = params.orderId;

				initialValues.signdate = +new Date(new Date().getTime() - 24 * 60 * 60 * 1000);

				optionValues.communityAddress = response.customer.communityAddress;
				optionValues.leaseAddress = response.customer.customerAddress;
				//合同类别，枚举类型（1:意向书,2:入住协议,3:增租协议,4.续租协议,5:减租协议,6退租协议）
				initialValues.contracttype = 'LESSRENT';

				optionValues.fnaCorporationList = response.fnaCorporation.map(function (item, index) {
					item.value = item.id;
					item.label = item.corporationName;
					return item;
				});
				optionValues.paymentList = response.payment.map(function (item, index) {
					item.value = item.id;
					item.label = item.dicName;
					return item;
				});
				optionValues.payTypeList = response.payType.map(function (item, index) {
					item.value = item.id;
					item.label = item.dicName;
					return item;
				});

				optionValues.floorList = response.customer.floor;
				optionValues.customerName = response.customer.customerName;
				optionValues.leaseAddress = response.customer.customerAddress;
				optionValues.communityName = response.customer.communityName;
				optionValues.communityId = response.customer.communityid;
				optionValues.mainbillCommunityId = response.mainbillCommunityId || 1;

				_Redux.Store.dispatch(_Redux.Actions.callAPI('showFnaContractRentController', {
					id: params.id
				})).then(function (response) {

					optionValues.lessorContactName = response.lessorContactName;
					optionValues.contractFileList = response.contractFileList;
					optionValues.leaseEnddate = response.leaseEnddate;
					optionValues.leaseBegindate = response.leaseBegindate;

					initialValues.leaseEnddate = response.leaseEnddate;

					// initialValues.id = response.id;
					initialValues.id = response.id;
					initialValues.leaseId = response.leaseId;
					initialValues.contractcode = response.contractcode;
					initialValues.leaseAddress = response.leaseAddress;
					initialValues.lessorContactName = response.lessorContactName;
					initialValues.leaseContact = response.leaseContact;
					initialValues.leaseContacttel = response.leaseContacttel;
					initialValues.contractVersionType = response.contractVersion;
					initialValues.lessorContactid = response.lessorContactid;
					// initialValues.paymodel = response.payment.id;
					// initialValues.stationnum = response.stationnum;
					// initialValues.rentamount = response.rentamount;
					// initialValues.rentaluse = response.rentaluse;
					// initialValues.contractmark = response.contractmark;
					// initialValues.totalrent = response.totalrent;
					if (response.rentamount) {
						initialValues.rentamount = response.rentamount;
					}
					initialValues.lessorContacttel = response.lessorContacttel;

					//时间
					// initialValues.firstpaydate = new Date(response.firstpaydate);
					initialValues.signdate = new Date(response.signdate);
					// initialValues.leaseBegindate = new Date(response.leaseBegindate);
					initialValues.rentamount = response.rentamount;

					console.log('时间', initialValues);

					//处理stationvos
					stationVos = response.stationVos;

					console.log(stationVos, '---->>>>', response);

					_this.setState({
						initialValues: initialValues,
						optionValues: optionValues,
						stationVos: stationVos
					});
				}).catch(function (err) {
					console.log(err);
					_krUi.Notify.show([{
						message: '后台出错请联系管理员',
						type: 'danger'
					}]);
				});
			}).catch(function (err) {
				console.log(err);
				_krUi.Notify.show([{
					message: '后台出错请联系管理员',
					type: 'danger'
				}]);
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _state = this.state,
			    initialValues = _state.initialValues,
			    optionValues = _state.optionValues,
			    stationVos = _state.stationVos,
			    params = _state.params;

			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(_krUi.BreadCrumbs, { children: ['系统运营', '客户管理', '入驻协议'] }),
				_react2.default.createElement(
					'div',
					{ style: { marginTop: 10 } },
					_react2.default.createElement(_NewCreateForm2.default, { onSubmit: this.onCreateSubmit, initialValues: initialValues, onCancel: this.onCancel, optionValues: optionValues, stationVos: stationVos, params: this.props.params })
				)
			);
		}
	}]);

	return JoinCreate;
}(_react.Component);

JoinCreate.contextTypes = {
	params: _react2.default.PropTypes.object.isRequired
};
JoinCreate.childContextTypes = {
	params: _react2.default.PropTypes.object.isRequired
};
exports.default = JoinCreate;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(JoinCreate, 'JoinCreate', '/Users/liuyihao/Code/kr-admin/src/Containers/Operation/CustomerManage/AgreementList/Reduce/Edit/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,