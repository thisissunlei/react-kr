{"version":3,"sources":["src/Components/DatePicker/TextField/TextField.js"],"names":["getStyles","props","context","state","muiTheme","baseTheme","textField","floatingLabelColor","focusColor","textColor","disabledTextColor","backgroundColor","errorColor","styles","root","fontSize","lineHeight","width","fullWidth","height","rows","floatingLabelText","display","position","fontFamily","transition","easeOut","cursor","disabled","error","bottom","color","floatingLabel","pointerEvents","input","padding","border","outline","font","WebkitTapHighlightColor","inputNative","appearance","textarea","marginTop","marginBottom","boxSizing","isFocused","multiLine","errorText","isValid","value","undefined","TextField","hasValue","handleInputBlur","event","setState","onBlur","handleInputChange","target","onChange","handleInputFocus","onFocus","handleHeightChange","newHeight","findDOMNode","style","children","name","hintText","id","propsLeaf","defaultValue","uniqueId","Math","floor","random","replace","nextProps","hasOwnProperty","nextState","nextContext","getInputNode","blur","focus","select","className","errorStyle","floatingLabelFixed","floatingLabelFocusStyle","floatingLabelShrinkStyle","floatingLabelStyle","hintStyle","inputStyle","type","underlineDisabledStyle","underlineFocusStyle","underlineShow","underlineStyle","rowsMax","textareaStyle","other","prepareStyles","inputId","errorTextElement","floatingLabelTextElement","inputProps","ref","elem","childStyleMerged","inputElement","cloneElement","rootProps","propTypes","node","string","any","bool","object","func","number","defaultProps","contextTypes","isRequired"],"mappings":"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","file":"TextField.js","sourceRoot":"/Users/liuyihao/Code/kr-admin","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport ReactDOM from 'react-dom';\nimport shallowEqual from 'shallowequal';\nimport transitions from '../styles/transitions';\nimport EnhancedTextarea from './EnhancedTextarea';\nimport TextFieldHint from './TextFieldHint';\nimport TextFieldLabel from './TextFieldLabel';\nimport TextFieldUnderline from './TextFieldUnderline';\nimport warning from 'warning';\n\nconst getStyles = (props, context, state) => {\n  const {\n    baseTheme,\n    textField: {\n      floatingLabelColor,\n      focusColor,\n      textColor,\n      disabledTextColor,\n      backgroundColor,\n      errorColor,\n    },\n  } = context.muiTheme;\n\n  const styles = {\n    root: {\n      fontSize: 16,\n      lineHeight: '24px',\n      width: props.fullWidth ? '100%' : 256,\n      height: (props.rows - 1) * 24 + (props.floatingLabelText ? 72 : 48),\n      display: 'inline-block',\n      position: 'relative',\n      backgroundColor: backgroundColor,\n      fontFamily: baseTheme.fontFamily,\n      transition: transitions.easeOut('200ms', 'height'),\n      cursor: props.disabled ? 'not-allowed' : 'auto',\n    },\n    error: {\n      position: 'relative',\n      bottom: 2,\n      fontSize: 12,\n      lineHeight: '12px',\n      color: errorColor,\n      transition: transitions.easeOut(),\n    },\n    floatingLabel: {\n      color: props.disabled ? disabledTextColor : floatingLabelColor,\n      pointerEvents: 'none',\n    },\n    input: {\n      padding: 0,\n      position: 'relative',\n      width: '100%',\n      border: 'none',\n      outline: 'none',\n      backgroundColor: 'rgba(0,0,0,0)',\n      color: props.disabled ? disabledTextColor : textColor,\n      cursor: 'inherit',\n      font: 'inherit',\n      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated style).\n    },\n    inputNative: {\n      appearance: 'textfield', // Improve type search style.\n    },\n  };\n\n  styles.textarea = Object.assign({}, styles.input, {\n    marginTop: props.floatingLabelText ? 36 : 12,\n    marginBottom: props.floatingLabelText ? -36 : -12,\n    boxSizing: 'border-box',\n    font: 'inherit',\n  });\n\n  // Do not assign a height to the textarea as he handles it on his own.\n  styles.input.height = '100%';\n\n  if (state.isFocused) {\n    styles.floatingLabel.color = focusColor;\n  }\n\n  if (props.floatingLabelText) {\n    styles.input.boxSizing = 'border-box';\n\n    if (!props.multiLine) {\n      styles.input.marginTop = 14;\n    }\n\n    if (state.errorText) {\n      styles.error.bottom = !props.multiLine ? styles.error.fontSize + 3 : 3;\n    }\n  }\n\n  if (state.errorText) {\n    if (state.isFocused) {\n      styles.floatingLabel.color = styles.error.color;\n    }\n  }\n\n  return styles;\n};\n\n/**\n * Check if a value is valid to be displayed inside an input.\n *\n * @param The value to check.\n * @returns True if the string provided is valid, false otherwise.\n */\nfunction isValid(value) {\n  return value !== '' && value !== undefined && value !== null;\n}\n\nclass TextField extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    /**\n     * The css class name of the root element.\n     */\n    className: PropTypes.string,\n    /**\n     * The text string to use for the default value.\n     */\n    defaultValue: PropTypes.any,\n    /**\n     * Disables the text field if set to true.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * The style object to use to override error styles.\n     */\n    errorStyle: PropTypes.object,\n    /**\n     * The error content to display.\n     */\n    errorText: PropTypes.node,\n    /**\n     * If true, the floating label will float even when there is no value.\n     */\n    floatingLabelFixed: PropTypes.bool,\n    /**\n     * The style object to use to override floating label styles when focused.\n     */\n    floatingLabelFocusStyle: PropTypes.object,\n    /**\n     * The style object to use to override floating label styles when shrunk.\n     */\n    floatingLabelShrinkStyle: PropTypes.object,\n    /**\n     * The style object to use to override floating label styles.\n     */\n    floatingLabelStyle: PropTypes.object,\n    /**\n     * The content to use for the floating label element.\n     */\n    floatingLabelText: PropTypes.node,\n    /**\n     * If true, the field receives the property width 100%.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * Override the inline-styles of the TextField's hint text element.\n     */\n    hintStyle: PropTypes.object,\n    /**\n     * The hint content to display.\n     */\n    hintText: PropTypes.node,\n    /**\n     * The id prop for the text field.\n     */\n    id: PropTypes.string,\n    /**\n     * Override the inline-styles of the TextField's input element.\n     * When multiLine is false: define the style of the input element.\n     * When multiLine is true: define the style of the container of the textarea.\n     */\n    inputStyle: PropTypes.object,\n    /**\n     * If true, a textarea element will be rendered.\n     * The textarea also grows and shrinks according to the number of lines.\n     */\n    multiLine: PropTypes.bool,\n    /**\n     * Name applied to the input.\n     */\n    name: PropTypes.string,\n    /** @ignore */\n    onBlur: PropTypes.func,\n    /**\n     * Callback function that is fired when the textfield's value changes.\n     */\n    onChange: PropTypes.func,\n    /** @ignore */\n    onFocus: PropTypes.func,\n    /**\n     * Number of rows to display when multiLine option is set to true.\n     */\n    rows: PropTypes.number,\n    /**\n     * Maximum number of rows to display when\n     * multiLine option is set to true.\n     */\n    rowsMax: PropTypes.number,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * Override the inline-styles of the TextField's textarea element.\n     * The TextField use either a textarea or an input,\n     * this property has effects only when multiLine is true.\n     */\n    textareaStyle: PropTypes.object,\n    /**\n     * Specifies the type of input to display\n     * such as \"password\" or \"text\".\n     */\n    type: PropTypes.string,\n    /**\n     * Override the inline-styles of the\n     * TextField's underline element when disabled.\n     */\n    underlineDisabledStyle: PropTypes.object,\n    /**\n     * Override the inline-styles of the TextField's\n     * underline element when focussed.\n     */\n    underlineFocusStyle: PropTypes.object,\n    /**\n     * If true, shows the underline for the text field.\n     */\n    underlineShow: PropTypes.bool,\n    /**\n     * Override the inline-styles of the TextField's underline element.\n     */\n    underlineStyle: PropTypes.object,\n    /**\n     * The value of the text field.\n     */\n    value: PropTypes.any,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    floatingLabelFixed: false,\n    multiLine: false,\n    fullWidth: false,\n    type: 'text',\n    underlineShow: true,\n    rows: 1,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    isFocused: false,\n    errorText: undefined,\n    hasValue: false,\n  };\n\n  componentWillMount() {\n    const {\n      children,\n      name,\n      hintText,\n      floatingLabelText,\n      id,\n    } = this.props;\n\n    const propsLeaf = children ? children.props : this.props;\n\n    this.setState({\n      errorText: this.props.errorText,\n      hasValue: isValid(propsLeaf.value) || isValid(propsLeaf.defaultValue),\n    });\n\n    warning(name || hintText || floatingLabelText || id, `Material-UI: We don't have enough information\n      to build a robust unique id for the TextField component. Please provide an id or a name.`);\n\n    const uniqueId = `${name}-${hintText}-${floatingLabelText}-${\n      Math.floor(Math.random() * 0xFFFF)}`;\n    this.uniqueId = uniqueId.replace(/[^A-Za-z0-9-]/gi, '');\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errorText !== this.props.errorText) {\n      this.setState({\n        errorText: nextProps.errorText,\n      });\n    }\n\n    if (nextProps.children && nextProps.children.props) {\n      nextProps = nextProps.children.props;\n    }\n\n    if (nextProps.hasOwnProperty('value')) {\n      const hasValue = isValid(nextProps.value);\n\n      this.setState({\n        hasValue: hasValue,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return (\n      !shallowEqual(this.props, nextProps) ||\n      !shallowEqual(this.state, nextState) ||\n      !shallowEqual(this.context, nextContext)\n    );\n  }\n\n  blur() {\n    if (this.input) {\n      this.getInputNode().blur();\n    }\n  }\n\n  focus() {\n    if (this.input) {\n      this.getInputNode().focus();\n    }\n  }\n\n  select() {\n    if (this.input) {\n      this.getInputNode().select();\n    }\n  }\n\n  getValue() {\n    return this.input ? this.getInputNode().value : undefined;\n  }\n\n  getInputNode() {\n    return (this.props.children || this.props.multiLine) ?\n      this.input.getInputNode() : ReactDOM.findDOMNode(this.input);\n  }\n\n  handleInputBlur = (event) => {\n    this.setState({isFocused: false});\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n\n  handleInputChange = (event) => {\n    this.setState({hasValue: isValid(event.target.value)});\n    if (this.props.onChange) {\n      this.props.onChange(event, event.target.value);\n    }\n  };\n\n  handleInputFocus = (event) => {\n    if (this.props.disabled) {\n      return;\n    }\n    this.setState({isFocused: true});\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  };\n\n  handleHeightChange = (event, height) => {\n    let newHeight = height + 24;\n    if (this.props.floatingLabelText) {\n      newHeight += 24;\n    }\n    ReactDOM.findDOMNode(this).style.height = `${newHeight}px`;\n  };\n\n  _isControlled() {\n    return this.props.hasOwnProperty('value');\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      disabled,\n      errorStyle,\n      errorText, // eslint-disable-line no-unused-vars\n      floatingLabelFixed,\n      floatingLabelFocusStyle,\n      floatingLabelShrinkStyle,\n      floatingLabelStyle,\n      floatingLabelText,\n      fullWidth, // eslint-disable-line no-unused-vars\n      hintText,\n      hintStyle,\n      id,\n      inputStyle,\n      multiLine,\n      onBlur, // eslint-disable-line no-unused-vars\n      onChange, // eslint-disable-line no-unused-vars\n      onFocus, // eslint-disable-line no-unused-vars\n      style,\n      type,\n      underlineDisabledStyle,\n      underlineFocusStyle,\n      underlineShow,\n      underlineStyle,\n      rows,\n      rowsMax,\n      textareaStyle,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context, this.state);\n    const inputId = id || this.uniqueId;\n\n    const errorTextElement = this.state.errorText && (\n      <div style={prepareStyles(Object.assign(styles.error, errorStyle))}>\n        {this.state.errorText}\n      </div>\n    );\n\n    const floatingLabelTextElement = floatingLabelText && (\n      <TextFieldLabel\n        muiTheme={this.context.muiTheme}\n        style={Object.assign(\n          styles.floatingLabel,\n          floatingLabelStyle,\n          this.state.isFocused ? floatingLabelFocusStyle : null\n        )}\n        shrinkStyle={floatingLabelShrinkStyle}\n        htmlFor={inputId}\n        shrink={this.state.hasValue || this.state.isFocused || floatingLabelFixed}\n        disabled={disabled}\n      >\n        {floatingLabelText}\n      </TextFieldLabel>\n    );\n\n    const inputProps = {\n      id: inputId,\n      ref: (elem) => this.input = elem,\n      disabled: this.props.disabled,\n      onBlur: this.handleInputBlur,\n      onChange: this.handleInputChange,\n      onFocus: this.handleInputFocus,\n    };\n\n    const childStyleMerged = Object.assign(styles.input, inputStyle);\n\n    let inputElement;\n    if (children) {\n      inputElement = React.cloneElement(children,\n        {\n          ...inputProps,\n          ...children.props,\n          style: Object.assign(childStyleMerged, children.props.style),\n        });\n    } else {\n      inputElement = multiLine ? (\n        <EnhancedTextarea\n          style={childStyleMerged}\n          textareaStyle={Object.assign(styles.textarea, styles.inputNative, textareaStyle)}\n          rows={rows}\n          rowsMax={rowsMax}\n          {...other}\n          {...inputProps}\n          onHeightChange={this.handleHeightChange}\n        />\n      ) : (\n        <input\n          type={type}\n          style={prepareStyles(Object.assign(styles.inputNative, childStyleMerged))}\n          {...other}\n          {...inputProps}\n        />\n      );\n    }\n\n    let rootProps = {};\n\n    if (children) {\n      rootProps = other;\n    }\n\n    return (\n      <div\n        {...rootProps}\n        className={className}\n        style={prepareStyles(Object.assign(styles.root, style))}\n      >\n        {floatingLabelTextElement}\n        {hintText ?\n          <TextFieldHint\n            muiTheme={this.context.muiTheme}\n            show={!(this.state.hasValue || (floatingLabelText && !this.state.isFocused)) ||\n                  (!this.state.hasValue && floatingLabelText && floatingLabelFixed && !this.state.isFocused)}\n            style={hintStyle}\n            text={hintText}\n          /> :\n          null\n        }\n        {inputElement}\n        {underlineShow ?\n          <TextFieldUnderline\n            disabled={disabled}\n            disabledStyle={underlineDisabledStyle}\n            error={!!this.state.errorText}\n            errorStyle={errorStyle}\n            focus={this.state.isFocused}\n            focusStyle={underlineFocusStyle}\n            muiTheme={this.context.muiTheme}\n            style={underlineStyle}\n          /> :\n          null\n        }\n        {errorTextElement}\n      </div>\n    );\n  }\n}\n\nexport default TextField;\n"]}