'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Radio = function (_React$Component) {
	_inherits(Radio, _React$Component);

	function Radio(props) {
		_classCallCheck(this, Radio);

		var _this = _possibleConstructorReturn(this, (Radio.__proto__ || Object.getPrototypeOf(Radio)).call(this, props));

		_this.onChange = _this.onChange.bind(_this);

		_this.state = {
			value: _this.props.value
		};

		return _this;
	}

	_createClass(Radio, [{
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			if (nextProps.value != this.props.value) {
				this.setState({
					value: nextProps.value
				});
			}
		}
	}, {
		key: 'onChange',
		value: function onChange(event) {

			var value = event.target.value;
			var onChange = this.props.onChange;


			this.setState({
				value: value
			});

			onChange && onChange(value);
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    children = _props.children,
			    className = _props.className,
			    style = _props.style,
			    name = _props.name,
			    label = _props.label,
			    other = _objectWithoutProperties(_props, ['children', 'className', 'style', 'name', 'label']);

			var value = this.state.value;


			var classNames = 'ui-input-radio';
			classNames += ' ' + className;

			return _react2.default.createElement(
				'span',
				{ className: 'ui-radio' },
				_react2.default.createElement('input', _extends({ type: 'radio', style: style, name: name, className: classNames, value: value, onChange: this.onChange }, other)),
				label && _react2.default.createElement(
					'span',
					{ className: 'label' },
					label
				)
			);
		}
	}]);

	return Radio;
}(_react2.default.Component);

Radio.displayName = 'Radio';
Radio.defaultPorps = {
	value: '',
	label: ''
};
Radio.propTypes = {
	name: _react2.default.PropTypes.string,
	style: _react2.default.PropTypes.object,
	className: _react2.default.PropTypes.string,
	children: _react2.default.PropTypes.node,
	label: _react2.default.PropTypes.string
};
exports.default = Radio;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(Radio, 'Radio', '/Users/smile/Documents/kr-admin/src/Components/Radio/index.js');
}();

;