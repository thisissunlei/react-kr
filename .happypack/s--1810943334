'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WrapComponent = function (_React$Component) {
	_inherits(WrapComponent, _React$Component);

	function WrapComponent(props) {
		_classCallCheck(this, WrapComponent);

		return _possibleConstructorReturn(this, (WrapComponent.__proto__ || Object.getPrototypeOf(WrapComponent)).call(this, props));
	}

	_createClass(WrapComponent, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    requireLabel = _props.requireLabel,
			    label = _props.label,
			    inline = _props.inline,
			    search = _props.search,
			    requireBlue = _props.requireBlue,
			    alignRight = _props.alignRight;


			if (!label) {
				return null;
			}
			var className = 'ui-form-label';

			if (inline) {
				className += ' inline';
			}
			if (search) {
				className += ' search-content';
			}
			if (requireBlue) {
				className += ' require-blue';
			}
			if (alignRight) {
				className += ' alignRight';
			}

			return _react2.default.createElement(
				'div',
				{ className: className },
				_react2.default.createElement(
					'label',
					null,
					' ',
					requireLabel ? _react2.default.createElement(
						'span',
						{ className: 'require-label' },
						'*'
					) : null,
					' ',
					label
				)
			);
		}
	}]);

	return WrapComponent;
}(_react2.default.Component);

WrapComponent.PropTypes = {
	label: _react2.default.PropTypes.string,
	requireLabel: _react2.default.PropTypes.bool,
	inline: _react2.default.PropTypes.bool,
	requireBlue: _react2.default.PropTypes.bool,
	alignRight: _react2.default.PropTypes.bool,
	search: _react2.default.PropTypes.bool
};
exports.default = WrapComponent;