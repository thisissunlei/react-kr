'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _simpleAssign = require('simple-assign');

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reduxForm = require('redux-form');

var _Redux = require('kr/Redux');

var _krUi = require('kr-ui');

var _EditDetail = require('./EditDetail');

var _EditDetail2 = _interopRequireDefault(_EditDetail);

var _HeavilyActivation = require('./HeavilyActivation');

var _HeavilyActivation2 = _interopRequireDefault(_HeavilyActivation);

var _NewActivation = require('./NewActivation');

var _NewActivation2 = _interopRequireDefault(_NewActivation);

var _StartCardActivation = require('./StartCardActivation');

var _StartCardActivation2 = _interopRequireDefault(_StartCardActivation);

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var List = function (_Component) {
	_inherits(List, _Component);

	function List(props, context) {
		_classCallCheck(this, List);

		var _this2 = _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this, props, context));

		_this2.onOperation = function (type, itemDetail) {
			var _this = _this2;
			_this2.setState({
				itemDetail: itemDetail
			});
			if (type == 'view') {
				var orderId = itemDetail.id;
			} else if (type == 'edit') {
				_this2.openEditDetailDialog();
			}
		};

		_this2.openEditDetailDialog = function () {
			_this2.setState({
				openEditDetail: !_this2.state.openEditDetail
			});
		};

		_this2.openHeavilyActivationDialog = function () {
			if (_this2.state.goHeavilyActivation == "StartCardActivation") {
				_this2.setState({
					goHeavilyActivation: "index"
				});
			}
			_this2.setState({
				openHeavilyActivation: !_this2.state.openHeavilyActivation
			});
		};

		_this2.openNewActivationDialog = function () {
			_this2.setState({
				openNewActivation: !_this2.state.openNewActivation
			});
		};

		_this2.openStartCardActivationDialog = function () {
			_this2.setState({
				openStartCardActivation: !_this2.state.openStartCardActivation
			});
		};

		_this2.throwBack = function () {
			_this2.setState({
				goHeavilyActivation: "StartCardActivation"
			});
			_Redux.Store.dispatch((0, _reduxForm.initialize)('HeavilyActivation', _this2.state.detail));
			_this2.openStartCardActivationDialog();
			_this2.openHeavilyActivationDialog();
		};

		_this2.onNewActivation = function (values) {
			var _this = _this2;
			var params = {};
			params.foreignCode = values.foreignCode;
			params.interCode = values.interCode;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('CardActivation', {}, params)).then(function (response) {
				_this.openNewActivationDialog();
				_this.onFlush();
				_krUi.Message.success("激活成功！");
			}).catch(function (err) {

				if (err.message == "该会员卡已被录入") {
					err.message = "卡号" + _this.state.detail.startNum + "已存在请跳过！";
				} else if (err.message == "该卡已被激活,请重刷") {
					err.message = "会员卡" + values.interCode + "已被激活，请换卡重刷！";
				} else if (err.message == "Failed to fetch") {
					err.message = "连接不到服务器!";
				}
				_krUi.Message.error(err.message);
			});
		};

		_this2.onHeavilyActivation = function (detail) {
			if (!detail.startNum || !detail.endNum) {
				return;
			} else if (detail.endNum - detail.startNum < 0) {
				_krUi.Message.error('起始号码不能大于终止号码！');
				return;
			}
			_this2.setState({ detail: detail }, function () {

				this.openHeavilyActivationDialog();
				this.onStartCardActivation();
			});
		};

		_this2.onStartCardActivation = function (values) {
			_this2.openStartCardActivationDialog();
		};

		_this2.onEditDetail = function (values) {
			var _this = _this2;
			var params = {};
			console.log(_this2.state.itemDetail.interCode, "ll", values.interCode);
			if (values.interCode == _this2.state.itemDetail.interCode) {

				_this2.openEditDetailDialog();
				return;
			}
			params.id = values.id;
			params.foreignCode = values.foreignCode;
			params.interCode = values.interCode;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('CardEdit', {}, params)).then(function (response) {
				_this.openEditDetailDialog();
				_this.onFlush();
			}).catch(function (err) {
				if (err.message == "该会员卡已被录入") {
					err.message = "卡号" + _this.state.detail.startNum + "已存在请跳过！";
				} else if (err.message == "该卡已被激活,请重刷") {
					err.message = "会员卡" + values.interCode + "已被激活，请换卡重刷！";
				} else if (err.message == "Failed to fetch") {
					err.message = "连接不到服务器!";
				} else if (err.message == "卡号错误") {
					err.message = "卡号不可更改!";
				}
				_krUi.Message.error(err.message);
			});
		};

		_this2.onSearchSubmit = function (searchParams) {
			var obj = {
				foreignCode: searchParams.content,
				pageSize: 15,
				page: 1
			};
			_this2.setState({
				searchParams: obj
			});
		};

		_this2.openMessageBar = function (text, type) {
			var style = {};
			var className = "";
			var barStyle = {};
			if (type == "ok") {
				style = { position: 'fixed', right: 0, display: "inline-block", height: 40, color: "#000", top: 20 };
				barStyle = { display: "inline-block", backgroundColor: "#edffe2", borderRadius: 3, padding: '0px 8px', border: "1px solid #cce6a0" };
				className = "messagesBarIconOk";
			} else {
				style = { position: 'fixed', right: 0, display: "inline-block", height: 40, color: "#000", top: 20 };
				barStyle = { display: "inline-block", backgroundColor: "#ffe9e9", borderRadius: 3, padding: '0px 8px', border: "1px solid #ffb8b8" };
				className = "messagesBarIconError";
			}

			_this2.setState({
				closeMessageBar: {
					title: text,
					open: true,
					style: style,
					className: className,
					barStyle: barStyle
				}
			});
		};

		_this2.closeMessageBar = function () {
			var detail = (0, _simpleAssign2.default)({}, _this2.state.closeMessageBar);
			detail.open = false;
			_this2.setState({
				closeMessageBar: detail
			});
		};

		_this2.onSearchCancel = function () {};

		_this2.onNewCreateCancel = function () {
			_this2.openNewCreateDialog();
		};

		_this2.onLoaded = function (response) {
			var list = response;
			_this2.setState({
				list: list
			});
		};

		_this2.onFlush = function () {
			_this2.setState({
				searchParams: {
					foreignCode: '',
					page: 1,
					pageSize: 15,
					other: !_this2.state.searchParams.other
				}
			});
		};

		_this2.isHeavilyCloseOk = function () {
			setState({
				isHeavilyClose: true
			});
		};

		_this2.isHeavilyCloseNone = function () {
			setState({
				isHeavilyClose: false
			});
		};

		_this2.state = {
			//新建激活页面的开启状态
			openNewActivation: false,
			//编辑页面的开启状态
			openEditDetail: false,
			//批量激活输入卡号的开启状态
			openHeavilyActivation: false,
			//批量激活开始激活
			openStartCardActivation: false,
			itemDetail: {},
			item: {},
			list: {},
			searchParams: {
				foreignCode: '',
				page: 1,
				pageSize: 15,
				other: false
			},
			closeMessageBar: {
				title: '',
				open: false,
				style: {},
				className: '',
				barStyle: {}
			},
			detail: {
				startNum: "",
				endNum: ''
			},
			isHeavilyClose: true,
			goHeavilyActivation: "index"

		};
		return _this2;
	}
	//操作相关

	//编辑页面开关

	//批量激活输入卡号页面开关

	//新建激活页面开关

	//批量激活开始激活页面的开关

	//批量激活开始激活页面返回按钮

	//新建激活的确定操作


	//输入卡号的确定操作

	//开始激活的确定操作

	//编辑页面的确定操作


	//搜索被点击

	//打开弹条

	//关闭弹跳

	//数据刷新


	_createClass(List, [{
		key: 'render',
		value: function render() {

			return _react2.default.createElement(
				'div',
				{ className: 'switchhover' },
				_react2.default.createElement(_krUi.Title, { value: '\u4F1A\u5458\u914D\u7F6E' }),
				_react2.default.createElement(
					_krUi.Section,
					{ title: '\u4F1A\u5458\u5361\u6FC0\u6D3B', description: '', style: { minHeight: "900px" } },
					_react2.default.createElement(
						_krUi.Grid,
						{ style: { marginBottom: 22, marginTop: 2 } },
						_react2.default.createElement(
							_krUi.Row,
							null,
							_react2.default.createElement(
								_krUi.Col,
								{ align: 'left', style: { marginLeft: 0, float: 'left' } },
								' ',
								_react2.default.createElement(_krUi.Button, { label: '\u65B0\u5EFA\u6FC0\u6D3B', type: 'button', joinEditForm: true, onTouchTap: this.openNewActivationDialog }),
								' '
							),
							_react2.default.createElement(
								_krUi.Col,
								{ align: 'left', style: { marginLeft: 20, float: 'left' } },
								' ',
								_react2.default.createElement(_krUi.Button, { label: '\u6279\u91CF\u6FC0\u6D3B', type: 'button', joinEditForm: true, onTouchTap: this.openHeavilyActivationDialog }),
								' '
							),
							_react2.default.createElement(
								_krUi.Col,
								{ align: 'right', style: { marginTop: 0, float: "right", marginRight: -10 } },
								_react2.default.createElement(
									_krUi.ListGroup,
									null,
									_react2.default.createElement(
										_krUi.ListGroupItem,
										null,
										' ',
										_react2.default.createElement(_krUi.SearchForms, { placeholder: '\u8BF7\u8F93\u5165\u4F1A\u5458\u5361\u53F7\u7801', onSubmit: this.onSearchSubmit, onCancel: this.onSearchCancel })
									)
								)
							)
						)
					),
					_react2.default.createElement(
						_krUi.Table,
						{ style: { marginTop: 8 },
							ajax: true,
							onOperation: this.onOperation,
							onProcessData: function onProcessData(state) {
								return state;
							},
							displayCheckbox: false,
							onExport: this.onExport,
							ajaxParams: this.state.searchParams,

							ajaxFieldListName: 'items',
							ajaxUrlName: 'CardActivationList' },
						_react2.default.createElement(
							_krUi.TableHeader,
							null,
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								{ style: { width: "20%" } },
								'\u5361\u53F7'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								{ style: { width: "20%" } },
								'\u5185\u7801'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								{ style: { width: "20%" } },
								'\u72B6\u6001'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								{ style: { width: "20%" } },
								'\u6FC0\u6D3B\u65F6\u95F4'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								{ style: { width: "20%" } },
								'\u64CD\u4F5C'
							)
						),
						_react2.default.createElement(
							_krUi.TableBody,
							null,
							_react2.default.createElement(
								_krUi.TableRow,
								null,
								_react2.default.createElement(_krUi.TableRowColumn, { name: 'foreignCode' }),
								_react2.default.createElement(_krUi.TableRowColumn, { name: 'interCode' }),
								_react2.default.createElement(_krUi.TableRowColumn, { name: 'enable', options: [{ label: '已激活', value: 'true' }, { label: '未激活', value: 'false' }] }),
								_react2.default.createElement(_krUi.TableRowColumn, { name: 'activeTime', type: 'date', format: 'yyyy-mm-dd HH:MM:ss' }),
								_react2.default.createElement(
									_krUi.TableRowColumn,
									{ type: 'operation' },
									_react2.default.createElement(_krUi.Button, { label: '\u7F16\u8F91', type: 'operation', operation: 'edit' })
								)
							)
						),
						_react2.default.createElement(_krUi.TableFooter, null)
					)
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u65B0\u5EFA\u6FC0\u6D3B',
						modal: true,
						open: this.state.openNewActivation,
						onClose: this.openNewActivationDialog,
						bodyStyle: { paddingTop: 45 },
						contentStyle: { width: 442 }
					},
					_react2.default.createElement(_NewActivation2.default, { onSubmit: this.onNewActivation, onCancel: this.openNewActivationDialog })
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u6279\u91CF\u6FC0\u6D3B',
						modal: true,
						open: this.state.openHeavilyActivation,
						onClose: this.openHeavilyActivationDialog,
						bodyStyle: { paddingTop: 45 },
						contentStyle: { width: 500 }
					},
					_react2.default.createElement(_HeavilyActivation2.default, { path: this.state.goHeavilyActivation, detail: this.state.detail, onSubmit: this.onHeavilyActivation, onCancel: this.openHeavilyActivationDialog, isHeavilyCloseNone: this.isHeavilyCloseNone, isHeavilyCloseOk: this.isHeavilyCloseOk })
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u7F16\u8F91',
						modal: true,
						open: this.state.openEditDetail,
						onClose: this.openEditDetailDialog,
						bodyStyle: { paddingTop: 45 },
						contentStyle: { width: 442 }
					},
					_react2.default.createElement(_EditDetail2.default, { detail: this.state.itemDetail, onSubmit: this.onEditDetail, onCancel: this.openEditDetailDialog })
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u6279\u91CF\u6FC0\u6D3B',
						modal: true,
						open: this.state.openStartCardActivation,
						onClose: this.openStartCardActivationDialog,
						bodyStyle: { paddingTop: 45 },
						contentStyle: { width: 500 }
					},
					_react2.default.createElement(_StartCardActivation2.default, { onFlush: this.onFlush, detail: this.state.detail, onCancel: this.openStartCardActivationDialog, throwBack: this.throwBack, openMessageBar: this.openMessageBar, closeMessageBar: this.closeMessageBar })
				),
				_react2.default.createElement(_krUi.SnackTip, { zIndex: 20000, style: this.state.closeMessageBar.style, open: this.state.closeMessageBar.open, title: _react2.default.createElement(
						'span',
						{ style: this.state.closeMessageBar.barStyle },
						_react2.default.createElement('span', { className: this.state.closeMessageBar.className }),
						_react2.default.createElement(
							'span',
							{ style: { float: "left", color: "#000" } },
							this.state.closeMessageBar.title
						)
					) })
			);
		}
	}]);

	return List;
}(_react.Component);

exports.default = List;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(List, 'List', '/Users/smile/Documents/kr-admin/src/Containers/Member/MemberManage/Setting/index.js');
}();

;