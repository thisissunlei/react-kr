'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactAddonsPureRenderMixin = require('react-addons-pure-render-mixin');

var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Redux = require('kr/Redux');

var _reduxForm = require('redux-form');

var _krUi = require('kr-ui');

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Createdialog = function (_Component) {
	_inherits(Createdialog, _Component);

	function Createdialog(props, context) {
		_classCallCheck(this, Createdialog);

		var _this2 = _possibleConstructorReturn(this, (Createdialog.__proto__ || Object.getPrototypeOf(Createdialog)).call(this, props, context));

		_this2.onCancel = function () {
			var onCancel = _this2.props.onCancel;

			onCancel && onCancel();
		};

		_this2.onSubmit = function (form) {
			var _this2$state = _this2.state,
			    ModuleId = _this2$state.ModuleId,
			    ControllerId = _this2$state.ControllerId;


			var params = {
				code: form.code,
				methodIds: ControllerId,
				moduleId: ModuleId,
				name: form.name,
				type: form.type
			};
			var onSubmit = _this2.props.onSubmit;

			if (ControllerId.length > 0) {
				onSubmit && onSubmit(params);
			}
		};

		_this2.onSetModuleId = function (item) {
			_this2.setState({
				ModuleId: item.id
			});
		};

		_this2.onSelectController = function (item) {
			var _this = _this2;
			var idlist = _this2.state.ControllerId;
			idlist.push(item.methodId);
			_this2.setState({
				ControllerItem: item,
				ControllerId: idlist
			});
		};

		_this2.getAllController = function () {
			var _this = _this2;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('getAllController', {}, {})).then(function (response) {
				var ControllerList = response.controllerList.map(function (item, index) {
					item.value = item.id;
					item.label = item.name;
					return item;
				});
				_this.setState({
					ControllerList: ControllerList
				});
			}).catch(function (err) {});
		};

		_this2.getModuleList = function () {
			var Params = _this2.state.Params;

			var _this = _this2;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('getModule', Params, {})).then(function (response) {
				var ModuleList = response.ssoModuleList.map(function (item, index) {
					item.value = item.id;
					item.label = item.name;
					return item;
				});
				_this.setState({
					ModuleList: ModuleList
				});
			}).catch(function (err) {});
		};

		_this2.getValue = function (e) {
			var check = e.target.checked;
			var id = e.target.value;
			var idList = _this2.state.resourceIds;
			if (check) {
				idList.push(id);
				_this2.setState({
					resourceIds: idList
				});
			} else {
				var index = idList.indexOf(id);
				if (index > -1) {
					idList.splice(index, 1);
				}
				_this2.setState({
					resourceIds: idList
				});
			}
			if (_this2.state.resourceIds.length > 0) {
				_this2.setState({
					errorTip: false
				});
			}
		};

		_this2.onSelect = function (item) {
			var _this = _this2;
			var ModuleList;
			_this2.setState({
				Params: {
					parentId: item.id
				}
			}, function () {
				_Redux.Store.dispatch(_Redux.Actions.callAPI('getModule', _this.state.Params, {})).then(function (response) {
					if (response.ssoModuleList.length > 0) {
						ModuleList = response.ssoModuleList.map(function (item, index) {
							item.value = item.id;
							item.label = item.name;
							return item;
						});
						_this.setState({
							childModule: ModuleList,
							childModuleList: []
						});
					} else {
						_this.setState({
							ModuleId: item.id,
							childModule: response.ssoModuleList,
							childModuleList: []
						});
					}
				}).catch(function (err) {});
			});
		};

		_this2.onSelectChild = function (item) {
			var _this = _this2;
			var ModuleList;
			_this2.setState({
				Params: {
					parentId: item.id
				}
			}, function () {
				_Redux.Store.dispatch(_Redux.Actions.callAPI('getModule', _this.state.Params, {})).then(function (response) {
					if (response.ssoModuleList.length > 0) {
						ModuleList = response.ssoModuleList.map(function (item, index) {
							item.value = item.id;
							item.label = item.name;
							return item;
						});
						_this.setState({
							childModuleList: ModuleList
						});
					} else {
						_this.setState({
							ModuleId: item.id,
							childModuleList: response.ssoModuleList
						});
					}
				}).catch(function (err) {});
			});
		};

		_this2.renderModule = function () {
			var childModule = _this2.state.childModule;

			if (childModule.length > 0) {
				return _react2.default.createElement(_krUi.KrField, { name: 'moduleChild', style: { width: 220 }, component: 'select', label: '', options: childModule, inline: true, onChange: _this2.onSelectChild });
			}
		};

		_this2.renderchildModule = function () {
			var childModuleList = _this2.state.childModuleList;

			if (childModuleList.length > 0) {
				return _react2.default.createElement(_krUi.KrField, { name: 'moduleChildList', style: { width: 220 }, component: 'select', label: '', options: childModuleList, inline: true, onChange: _this2.onSetModuleId });
			}
		};

		_this2.controllerAdd = function () {
			var _this2$state2 = _this2.state,
			    ControllerItem = _this2$state2.ControllerItem,
			    ControllerRender = _this2$state2.ControllerRender,
			    ControllerId = _this2$state2.ControllerId;


			var controller = ControllerItem.controllerName + ' ' + ControllerItem.methodName;
			var item = {
				controller: controller
			};
			var arr = ControllerRender;
			arr.push(item);
			_this2.setState({
				ControllerRender: arr,
				ControllerId: ControllerId
			});
		};

		_this2.renderController = function () {
			var ControllerRender = _this2.state.ControllerRender;

			var list;
			if (ControllerRender.length > 0) {
				list = ControllerRender.map(function (item, index) {
					return _react2.default.createElement(
						'div',
						{ className: 'u-add-list', key: index },
						item.controller,
						_react2.default.createElement(
							'span',
							{ className: 'u-add-delete', onTouchTap: _this2.controllerDelete.bind(_this2, index) },
							'\u79FB\u9664'
						)
					);
				});
			}
			return list;
		};

		_this2.controllerDelete = function (index) {
			var _this2$state3 = _this2.state,
			    ControllerRender = _this2$state3.ControllerRender,
			    ControllerId = _this2$state3.ControllerId;

			var Controller = ControllerRender;
			Controller.splice(index, 1);
			var id = ControllerId;
			id.splice(index, 1);
			_this2.setState({
				ControllerRender: Controller,
				ControllerId: id
			});
		};

		_this2.state = {
			ModuleList: [],
			resourceIds: [],
			errorTip: false,
			childModule: [],
			childModuleList: [],
			Params: {
				parentId: 0
			},
			ControllerList: [],
			ControllerId: [],
			ControllerItem: {},
			ModuleId: '',
			ControllerRender: [],
			methodId: []
		};
		_this2.getModuleList();
		_this2.getAllController();
		return _this2;
	}
	//存储模块Id


	_createClass(Createdialog, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    error = _props.error,
			    handleSubmit = _props.handleSubmit,
			    pristine = _props.pristine,
			    reset = _props.reset,
			    submitting = _props.submitting,
			    initialValues = _props.initialValues,
			    changeValues = _props.changeValues,
			    optionValues = _props.optionValues;
			var _state = this.state,
			    ModuleList = _state.ModuleList,
			    ControllerList = _state.ControllerList;


			return _react2.default.createElement(
				'div',
				{ className: 'g-create' },
				_react2.default.createElement(
					'form',
					{ onSubmit: handleSubmit(this.onSubmit), style: { marginTop: 50 } },
					_react2.default.createElement(_krUi.KrField, {
						style: { width: 300, marginLeft: 40, marginBottom: 16 },
						name: 'name', type: 'text',
						component: 'input', label: '\u540D\u79F0',
						requireLabel: true,
						requiredValue: true,
						errors: { requiredValue: '名称为必填项' },
						inline: true
					}),
					_react2.default.createElement(_krUi.KrField, {
						style: { width: 300, marginLeft: 40, marginBottom: 16 },
						name: 'code', type: 'text',
						component: 'input', label: '\u7F16\u53F7',
						requireLabel: true,
						requiredValue: true,
						errors: { requiredValue: '编码为必填项' },
						inline: true
					}),
					_react2.default.createElement(
						_krUi.KrField,
						{ style: { width: 300, marginLeft: 40, marginBottom: 16 }, name: 'type', component: 'group', label: '\u7C7B\u578B', inline: true, requireLabel: true },
						_react2.default.createElement(_krUi.KrField, { name: 'type', label: '\u83DC\u5355', type: 'radio', value: 'MENU', checked: true }),
						_react2.default.createElement(_krUi.KrField, { name: 'type', label: '\u64CD\u4F5C', type: 'radio', value: 'OPERATION' })
					),
					_react2.default.createElement(
						'div',
						{ className: 'u-operations' },
						_react2.default.createElement(_krUi.KrField, { name: 'module', style: { width: 220, marginLeft: 40 }, component: 'select', label: '\u6A21\u5757', options: ModuleList, inline: true, requireLabel: true, onChange: this.onSelect }),
						this.renderModule(),
						this.renderchildModule()
					),
					_react2.default.createElement(
						'div',
						{ className: 'u-method' },
						_react2.default.createElement(
							'div',
							{ className: 'u-method-title' },
							_react2.default.createElement(
								'span',
								{ className: 'require-label' },
								'*'
							),
							'\u65B9\u6CD5\u914D\u7F6E'
						),
						_react2.default.createElement(
							'div',
							{ className: 'u-method-content' },
							_react2.default.createElement(_krUi.KrField, { name: 'controller', style: { width: 600, marginLeft: 70 }, component: 'searchMethod', label: '', options: ControllerList, inline: true, onChange: this.onSelectController }),
							_react2.default.createElement(_krUi.Button, { label: 'Add', className: 'u-method-add', height: 34, onTouchTap: this.controllerAdd })
						),
						_react2.default.createElement(
							'div',
							{ className: 'u-method-content-list' },
							this.renderController()
						)
					),
					_react2.default.createElement(
						'div',
						{ style: { marginLeft: 140, marginTop: 30 } },
						_react2.default.createElement(_krUi.Button, { label: '\u786E\u5B9A', type: 'submit', height: 34, width: 90 })
					)
				)
			);
		}
	}]);

	return Createdialog;
}(_react.Component);

var validate = function validate(values) {

	var errors = {};
	if (!values.name) {
		errors.name = '请输入名称';
	}

	if (!values.code) {
		errors.code = '请输入编号';
	}
	if (!values.type) {
		errors.type = '请选择类型';
	}
	if (!values.module) {
		errors.module = '请选择模块';
	}
	if (!values.controller) {
		errors.controller = '请选择方法';
	}

	return errors;
};

var _default = Createdialog = (0, _reduxForm.reduxForm)({
	form: 'createdialog',
	validate: validate,
	enableReinitialize: true,
	keepDirtyOnReinitialize: true
})(Createdialog);

exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(Createdialog, 'Createdialog', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Permission/Operations/Createdialog/index.js');

	__REACT_HOT_LOADER__.register(validate, 'validate', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Permission/Operations/Createdialog/index.js');

	__REACT_HOT_LOADER__.register(_default, 'default', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Permission/Operations/Createdialog/index.js');
}();

;