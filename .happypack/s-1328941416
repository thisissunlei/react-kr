'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _simpleAssign = require('simple-assign');

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _reactAddonsPureRenderMixin = require('react-addons-pure-render-mixin');

var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);

var _Redux = require('kr/Redux');

var _reduxForm = require('redux-form');

var _mobxReact = require('mobx-react');

var _krUi = require('kr-ui');

var _State = require('./State');

var _State2 = _interopRequireDefault(_State);

var _State3 = require('../NewVisitIndent/State.js');

var _State4 = _interopRequireDefault(_State3);

var _NewCustomerList = require('../NewCustomerList');

var _NewCustomerList2 = _interopRequireDefault(_NewCustomerList);

var _LookCustomerList = require('../LookCustomerList');

var _LookCustomerList2 = _interopRequireDefault(_LookCustomerList);

var _State5 = require('../LookCustomerList/State');

var _State6 = _interopRequireDefault(_State5);

var _SearchUpperForm = require('../SearchUpperForm');

var _SearchUpperForm2 = _interopRequireDefault(_SearchUpperForm);

var _EditCustomerList = require('../EditCustomerList');

var _EditCustomerList2 = _interopRequireDefault(_EditCustomerList);

var _NewIndent = require('../NewIndent');

var _NewIndent2 = _interopRequireDefault(_NewIndent);

var _EditIndent = require('../EditIndent');

var _EditIndent2 = _interopRequireDefault(_EditIndent);

var _NewVisitIndent = require('../NewVisitIndent');

var _NewVisitIndent2 = _interopRequireDefault(_NewVisitIndent);

var _State7 = require('../EditCustomerList/State');

var _State8 = _interopRequireDefault(_State7);

var _SwitchPerson = require('../SwitchPerson');

var _SwitchPerson2 = _interopRequireDefault(_SwitchPerson);

var _OrderDelete = require('../OrderDelete');

var _OrderDelete2 = _interopRequireDefault(_OrderDelete);

var _State9 = require('../EditIndent/State');

var _State10 = _interopRequireDefault(_State9);

var _State11 = require('../NewIndent/State');

var _State12 = _interopRequireDefault(_State11);

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SignedClient = (0, _mobxReact.observer)(_class = function (_Component) {
	_inherits(SignedClient, _Component);

	function SignedClient(props, context) {
		_classCallCheck(this, SignedClient);

		var _this2 = _possibleConstructorReturn(this, (SignedClient.__proto__ || Object.getPrototypeOf(SignedClient)).call(this, props, context));

		_this2.switchLookCustomerList = function () {
			_State2.default.switchLookCustomerList();
		};

		_this2.onOperation = function (type, itemDetail) {
			if (type == 'watch') {
				_State6.default.orderList(itemDetail.id);
				_State6.default.lookListId(itemDetail.id, 'SIGN');
				_State2.default.switchLookCustomerList();
				_State2.default.MerchantsListId(itemDetail.id);
				_State2.default.companyName = itemDetail.company;
			}
		};

		_this2.switchEditCustomerList = function () {
			_State2.default.switchEditCustomerList();
		};

		_this2.switchCustomerIndent = function () {
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'customerId', _State2.default.listId));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'visitType', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'visitTime', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'isContinue', 'YES'));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'linkName', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'linkTel', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'visitDetail', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'levelId', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'remark', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'reasonId', ''));
			_Redux.Store.dispatch((0, _reduxForm.change)('NewVisitIndent', 'reasonOther', ''));
			_State4.default.noShowMatureTime();
			_State4.default.noShowOtherContinue();
			_State2.default.switchCustomerIndent();
		};

		_this2.openNewIndent = function () {
			_Redux.Store.dispatch((0, _reduxForm.initialize)('NewIndent', {}));
			_State2.default.orderNameInit(_State2.default.listId);
			_State2.default.switchNewIndent();
			_State12.default.cityLable = "";
		};

		_this2.switchNewIndent = function () {
			_State2.default.switchNewIndent();
		};

		_this2.openEditCustomerList = function () {
			var listId = _State2.default.listId;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('get-edit-info', { id: listId })).then(function (response) {
				_Redux.Store.dispatch((0, _reduxForm.initialize)('EditCustomerList', response));
				if (!response.countyName) {
					_State2.default.editCity = response.provinceName + '/' + response.cityName;
				} else if (!response.countyName && !response.cityName && !response.countyName) {
					_State2.default.editCity = "";
				} else {
					_State2.default.editCity = response.provinceName + '/' + response.cityName + '/' + response.countyName;
				}
				if (response.sourceName.indexOf("介绍") != -1) {

					_State8.default.sourceCustomer = true;
				} else {
					_State8.default.sourceCustomer = false;
				}
				if (!response) {
					return;
				}
				if (response.hasOffice == "YES") {
					_State2.default.hasOfficeChange(true);
				} else {
					_State2.default.hasOfficeChange(false);
				}
				_State2.default.editprojectName = response.projectCategoryName;
			}).catch(function (err) {});
			_State2.default.switchEditCustomerList();
		};

		_this2.switchEditIndent = function () {
			_State2.default.switchEditIndent();
		};

		_this2.openEditIndent = function (editIndentId) {
			var data = {};
			var orderReady = _this2.props.orderReady;

			_State2.default.editIndentIdChange(editIndentId);

			data.mainBillId = editIndentId;
			_State10.default.orderName = "";

			var _this = _this2;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('get-simple-order', data)).then(function (response) {
				for (var i = 0; i < orderReady.communityCity.length; i++) {
					if (orderReady.communityCity[i].communityId == response.communityid) {
						response.cityid = orderReady.communityCity[i].cityId;
						_State2.default.editIndentState = orderReady.communityCity[i].cityName;

						break;
					}
				}
				data.cityid = orderReady.communityCity[i].cityId;
				data.mainbillname = response.mainbillname;
				data.communityid = "" + response.communityid;
				data.mainbilltype = response.mainbilltype;
				data.mainbilldesc = response.mainbilldesc;
				_Redux.Store.dispatch((0, _reduxForm.initialize)('EditIndent', data));
				_State2.default.mainbillname = response.mainbillname;
				_State2.default.customerName = response.customerName;
				_State2.default.orderCount = response.orderCount;
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
			_State2.default.switchEditIndent();
		};

		_this2.openDeleteDialog = function () {
			_State2.default.openDeleteOrder();
		};

		_this2.onSelect = function (value) {
			var arrItem = [];
			var loadData = _this2.state.loadData;

			if (loadData.length > 15) {
				value = value.splice(0, 15);
			}
			if (loadData.length <= 15) {
				value = value.splice(0, loadData.length);
			}
			for (var i = 0; i < value.length; i++) {
				var allId = value[i];
				arrItem.push(loadData[allId].id);
			}
			if (value.length > 0) {
				_State2.default.openPersonDialog = true;
				_this2.setState({
					dialogNum: value.length,
					arrItem: arrItem
				});
			} else {
				_State2.default.openPersonDialog = false;
			}
		};

		_this2.onLoaded = function (value) {
			var loadData = value.items;
			_this2.setState({
				loadData: loadData
			});
		};

		_this2.merClose = function () {
			_State2.default.openPersonDialog = false;
		};

		_this2.onSearchSubmit = function (params) {
			var obj = {
				company: params.content
			};

			_State2.default.searchParams = obj;
		};

		_this2.openSearchUpperDialog = function () {
			_State2.default.searchParams.company = '';
			_State2.default.searchParams.cityId = '';
			_State2.default.searchParams.communityId = '';
			_State2.default.searchParams.signEndDate = '';
			_State2.default.searchParams.signStartDate = '';
			_State2.default.searchUpperCustomer();
		};

		_this2.onSearchUpperSubmit = function (searchParams) {
			searchParams = (0, _simpleAssign2.default)({}, _State2.default.searchParams, searchParams);
			searchParams.time = +new Date();
			if (searchParams.signStartDate != '' && searchParams.signEndDate != '' && searchParams.signEndDate < searchParams.signStartDate) {
				_krUi.Message.error('开始时间不能大于结束时间');
				return;
			}
			if (searchParams.signStartDate == '' && searchParams.signEndDate != '') {
				searchParams.signStartDate = searchParams.signEndDate;
			}
			if (searchParams.signStartDate != '' && searchParams.signEndDate == '') {
				searchParams.signEndDate = searchParams.signStartDate;
			}
			_State2.default.searchParams = searchParams;
			_State2.default.searchUpperCustomer();
		};

		_this2.openSwitchDialog = function () {
			_State2.default.openSwitchGoDialog();
		};

		_this2.switchPersonSubmit = function (params) {
			var arrItem = _this2.state.arrItem;

			if (!params.receiveId) {
				return;
			}
			var switchData = {
				receiveId: params.receiveId,
				ids: arrItem,
				operType: 'SIGN'
			};
			_State2.default.switchSureSubmit(switchData);
		};

		_this2.onExport = function (value) {
			_State2.default.exportData(value);
		};

		_this2.closeAllMerchants = function () {
			_State2.default.closeAllMerchants();
		};

		_this2.state = {
			//选中的数量
			dialogNum: 0,
			//加载后的数据
			loadData: [],
			//选中的值
			arrItem: []
		};
		return _this2;
	}

	//查看页面开关


	//查看相关操作

	//客户编辑页面开关

	//新增拜访记录的开关


	//打开新建订单页


	//新建订单页面的开关

	//编辑订单页面的开关


	//打开订单编辑页


	//订单删除


	//选中几项领取，转移等


	//加载所有数据


	//领取浮框的关闭


	//搜索


	_createClass(SignedClient, [{
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			_State2.default.openPersonDialog = false;
			if (nextProps.initSearch == 's') {
				_State2.default.searchParams = {
					time: +new Date(),
					company: '',
					page: 1
				};
			}
		}

		//高级查询


		//高级查询提交

		//转移客户

		//转移确定


		//导出

	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    searchSignParams = _props.searchSignParams,
			    dataReady = _props.dataReady,
			    orderReady = _props.orderReady;

			var blockStyle = {};
			if (_State2.default.openPersonDialog == true) {
				blockStyle = {
					display: 'inline-block'
				};
			} else {
				blockStyle = {
					display: 'none'
				};
			}

			return _react2.default.createElement(
				'div',
				{ className: 'm-signed', style: { paddingTop: 25 } },
				_react2.default.createElement(_krUi.Title, { value: '\u5BA2\u6237\u5217\u8868' }),
				_react2.default.createElement(
					'div',
					{ className: 'merchants-dialog', style: blockStyle },
					_react2.default.createElement(
						'div',
						{ className: 'selectCheck' },
						'\u5DF2\u9009\u4E2D',
						_react2.default.createElement(
							'span',
							{ className: 'dialog-number' },
							this.state.dialogNum
						),
						'\u9879'
					),
					_react2.default.createElement(_krUi.Button, { label: '\u8F6C\u79FB', type: 'button', onTouchTap: this.openSwitchDialog }),
					_react2.default.createElement('span', { className: 'mer-close', onClick: this.merClose })
				),
				_react2.default.createElement(
					_krUi.Row,
					{ style: { marginBottom: 21 } },
					_react2.default.createElement(
						_krUi.Col,
						{ align: 'right', style: { marginTop: 0, float: "right", marginRight: -10 } },
						_react2.default.createElement(
							_krUi.ListGroup,
							null,
							_react2.default.createElement(
								_krUi.ListGroupItem,
								null,
								_react2.default.createElement(_krUi.SearchForms, { placeholder: '\u8BF7\u8F93\u5165\u516C\u53F8\u540D\u79F0', inputName: 'sign', onSubmit: this.onSearchSubmit })
							),
							_react2.default.createElement(
								_krUi.ListGroupItem,
								null,
								_react2.default.createElement(_krUi.Button, { searchClick: this.openSearchUpperDialog, type: 'search', searchStyle: { marginLeft: '20', marginTop: '3' } })
							)
						)
					)
				),
				_react2.default.createElement(
					_krUi.Table,
					{
						style: { marginTop: 8 },
						ajax: true,
						onOperation: this.onOperation,
						displayCheckbox: true,
						exportSwitch: true,
						onSelect: this.onSelect,
						onLoaded: this.onLoaded,
						onExport: this.onExport,
						ajaxParams: _State2.default.searchParams,
						ajaxUrlName: 'signCustomers',
						ajaxFieldListName: 'items'
					},
					_react2.default.createElement(
						_krUi.TableHeader,
						null,
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u7B7E\u7EA6\u57CE\u5E02'
						),
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u516C\u53F8\u540D\u79F0'
						),
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u8BA2\u5355\u603B\u989D'
						),
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u5DF2\u56DE\u6B3E\u989D'
						),
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u672A\u56DE\u6B3E\u989D'
						),
						_react2.default.createElement(
							_krUi.TableHeaderColumn,
							null,
							'\u64CD\u4F5C'
						)
					),
					_react2.default.createElement(
						_krUi.TableBody,
						null,
						_react2.default.createElement(
							_krUi.TableRow,
							null,
							_react2.default.createElement(_krUi.TableRowColumn, { name: 'signCityName', component: function component(value, oldValue) {
									var TooltipStyle = "";
									if (value.length == "") {
										TooltipStyle = "none";
									} else {
										TooltipStyle = "inline-block";
									}
									return _react2.default.createElement(
										'div',
										{ style: { display: TooltipStyle, paddingTop: 5 }, className: 'financeDetail-hover' },
										_react2.default.createElement(
											'span',
											{ className: 'tableOver', style: { maxWidth: 160, display: "inline-block", overflowX: "hidden", textOverflow: " ellipsis", whiteSpace: " nowrap" } },
											value
										),
										_react2.default.createElement(
											_krUi.Tooltip,
											{ offsetTop: 5, place: 'top' },
											value
										)
									);
								} }),
							_react2.default.createElement(_krUi.TableRowColumn, { name: 'company', component: function component(value, oldValue) {
									var TooltipStyle = "";
									if (value.length == "") {
										TooltipStyle = "none";
									} else {
										TooltipStyle = "inline-block";
									}
									return _react2.default.createElement(
										'div',
										{ style: { display: TooltipStyle, paddingTop: 5 }, className: 'financeDetail-hover' },
										_react2.default.createElement(
											'span',
											{ className: 'tableOver', style: { maxWidth: 160, display: "inline-block", overflowX: "hidden", textOverflow: " ellipsis", whiteSpace: " nowrap" } },
											value
										),
										_react2.default.createElement(
											_krUi.Tooltip,
											{ offsetTop: 5, place: 'top' },
											value
										)
									);
								} }),
							_react2.default.createElement(_krUi.TableRowColumn, { name: 'contractTotalamount' }),
							_react2.default.createElement(_krUi.TableRowColumn, { name: 'contractBackamount' }),
							_react2.default.createElement(_krUi.TableRowColumn, { name: 'unBackamount' }),
							_react2.default.createElement(
								_krUi.TableRowColumn,
								{ type: 'operation' },
								_react2.default.createElement(_krUi.Button, { label: '\u67E5\u770B', type: 'operation', operation: 'watch' })
							)
						)
					),
					_react2.default.createElement(_krUi.TableFooter, null)
				),
				_react2.default.createElement(
					_krUi.Drawer,
					{
						open: _State2.default.openLookMerchants,
						width: 750,
						openSecondary: true,
						className: 'm-finance-drawer',
						containerStyle: { top: 60, paddingBottom: 228, zIndex: 20 }
					},
					_react2.default.createElement(_LookCustomerList2.default, {
						comeFrom: 'SignedClient',
						companyName: _State2.default.companyName,
						onCancel: this.switchLookCustomerList,
						listId: _State2.default.listId,
						dataReady: dataReady,
						editsSwitch: this.openEditCustomerList,
						IndentSwitch: this.switchCustomerIndent,
						newIndentSwitch: this.openNewIndent,
						editIndentSwitch: this.openEditIndent,
						DeleteSwitch: this.openDeleteDialog,
						operType: 'SIGN'
					})
				),
				_react2.default.createElement(
					_krUi.Drawer,
					{
						open: _State2.default.openEditCustomerList,
						width: 750,
						operType: 'SIGN',
						openSecondary: true,
						className: 'm-finance-drawer',
						containerStyle: { top: 60, paddingBottom: 228, zIndex: 20 }
					},
					_react2.default.createElement(_EditCustomerList2.default, {
						comeFrom: 'Merchant',
						onCancel: this.switchEditCustomerList,
						listId: _State2.default.listId,
						dataReady: dataReady,
						operType: 'SIGN',
						hasOffice: _State2.default.ishasOffice,
						cityName: _State2.default.editCity,
						listValue: _State2.default.editprojectName
					})
				),
				_react2.default.createElement(
					_krUi.Drawer,
					{
						open: _State2.default.openNewIndent,
						width: 750,
						openSecondary: true,
						className: 'm-finance-drawer',
						containerStyle: { top: 60, paddingBottom: 228, zIndex: 20 }
					},
					_react2.default.createElement(_NewIndent2.default, {
						companyName: _State2.default.companyName,
						onCancel: this.switchNewIndent,
						orderReady: orderReady,
						listId: _State2.default.listId,
						customerName: _State2.default.customerName,
						orderCount: _State2.default.orderCount,
						isOpenIndent: _State2.default.orderName

					})
				),
				_react2.default.createElement(
					_krUi.Drawer,
					{
						open: _State2.default.openNewCustomerIndent,
						width: 750,
						openSecondary: true,
						className: 'm-finance-drawer',
						containerStyle: { top: 60, paddingBottom: 228, zIndex: 20 }
					},
					_react2.default.createElement(_NewVisitIndent2.default, {
						comeFrom: 'Merchant',
						onCancel: this.switchCustomerIndent,
						listId: _State2.default.listId,
						selectDatas: dataReady,
						operType: 'SIGN',
						companyName: _State2.default.companyName
					})
				),
				_react2.default.createElement(
					_krUi.Drawer,
					{
						open: _State2.default.openEditIndent,
						width: 750,
						openSecondary: true,
						className: 'm-finance-drawer',
						containerStyle: { top: 60, paddingBottom: 228, zIndex: 20 }
					},
					_react2.default.createElement(_EditIndent2.default, {
						companyName: _State2.default.companyName,
						onCancel: this.switchEditIndent,
						listId: _State2.default.listId,
						orderReady: orderReady,
						editIndentData: _State2.default.editIndentData,
						editIndentId: _State2.default.editIndentId,
						customerName: _State2.default.customerName,
						orderCount: _State2.default.orderCount,
						mainbillname: _State2.default.mainbillname,
						cityName: _State2.default.editCity,
						listValue: _State2.default.editprojectName
					})
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u9AD8\u7EA7\u67E5\u8BE2',
						modal: true,
						onClose: this.openSearchUpperDialog,
						open: _State2.default.openSearchUpper,
						contentStyle: { width: '666', height: '385px', overflow: 'visible' },
						operType: 'SIGN'
					},
					_react2.default.createElement(_SearchUpperForm2.default, {
						onCancel: this.openSearchUpperDialog,
						onSubmit: this.onSearchUpperSubmit,
						flag: '\u7B7E\u7EA6',
						searchSignParams: searchSignParams
					})
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u63D0\u793A',
						modal: true,
						onClose: this.openDeleteDialog,
						open: _State2.default.openDelete,
						contentStyle: { width: '445', height: '230' }
					},
					_react2.default.createElement(_OrderDelete2.default, {
						onCancel: this.openDeleteDialog,
						orderId: _State2.default.deleteId,
						operType: 'SIGN',
						listId: _State2.default.listId
					})
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u8F6C\u79FB\u5BA2\u6237',
						modal: true,
						onClose: this.openSwitchDialog,
						open: _State2.default.openSwitch,
						contentStyle: { width: '444', height: '284', overflow: 'visible' }
					},
					_react2.default.createElement(_SwitchPerson2.default, {
						onSubmit: this.switchPersonSubmit,
						onCancel: this.openSwitchDialog,
						customerIds: this.state.dialogNum
					})
				),
				(_State2.default.openNewMerchants || _State2.default.openEditMerchants || _State2.default.openLookMerchants) && _react2.default.createElement('div', { className: 'mask',
					onClick: this.closeAllMerchants
				})
			);
		}
	}]);

	return SignedClient;
}(_react.Component)) || _class;

var _default = SignedClient;
exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(SignedClient, 'SignedClient', '/Users/tmac_zc/Code/kr-admin/src/Containers/Operation/CustomerManage/CustomerList/SignedClient/index.js');

	__REACT_HOT_LOADER__.register(_default, 'default', '/Users/tmac_zc/Code/kr-admin/src/Containers/Operation/CustomerManage/CustomerList/SignedClient/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,