'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _redux = require('redux');

var _reduxThunk = require('redux-thunk');

var _reduxThunk2 = _interopRequireDefault(_reduxThunk);

var _reduxLogger = require('redux-logger');

var _reduxLogger2 = _interopRequireDefault(_reduxLogger);

var _Modules = require('../Modules');

var _State = require('../State');

var _State2 = _interopRequireDefault(_State);

var _callAPIMiddleware = require('../Middlewares/callAPIMiddleware');

var _callAPIMiddleware2 = _interopRequireDefault(_callAPIMiddleware);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var loggerMiddleware = (0, _reduxLogger2.default)();

function configureStore(initialState) {

	var store = (0, _redux.createStore)((0, _redux.combineReducers)(_Modules.Reducers), _State2.default, (0, _redux.compose)((0, _redux.applyMiddleware)(_reduxThunk2.default, _callAPIMiddleware2.default), (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && typeof window.devToolsExtension !== 'undefined' ? window.devToolsExtension() : function (f) {
		return f;
	}));

	//loggerMiddleware

	return store;
}

module.exports = configureStore(_State2.default);
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(loggerMiddleware, 'loggerMiddleware', '/Users/liuyihao/Code/kr-admin/src/Redux/Store/configureStore.development.js');

	__REACT_HOT_LOADER__.register(configureStore, 'configureStore', '/Users/liuyihao/Code/kr-admin/src/Redux/Store/configureStore.development.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9SZWR1eC9TdG9yZS9jb25maWd1cmVTdG9yZS5kZXZlbG9wbWVudC5qcyJdLCJuYW1lcyI6WyJsb2dnZXJNaWRkbGV3YXJlIiwiY29uZmlndXJlU3RvcmUiLCJpbml0aWFsU3RhdGUiLCJzdG9yZSIsIndpbmRvdyIsImRldlRvb2xzRXh0ZW5zaW9uIiwiZiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7OztBQUNBOzs7O0FBRUE7O0FBRUE7Ozs7QUFFQTs7Ozs7O0FBR0EsSUFBTUEsbUJBQW1CLDRCQUF6Qjs7QUFHQSxTQUFTQyxjQUFULENBQXdCQyxZQUF4QixFQUFzQzs7QUFFckMsS0FBSUMsUUFBUSx3QkFBWSw4Q0FBWixtQkFBa0Qsb0JBQVEsOEVBQVIsRUFHNUQsUUFBT0MsTUFBUCx5Q0FBT0EsTUFBUCxPQUFrQixRQUFsQixJQUE4QixPQUFPQSxPQUFPQyxpQkFBZCxLQUFvQyxXQUFsRSxHQUFnRkQsT0FBT0MsaUJBQVAsRUFBaEYsR0FBNkc7QUFBQSxTQUFLQyxDQUFMO0FBQUEsRUFIakQsQ0FBbEQsQ0FBWjs7QUFNQTs7QUFFRyxRQUFPSCxLQUFQO0FBQ0g7O0FBRURJLE9BQU9DLE9BQVAsR0FBaUJQLCtCQUFqQjs7Ozs7Ozs7K0JBaEJNRCxnQjs7K0JBR0dDLGMiLCJmaWxlIjoiY29uZmlndXJlU3RvcmUuZGV2ZWxvcG1lbnQuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xpdXlpaGFvL0NvZGUva3ItYWRtaW4iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTdG9yZSxjb21iaW5lUmVkdWNlcnMsYXBwbHlNaWRkbGV3YXJlLGNvbXBvc2V9IGZyb20gJ3JlZHV4JztcbmltcG9ydCB0aHVua01pZGRsZXdhcmUgZnJvbSAncmVkdXgtdGh1bmsnO1xuaW1wb3J0IGNyZWF0ZUxvZ2dlciBmcm9tICdyZWR1eC1sb2dnZXInO1xuXG5pbXBvcnQge1JlZHVjZXJzfSBmcm9tICcuLi9Nb2R1bGVzJztcblxuaW1wb3J0IGluaXRTdGF0ZSBmcm9tICcuLi9TdGF0ZSc7XG5cbmltcG9ydCAgY2FsbEFQSU1pZGRsZXdhcmUgZnJvbSAnLi4vTWlkZGxld2FyZXMvY2FsbEFQSU1pZGRsZXdhcmUnO1xuXG5cbmNvbnN0IGxvZ2dlck1pZGRsZXdhcmUgPSBjcmVhdGVMb2dnZXIoKTtcblxuXG5mdW5jdGlvbiBjb25maWd1cmVTdG9yZShpbml0aWFsU3RhdGUpIHtcblxuXHRsZXQgc3RvcmUgPSBjcmVhdGVTdG9yZShjb21iaW5lUmVkdWNlcnMoUmVkdWNlcnMpLCBpbml0U3RhdGUsIGNvbXBvc2UoYXBwbHlNaWRkbGV3YXJlKFxuXHRcdFx0dGh1bmtNaWRkbGV3YXJlLGNhbGxBUElNaWRkbGV3YXJlXG5cdFx0KSxcblx0XHQgdHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHdpbmRvdy5kZXZUb29sc0V4dGVuc2lvbiAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cuZGV2VG9vbHNFeHRlbnNpb24oKSA6IGYgPT4gZlxuXHQpKTtcblxuXHQvL2xvZ2dlck1pZGRsZXdhcmVcblxuICAgIHJldHVybiBzdG9yZVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbmZpZ3VyZVN0b3JlKGluaXRTdGF0ZSk7XG5cbiJdfQ==