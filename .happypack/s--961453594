'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Redux = require('kr/Redux');

var _reactBinding = require('react-binding');

var _dateformat = require('dateformat');

var _dateformat2 = _interopRequireDefault(_dateformat);

var _reduxForm = require('redux-form');

var _krUi = require('kr-ui');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SelectStationForm = function (_Component) {
	_inherits(SelectStationForm, _Component);

	function SelectStationForm(props, context) {
		_classCallCheck(this, SelectStationForm);

		var _this2 = _possibleConstructorReturn(this, (SelectStationForm.__proto__ || Object.getPrototypeOf(SelectStationForm)).call(this, props, context));

		_this2.onSubmit = _this2.onSubmit.bind(_this2);
		_this2.onCancel = _this2.onCancel.bind(_this2);
		_this2.onSelect = _this2.onSelect.bind(_this2);
		_this2.getLoadData = _this2.getLoadData.bind(_this2);
		_this2.onChangeRentBeginDate = _this2.onChangeRentBeginDate.bind(_this2);

		_this2.state = {
			stationVos: [],
			selected: []
		};

		return _this2;
	}

	_createClass(SelectStationForm, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			this.getLoadData();
		}
	}, {
		key: 'onChangeRentBeginDate',
		value: function onChangeRentBeginDate(value) {
			value = (0, _dateformat2.default)(value, 'yyyy-mm-dd') + ' 00:00:00';
			var _state = this.state,
			    stationVos = _state.stationVos,
			    selected = _state.selected;
			var leaseEnddate = this.props.changeValues.leaseEnddate;
			//判断选择的时间是否大于租赁起始时间

			var endDate = leaseEnddate;
			var rentBeginDate = Date.parse((0, _dateformat2.default)(value, 'yyyy-mm-dd') + ' 00:00:00');

			if (endDate < rentBeginDate) {
				_krUi.Notify.show([{
					message: '选择的减租开始时间不能大于租赁期限的终止时间',
					type: 'danger'
				}]);
				return false;
			}

			if (!selected.length) {
				_krUi.Notify.show([{
					message: '未选择减租工位',
					type: 'danger'
				}]);
				return;
			}
			stationVos = [].concat(stationVos);
			//比较减租开始日期不能小于工位起始日期
			var isOK = true;
			stationVos.map(function (item, index) {
				var stationStartDate = Date.parse((0, _dateformat2.default)(item.leaseBeginDate, 'yyyy-mm-dd'));
				if (rentBeginDate < stationStartDate) {
					isOK = false;
				}
			});

			if (!isOK) {
				_krUi.Notify.show([{
					message: '减租开始日期不能小于工位开始的时间',
					type: 'danger'
				}]);
				return;
			}

			stationVos.map(function (item, index) {
				if (selected.indexOf(index) !== -1) {
					item.rentBeginDate = value;
				} else {
					item.rentBeginDate = '';
				}
				return item;
			});

			this.setState({
				stationVos: stationVos
			});
		}
	}, {
		key: 'getLoadData',
		value: function getLoadData() {
			var _this = this;
			var params = this.context.params;

			_Redux.Store.dispatch(_Redux.Actions.callAPI('getStationOrSettingList', {
				mainBillid: params.orderId,
				page: 1,
				pagesize: 100,
				contractId: params.id
			})).then(function (response) {
				response.items = response.items.map(function (item) {
					if (item.show) {
						item.rentBeginDate = item.lastEditDate;
					}
					return item;
				});
				_this.setState({
					stationVos: response.items
				});
			}).catch(function (err) {
				_krUi.Notify.show([{
					message: '后台出错请联系管理员',
					type: 'danger'
				}]);
			});
		}
	}, {
		key: 'onSelect',
		value: function onSelect(selected) {
			this.setState({
				selected: selected
			}, function () {});
		}
	}, {
		key: 'onSubmit',
		value: function onSubmit() {
			var _state2 = this.state,
			    stationVos = _state2.stationVos,
			    selected = _state2.selected;

			var selectedStationVos = [];

			selectedStationVos = stationVos.filter(function (item, index) {
				if (selected.indexOf(index) !== -1) {
					return true;
				}
				return false;
			});

			if (!selectedStationVos.length) {
				_krUi.Notify.show([{
					message: '请选择工位',
					type: 'danger'
				}]);

				return;
			}

			//选中的必须要有租赁结束日期
			var someStartDate = true;

			selectedStationVos.forEach(function (item, index) {
				if (!item.rentBeginDate) {
					someStartDate = false;
				}
			});

			if (!someStartDate) {
				_krUi.Notify.show([{
					message: '选择的工位必须要有租赁开始时间',
					type: 'danger'
				}]);
				return;
			}

			//工位结束时间相同
			var some = true;
			selectedStationVos.sort(function (pre, next) {
				var preDate = (0, _dateformat2.default)(pre.leaseEndDate, 'yyyy-mm-dd');
				var nextDate = (0, _dateformat2.default)(next.leaseEndDate, 'yyyy-mm-dd');
				if (preDate != nextDate) {
					some = false;
				}
				return -1;
			});

			if (!some) {
				_krUi.Notify.show([{
					message: '请选择相同日期',
					type: 'danger'
				}]);
				return false;
			}

			//修改日期
			var resultStationVos = [];
			selectedStationVos.forEach(function (item, index) {
				var obj = {};
				obj.id = item.id;
				obj.stationId = item.stationId;
				obj.stationName = item.stationName;
				obj.unitprice = item.unitprice;
				obj.stationType = item.stationType;
				obj.stationBeginDate = (0, _dateformat2.default)(item.leaseBeginDate, 'yyyy-mm-dd');
				obj.stationEndDate = (0, _dateformat2.default)(item.leaseEndDate, 'yyyy-mm-dd');

				obj.leaseBeginDate = (0, _dateformat2.default)(item.rentBeginDate, 'yyyy-mm-dd');
				obj.leaseEndDate = (0, _dateformat2.default)(item.leaseEndDate, 'yyyy-mm-dd');
				obj.rentBeginDate = (0, _dateformat2.default)(item.rentBeginDate, 'yyyy-mm-dd');

				resultStationVos.push(obj);
			});

			selectedStationVos = resultStationVos;

			//选择的减租开始日期必须要在工位的起始日期和结束日期范围内
			var isOK = 1;
			selectedStationVos.map(function (item, index) {
				var stationBeginDate = Date.parse((0, _dateformat2.default)(item.stationBeginDate, 'yyyy-mm-dd') + ' 00:00:00');
				var stationEndDate = Date.parse((0, _dateformat2.default)(item.stationEndDate, 'yyyy-mm-dd') + ' 00:00:00');
				var rentBeginDate = Date.parse((0, _dateformat2.default)(item.rentBeginDate, 'yyyy-mm-dd') + ' 00:00:00');

				if (stationBeginDate >= rentBeginDate || rentBeginDate >= stationEndDate) {
					isOK = 0;
				}
			});

			if (!isOK) {
				_krUi.Notify.show([{
					message: '减租开始时间必须要在选择工位的租赁开始日期和结束日期之内',
					type: 'danger'
				}]);
				return false;
			}
			console.log('---->>>>', selectedStationVos);

			_Redux.Store.dispatch((0, _reduxForm.change)('reduceCreateForm', 'leaseBegindate', selectedStationVos[0].leaseEndDate));

			var onSubmit = this.props.onSubmit;

			onSubmit && onSubmit(selectedStationVos);
		}
	}, {
		key: 'onCancel',
		value: function onCancel() {
			var onCancel = this.props.onCancel;

			onCancel && onCancel();
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    error = _props.error,
			    handleSubmit = _props.handleSubmit,
			    pristine = _props.pristine,
			    reset = _props.reset,
			    submitting = _props.submitting,
			    changeValues = _props.changeValues;
			var stationVos = this.state.stationVos;

			var overfolw = {
				'overflow': 'hidden',
				maxHeight: 510
			};
			var height = {
				height: stationVos.length * 45,
				maxHeight: 667
			};
			return _react2.default.createElement(
				'div',
				{ style: { height: 667, marginTop: 20 } },
				_react2.default.createElement(
					'form',
					{ onSubmit: handleSubmit(this.onSubmit) },
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'rentBeginDate', component: 'date', label: '\u51CF\u79DF\u5F00\u59CB\u65F6\u95F4\uFF1A', onChange: this.onChangeRentBeginDate, inline: true }),
					_react2.default.createElement(
						_krUi.Table,
						{ onSelect: this.onSelect, style: overfolw },
						_react2.default.createElement(
							_krUi.TableHeader,
							null,
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u7C7B\u522B'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u7F16\u53F7\uFF0F\u540D\u79F0'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u5355\u4EF7\uFF08\u5143\uFF0F\u6708\uFF09'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u8D77\u59CB\u65E5\u671F'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u7ED3\u675F\u65E5\u671F'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u51CF\u79DF\u5F00\u59CB\u65E5\u671F'
							)
						),
						_react2.default.createElement(
							_krUi.TableBody,
							null,
							stationVos && stationVos.map(function (item, index) {
								return _react2.default.createElement(
									_krUi.TableRow,
									{ key: index },
									_react2.default.createElement(
										_krUi.TableRowColumn,
										null,
										item.stationType == 1 ? '工位' : '会议室'
									),
									_react2.default.createElement(
										_krUi.TableRowColumn,
										null,
										item.stationName
									),
									_react2.default.createElement(
										_krUi.TableRowColumn,
										null,
										item.unitprice
									),
									_react2.default.createElement(
										_krUi.TableRowColumn,
										null,
										_react2.default.createElement(_krUi.KrDate, { value: item.leaseBeginDate })
									),
									_react2.default.createElement(
										_krUi.TableRowColumn,
										null,
										_react2.default.createElement(_krUi.KrDate, { value: item.leaseEndDate })
									),
									_react2.default.createElement(
										_krUi.TableRowColumn,
										null,
										item.rentBeginDate && (0, _dateformat2.default)(item.rentBeginDate, 'yyyy-mm-dd')
									)
								);
							})
						)
					),
					_react2.default.createElement(
						_krUi.Grid,
						null,
						_react2.default.createElement(
							_krUi.Row,
							{ style: { marginTop: 30, paddingBottom: 24 } },
							_react2.default.createElement(_krUi.Col, { md: 4 }),
							_react2.default.createElement(
								_krUi.Col,
								{ md: 2, align: 'center' },
								' ',
								_react2.default.createElement(_krUi.Button, { label: '\u786E\u5B9A', type: 'submit' }),
								' '
							),
							_react2.default.createElement(
								_krUi.Col,
								{ md: 2, align: 'center' },
								' ',
								_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', cancle: true, type: 'button', onTouchTap: this.onCancel }),
								' '
							),
							_react2.default.createElement(_krUi.Col, { md: 4 })
						)
					)
				)
			);
		}
	}]);

	return SelectStationForm;
}(_react.Component);

SelectStationForm.PropTypes = {
	searchParams: _react2.default.PropTypes.object,
	onSubmit: _react2.default.PropTypes.func,
	onCancel: _react2.default.PropTypes.func
};
SelectStationForm.contextTypes = {
	params: _react2.default.PropTypes.object.isRequired
};

var _default = (0, _reduxForm.reduxForm)({
	form: 'selectStationForm',
	enableReinitialize: true,
	keepDirtyOnReinitialize: true
})(SelectStationForm);

exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(SelectStationForm, 'SelectStationForm', '/Users/tmac_zc/Code/kr-admin/src/Containers/Operation/CustomerManage/Agreement/Reduce/Edit/AllStation.js');

	__REACT_HOT_LOADER__.register(_default, 'default', '/Users/tmac_zc/Code/kr-admin/src/Containers/Operation/CustomerManage/Agreement/Reduce/Edit/AllStation.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Db250YWluZXJzL09wZXJhdGlvbi9DdXN0b21lck1hbmFnZS9BZ3JlZW1lbnQvUmVkdWNlL0VkaXQvQWxsU3RhdGlvbi5qcyJdLCJuYW1lcyI6WyJTZWxlY3RTdGF0aW9uRm9ybSIsInByb3BzIiwiY29udGV4dCIsIm9uU3VibWl0IiwiYmluZCIsIm9uQ2FuY2VsIiwib25TZWxlY3QiLCJnZXRMb2FkRGF0YSIsIm9uQ2hhbmdlUmVudEJlZ2luRGF0ZSIsInN0YXRlIiwic3RhdGlvblZvcyIsInNlbGVjdGVkIiwidmFsdWUiLCJsZWFzZUVuZGRhdGUiLCJjaGFuZ2VWYWx1ZXMiLCJlbmREYXRlIiwicmVudEJlZ2luRGF0ZSIsIkRhdGUiLCJwYXJzZSIsInNob3ciLCJtZXNzYWdlIiwidHlwZSIsImxlbmd0aCIsImNvbmNhdCIsImlzT0siLCJtYXAiLCJpdGVtIiwiaW5kZXgiLCJzdGF0aW9uU3RhcnREYXRlIiwibGVhc2VCZWdpbkRhdGUiLCJpbmRleE9mIiwic2V0U3RhdGUiLCJfdGhpcyIsInBhcmFtcyIsImRpc3BhdGNoIiwiY2FsbEFQSSIsIm1haW5CaWxsaWQiLCJvcmRlcklkIiwicGFnZSIsInBhZ2VzaXplIiwiY29udHJhY3RJZCIsImlkIiwidGhlbiIsInJlc3BvbnNlIiwiaXRlbXMiLCJsYXN0RWRpdERhdGUiLCJjYXRjaCIsImVyciIsInNlbGVjdGVkU3RhdGlvblZvcyIsImZpbHRlciIsInNvbWVTdGFydERhdGUiLCJmb3JFYWNoIiwic29tZSIsInNvcnQiLCJwcmUiLCJuZXh0IiwicHJlRGF0ZSIsImxlYXNlRW5kRGF0ZSIsIm5leHREYXRlIiwicmVzdWx0U3RhdGlvblZvcyIsIm9iaiIsInN0YXRpb25JZCIsInN0YXRpb25OYW1lIiwidW5pdHByaWNlIiwic3RhdGlvblR5cGUiLCJzdGF0aW9uQmVnaW5EYXRlIiwic3RhdGlvbkVuZERhdGUiLCJwdXNoIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwiaGFuZGxlU3VibWl0IiwicHJpc3RpbmUiLCJyZXNldCIsInN1Ym1pdHRpbmciLCJvdmVyZm9sdyIsIm1heEhlaWdodCIsImhlaWdodCIsIm1hcmdpblRvcCIsInBhZGRpbmdCb3R0b20iLCJQcm9wVHlwZXMiLCJzZWFyY2hQYXJhbXMiLCJvYmplY3QiLCJmdW5jIiwiY29udGV4dFR5cGVzIiwiaXNSZXF1aXJlZCIsImZvcm0iLCJlbmFibGVSZWluaXRpYWxpemUiLCJrZWVwRGlydHlPblJlaW5pdGlhbGl6ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUlBOztBQUdBOztBQUdBOzs7O0FBQ0E7O0FBZUE7Ozs7Ozs7Ozs7SUFrQk1BLGlCOzs7QUFVTCw0QkFBWUMsS0FBWixFQUFtQkMsT0FBbkIsRUFBNEI7QUFBQTs7QUFBQSxxSUFDckJELEtBRHFCLEVBQ2RDLE9BRGM7O0FBSTNCLFNBQUtDLFFBQUwsR0FBZ0IsT0FBS0EsUUFBTCxDQUFjQyxJQUFkLFFBQWhCO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQixPQUFLQSxRQUFMLENBQWNELElBQWQsUUFBaEI7QUFDQSxTQUFLRSxRQUFMLEdBQWdCLE9BQUtBLFFBQUwsQ0FBY0YsSUFBZCxRQUFoQjtBQUNBLFNBQUtHLFdBQUwsR0FBbUIsT0FBS0EsV0FBTCxDQUFpQkgsSUFBakIsUUFBbkI7QUFDQSxTQUFLSSxxQkFBTCxHQUE2QixPQUFLQSxxQkFBTCxDQUEyQkosSUFBM0IsUUFBN0I7O0FBRUEsU0FBS0ssS0FBTCxHQUFhO0FBQ1pDLGVBQVksRUFEQTtBQUVaQyxhQUFVO0FBRkUsR0FBYjs7QUFWMkI7QUFlM0I7Ozs7c0NBRW1CO0FBQ25CLFFBQUtKLFdBQUw7QUFDQTs7O3dDQUdxQkssSyxFQUFPO0FBQzVCQSxXQUFRLDBCQUFXQSxLQUFYLEVBQWtCLFlBQWxCLElBQWtDLFdBQTFDO0FBRDRCLGdCQUt4QixLQUFLSCxLQUxtQjtBQUFBLE9BRzNCQyxVQUgyQixVQUczQkEsVUFIMkI7QUFBQSxPQUkzQkMsUUFKMkIsVUFJM0JBLFFBSjJCO0FBQUEsT0FTM0JFLFlBVDJCLEdB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QUFNLG1CQURrQjtBQUV4QkMscUJBQW9CLElBRkk7QUFHeEJDLDBCQUF5QjtBQUhELENBQVYsRUFJWnhGLGlCQUpZLEM7Ozs7Ozs7Ozs7K0JBN1RUQSxpQiIsImZpbGUiOiJBbGxTdGF0aW9uLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90bWFjX3pjL0NvZGUva3ItYWRtaW4iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHtcblx0Q29tcG9uZW50LFxuXHRQcm9wVHlwZXNcbn0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtcblx0Y29ubmVjdFxufSBmcm9tICdrci9SZWR1eCc7XG5pbXBvcnQge1xuXHRCaW5kZXJcbn0gZnJvbSAncmVhY3QtYmluZGluZyc7XG5pbXBvcnQgZGF0ZUZvcm1hdCBmcm9tICdkYXRlZm9ybWF0JztcbmltcG9ydCB7XG5cdHJlZHV4Rm9ybSxcblx0Zm9ybVZhbHVlU2VsZWN0b3IsXG5cdGNoYW5nZSxcblx0aW5pdGlhbGl6ZSxcblx0YXJyYXlQdXNoLFxuXHRhcnJheUluc2VydCxcblx0RmllbGRBcnJheVxufSBmcm9tICdyZWR1eC1mb3JtJztcblxuaW1wb3J0IHtcblx0QWN0aW9ucyxcblx0U3RvcmVcbn0gZnJvbSAna3IvUmVkdXgnO1xuXG5pbXBvcnQge1xuXHRGb3JtLFxuXHRUYWJsZSxcblx0VGFibGVCb2R5LFxuXHRUYWJsZUhlYWRlcixcblx0VGFibGVIZWFkZXJDb2x1bW4sXG5cdFRhYmxlUm93LFxuXHRUYWJsZVJvd0NvbHVtbixcblx0VGFibGVGb290ZXIsXG5cdEtyRmllbGQsXG5cdEdyaWQsXG5cdFJvdyxcblx0Q29sLFxuXHRCdXR0b24sXG5cdE5vdGlmeSxcblx0S3JEYXRlLFxufSBmcm9tICdrci11aSc7XG5cbmNsYXNzIFNlbGVjdFN0YXRpb25Gb3JtIGV4dGVuZHMgQ29tcG9uZW50IHtcblxuXHRzdGF0aWMgUHJvcFR5cGVzID0ge1xuXHRcdHNlYXJjaFBhcmFtczogUmVhY3QuUHJvcFR5cGVzLm9iamVjdCxcblx0XHRvblN1Ym1pdDogUmVhY3QuUHJvcFR5cGVzLmZ1bmMsXG5cdFx0b25DYW5jZWw6IFJlYWN0LlByb3BUeXBlcy5mdW5jLFxuXHR9XG5cdHN0YXRpYyBjb250ZXh0VHlwZXMgPSB7XG5cdFx0cGFyYW1zOiBSZWFjdC5Qcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcblx0fVxuXHRjb25zdHJ1Y3Rvcihwcm9wcywgY29udGV4dCkge1xuXHRcdHN1cGVyKHByb3BzLCBjb250ZXh0KTtcblxuXG5cdFx0dGhpcy5vblN1Ym1pdCA9IHRoaXMub25TdWJtaXQuYmluZCh0aGlzKTtcblx0XHR0aGlzLm9uQ2FuY2VsID0gdGhpcy5vbkNhbmNlbC5iaW5kKHRoaXMpO1xuXHRcdHRoaXMub25TZWxlY3QgPSB0aGlzLm9uU2VsZWN0LmJpbmQodGhpcyk7XG5cdFx0dGhpcy5nZXRMb2FkRGF0YSA9IHRoaXMuZ2V0TG9hZERhdGEuYmluZCh0aGlzKTtcblx0XHR0aGlzLm9uQ2hhbmdlUmVudEJlZ2luRGF0ZSA9IHRoaXMub25DaGFuZ2VSZW50QmVnaW5EYXRlLmJpbmQodGhpcyk7XG5cblx0XHR0aGlzLnN0YXRlID0ge1xuXHRcdFx0c3RhdGlvblZvczogW10sXG5cdFx0XHRzZWxlY3RlZDogW10sXG5cdFx0fVxuXG5cdH1cblxuXHRjb21wb25lbnREaWRNb3VudCgpIHtcblx0XHR0aGlzLmdldExvYWREYXRhKCk7XG5cdH1cblxuXG5cdG9uQ2hhbmdlUmVudEJlZ2luRGF0ZSh2YWx1ZSkge1xuXHRcdHZhbHVlID0gZGF0ZUZvcm1hdCh2YWx1ZSwgJ3l5eXktbW0tZGQnKSArICcgMDA6MDA6MDAnO1xuXHRcdGxldCB7XG5cdFx0XHRzdGF0aW9uVm9zLFxuXHRcdFx0c2VsZWN0ZWRcblx0XHR9ID0gdGhpcy5zdGF0ZTtcblxuXG5cdFx0bGV0IHtcblx0XHRcdGxlYXNlRW5kZGF0ZVxuXHRcdH0gPSB0aGlzLnByb3BzLmNoYW5nZVZhbHVlcztcblx0XHQvL+WIpOaWremAieaLqeeahOaXtumXtOaYr+WQpuWkp+S6juenn+i1gei1t+Wni+aXtumXtFxuXHRcdGxldCBlbmREYXRlID0gbGVhc2VFbmRkYXRlO1xuXHRcdGxldCByZW50QmVnaW5EYXRlID0gRGF0ZS5wYXJzZShkYXRlRm9ybWF0KHZhbHVlLCAneXl5eS1tbS1kZCcpICsgJyAwMDowMDowMCcpO1xuXG5cdFx0aWYgKGVuZERhdGUgPCByZW50QmVnaW5EYXRlKSB7XG5cdFx0XHROb3RpZnkuc2hvdyhbe1xuXHRcdFx0XHRtZXNzYWdlOiAn6YCJ5oup55qE5YeP56ef5byA5aeL5pe26Ze05LiN6IO95aSn5LqO56ef6LWB5pyf6ZmQ55qE57uI5q2i5pe26Ze0Jyxcblx0XHRcdFx0dHlwZTogJ2RhbmdlcicsXG5cdFx0XHR9XSk7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0aWYgKCFzZWxlY3RlZC5sZW5ndGgpIHtcblx0XHRcdE5vdGlmeS5zaG93KFt7XG5cdFx0XHRcdG1lc3NhZ2U6ICfmnKrpgInmi6nlh4/np5/lt6XkvY0nLFxuXHRcdFx0XHR0eXBlOiAnZGFuZ2VyJyxcblx0XHRcdH1dKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0c3RhdGlvblZvcyA9IFtdLmNvbmNhdChzdGF0aW9uVm9zKTtcblx0XHQvL+avlOi+g+WHj+enn+W8gOWni+aXpeacn+S4jeiDveWwj+S6juW3peS9jei1t+Wni+aXpeacn1xuXHRcdGxldCBpc09LID0gdHJ1ZTtcblx0XHRzdGF0aW9uVm9zLm1hcChmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuXHRcdFx0bGV0IHN0YXRpb25TdGFydERhdGUgPSBEYXRlLnBhcnNlKGRhdGVGb3JtYXQoaXRlbS5sZWFzZUJlZ2luRGF0ZSwgJ3l5eXktbW0tZGQnKSk7XG5cdFx0XHRpZiAocmVudEJlZ2luRGF0ZSA8IHN0YXRpb25TdGFydERhdGUpIHtcblx0XHRcdFx0aXNPSyA9IGZhbHNlO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0aWYgKCFpc09LKSB7XG5cdFx0XHROb3RpZnkuc2hvdyhbe1xuXHRcdFx0XHRtZXNzYWdlOiAn5YeP56ef5byA5aeL5pel5pyf5LiN6IO95bCP5LqO5bel5L2N5byA5aeL55qE5pe26Ze0Jyxcblx0XHRcdFx0dHlwZTogJ2RhbmdlcicsXG5cdFx0XHR9XSk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0c3RhdGlvblZvcy5tYXAoZnVuY3Rpb24oaXRlbSwgaW5kZXgpIHtcblx0XHRcdGlmIChzZWxlY3RlZC5pbmRleE9mKGluZGV4KSAhPT0gLTEpIHtcblx0XHRcdFx0aXRlbS5yZW50QmVnaW5EYXRlID0gdmFsdWU7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpdGVtLnJlbnRCZWdpbkRhdGUgPSAnJztcblx0XHRcdH1cblx0XHRcdHJldHVybiBpdGVtO1xuXHRcdH0pO1xuXG5cdFx0dGhpcy5zZXRTdGF0ZSh7XG5cdFx0XHRzdGF0aW9uVm9zXG5cdFx0fSk7XG5cblx0fVxuXG5cblx0Z2V0TG9hZERhdGEoKSB7XG5cdFx0dmFyIF90aGlzID0gdGhpcztcblx0XHRsZXQge1xuXHRcdFx0cGFyYW1zXG5cdFx0fSA9IHRoaXMuY29udGV4dDtcblx0XHRTdG9yZS5kaXNwYXRjaChBY3Rpb25zLmNhbGxBUEkoJ2dldFN0YXRpb25PclNldHRpbmdMaXN0Jywge1xuXHRcdFx0bWFpbkJpbGxpZDogcGFyYW1zLm9yZGVySWQsXG5cdFx0XHRwYWdlOiAxLFxuXHRcdFx0cGFnZXNpemU6IDEwMCxcblx0XHRcdGNvbnRyYWN0SWQ6IHBhcmFtcy5pZFxuXHRcdH0pKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG5cdFx0XHRyZXNwb25zZS5pdGVtcyA9IHJlc3BvbnNlLml0ZW1zLm1hcCgoaXRlbSk9Pntcblx0XHRcdFx0aWYoaXRlbS5zaG93KXtcblx0XHRcdFx0XHRpdGVtLnJlbnRCZWdpbkRhdGUgPSBpdGVtLmxhc3RFZGl0RGF0ZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gaXRlbTtcblx0XHRcdH0pXG5cdFx0XHRfdGhpcy5zZXRTdGF0ZSh7XG5cdFx0XHRcdHN0YXRpb25Wb3M6IHJlc3BvbnNlLml0ZW1zXG5cdFx0XHR9KTtcblx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcblx0XHRcdE5vdGlmeS5zaG93KFt7XG5cdFx0XHRcdG1lc3NhZ2U6ICflkI7lj7Dlh7rplJnor7fogZTns7vnrqHnkIblkZgnLFxuXHRcdFx0XHR0eXBlOiAnZGFuZ2VyJyxcblx0XHRcdH1dKTtcblx0XHR9KTtcblx0fVxuXG5cdG9uU2VsZWN0KHNlbGVjdGVkKSB7XG5cdFx0dGhpcy5zZXRTdGF0ZSh7XG5cdFx0XHRzZWxlY3RlZFxuXHRcdH0sIGZ1bmN0aW9uKCkge1xuXG5cdFx0fSk7XG5cdH1cblxuXHRvblN1Ym1pdCgpIHtcblxuXHRcdGxldCB7XG5cdFx0XHRzdGF0aW9uVm9zLFxuXHRcdFx0c2VsZWN0ZWRcblx0XHR9ID0gdGhpcy5zdGF0ZTtcblx0XHRsZXQgc2VsZWN0ZWRTdGF0aW9uVm9zID0gW107XG5cblx0XHRzZWxlY3RlZFN0YXRpb25Wb3MgPSBzdGF0aW9uVm9zLmZpbHRlcihmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuXHRcdFx0aWYgKHNlbGVjdGVkLmluZGV4T2YoaW5kZXgpICE9PSAtMSkge1xuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9KTtcblxuXG5cdFx0aWYgKCFzZWxlY3RlZFN0YXRpb25Wb3MubGVuZ3RoKSB7XG5cdFx0XHROb3RpZnkuc2hvdyhbe1xuXHRcdFx0XHRtZXNzYWdlOiAn6K+36YCJ5oup5bel5L2NJyxcblx0XHRcdFx0dHlwZTogJ2RhbmdlcicsXG5cdFx0XHR9XSk7XG5cblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvL+mAieS4reeahOW/hemhu+imgeacieenn+i1gee7k+adn+aXpeacn1xuXHRcdHZhciBzb21lU3RhcnREYXRlID0gdHJ1ZTtcblxuXHRcdHNlbGVjdGVkU3RhdGlvblZvcy5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0sIGluZGV4KSB7XG5cdFx0XHRpZiAoIWl0ZW0ucmVudEJlZ2luRGF0ZSkge1xuXHRcdFx0XHRzb21lU3RhcnREYXRlID0gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRpZiAoIXNvbWVTdGFydERhdGUpIHtcblx0XHRcdE5vdGlmeS5zaG93KFt7XG5cdFx0XHRcdG1lc3NhZ2U6ICfpgInmi6nnmoTlt6XkvY3lv4XpobvopoHmnInnp5/otYHlvIDlp4vml7bpl7QnLFxuXHRcdFx0XHR0eXBlOiAnZGFuZ2VyJyxcblx0XHRcdH1dKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvL+W3peS9jee7k+adn+aXtumXtOebuOWQjFxuXHRcdHZhciBzb21lID0gdHJ1ZTtcblx0XHRzZWxlY3RlZFN0YXRpb25Wb3Muc29ydChmdW5jdGlvbihwcmUsIG5leHQpIHtcblx0XHRcdHZhciBwcmVEYXRlID0gZGF0ZUZvcm1hdChwcmUubGVhc2VFbmREYXRlLCAneXl5eS1tbS1kZCcpO1xuXHRcdFx0dmFyIG5leHREYXRlID0gZGF0ZUZvcm1hdChuZXh0LmxlYXNlRW5kRGF0ZSwgJ3l5eXktbW0tZGQnKTtcblx0XHRcdGlmIChwcmVEYXRlICE9IG5leHREYXRlKSB7XG5cdFx0XHRcdHNvbWUgPSBmYWxzZTtcblx0XHRcdH1cblx0XHRcdHJldHVybiAtMTtcblx0XHR9KTtcblxuXHRcdGlmICghc29tZSkge1xuXHRcdFx0Tm90aWZ5LnNob3coW3tcblx0XHRcdFx0bWVzc2FnZTogJ+ivt+mAieaLqeebuOWQjOaXpeacnycsXG5cdFx0XHRcdHR5cGU6ICdkYW5nZXInLFxuXHRcdFx0fV0pO1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8v5L+u5pS55pel5pyfXG5cdFx0dmFyIHJlc3VsdFN0YXRpb25Wb3MgPSBbXTtcblx0XHRzZWxlY3RlZFN0YXRpb25Wb3MuZm9yRWFjaChmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuXHRcdFx0dmFyIG9iaiA9IHt9O1xuXHRcdFx0b2JqLmlkID0gaXRlbS5pZDtcblx0XHRcdG9iai5zdGF0aW9uSWQgPSBpdGVtLnN0YXRpb25JZDtcblx0XHRcdG9iai5zdGF0aW9uTmFtZSA9IGl0ZW0uc3RhdGlvbk5hbWU7XG5cdFx0XHRvYmoudW5pdHByaWNlID0gaXRlbS51bml0cHJpY2U7XG5cdFx0XHRvYmouc3RhdGlvblR5cGUgPSBpdGVtLnN0YXRpb25UeXBlO1xuXHRcdFx0b2JqLnN0YXRpb25CZWdpbkRhdGUgPSBkYXRlRm9ybWF0KGl0ZW0ubGVhc2VCZWdpbkRhdGUsICd5eXl5LW1tLWRkJyk7XG5cdFx0XHRvYmouc3RhdGlvbkVuZERhdGUgPSBkYXRlRm9ybWF0KGl0ZW0ubGVhc2VFbmREYXRlLCAneXl5eS1tbS1kZCcpO1xuXG5cdFx0XHRvYmoubGVhc2VCZWdpbkRhdGUgPSBkYXRlRm9ybWF0KGl0ZW0ucmVudEJlZ2luRGF0ZSwgJ3l5eXktbW0tZGQnKTtcblx0XHRcdG9iai5sZWFzZUVuZERhdGUgPSBkYXRlRm9ybWF0KGl0ZW0ubGVhc2VFbmREYXRlLCAneXl5eS1tbS1kZCcpO1xuXHRcdFx0b2JqLnJlbnRCZWdpbkRhdGUgPSBkYXRlRm9ybWF0KGl0ZW0ucmVudEJlZ2luRGF0ZSwgJ3l5eXktbW0tZGQnKTtcblxuXHRcdFx0cmVzdWx0U3RhdGlvblZvcy5wdXNoKG9iaik7XG5cdFx0fSk7XG5cblx0XHRzZWxlY3RlZFN0YXRpb25Wb3MgPSByZXN1bHRTdGF0aW9uVm9zO1xuXG5cdFx0Ly/pgInmi6nnmoTlh4/np5/lvIDlp4vml6XmnJ/lv4XpobvopoHlnKjlt6XkvY3nmoTotbflp4vml6XmnJ/lkoznu5PmnZ/ml6XmnJ/ojIPlm7TlhoVcblx0XHR2YXIgaXNPSyA9IDE7XG5cdFx0c2VsZWN0ZWRTdGF0aW9uVm9zLm1hcChmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuXHRcdFx0dmFyIHN0YXRpb25CZWdpbkRhdGUgPSBEYXRlLnBhcnNlKGRhdGVGb3JtYXQoaXRlbS5zdGF0aW9uQmVnaW5EYXRlLCAneXl5eS1tbS1kZCcpICsgJyAwMDowMDowMCcpO1xuXHRcdFx0dmFyIHN0YXRpb25FbmREYXRlID0gRGF0ZS5wYXJzZShkYXRlRm9ybWF0KGl0ZW0uc3RhdGlvbkVuZERhdGUsICd5eXl5LW1tLWRkJykgKyAnIDAwOjAwOjAwJyk7XG5cdFx0XHR2YXIgcmVudEJlZ2luRGF0ZSA9IERhdGUucGFyc2UoZGF0ZUZvcm1hdChpdGVtLnJlbnRCZWdpbkRhdGUsICd5eXl5LW1tLWRkJykgKyAnIDAwOjAwOjAwJyk7XG5cblx0XHRcdGlmIChzdGF0aW9uQmVnaW5EYXRlID49IHJlbnRCZWdpbkRhdGUgfHwgcmVudEJlZ2luRGF0ZSA+PSBzdGF0aW9uRW5kRGF0ZSkge1xuXHRcdFx0XHRpc09LID0gMDtcblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdGlmICghaXNPSykge1xuXHRcdFx0Tm90aWZ5LnNob3coW3tcblx0XHRcdFx0bWVzc2FnZTogJ+WHj+enn+W8gOWni+aXtumXtOW/hemhu+imgeWcqOmAieaLqeW3peS9jeeahOenn+i1geW8gOWni+aXpeacn+WSjOe7k+adn+aXpeacn+S5i+WGhScsXG5cdFx0XHRcdHR5cGU6ICdkYW5nZXInLFxuXHRcdFx0fV0pO1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHRjb25zb2xlLmxvZygnLS0tLT4+Pj4nLCBzZWxlY3RlZFN0YXRpb25Wb3MpXG5cblx0XHRTdG9yZS5kaXNwYXRjaChjaGFuZ2UoJ3JlZHVjZUNyZWF0ZUZvcm0nLCAnbGVhc2VCZWdpbmRhdGUnLCBzZWxlY3RlZFN0YXRpb25Wb3NbMF0ubGVhc2VFbmREYXRlKSk7XG5cblx0XHRjb25zdCB7XG5cdFx0XHRvblN1Ym1pdFxuXHRcdH0gPSB0aGlzLnByb3BzO1xuXHRcdG9uU3VibWl0ICYmIG9uU3VibWl0KHNlbGVjdGVkU3RhdGlvblZvcyk7XG5cdH1cblxuXG5cblx0b25DYW5jZWwoKSB7XG5cdFx0Y29uc3Qge1xuXHRcdFx0b25DYW5jZWxcblx0XHR9ID0gdGhpcy5wcm9wcztcblx0XHRvbkNhbmNlbCAmJiBvbkNhbmNlbCgpO1xuXHR9XG5cblx0cmVuZGVyKCkge1xuXG5cdFx0bGV0IHtcblx0XHRcdGVycm9yLFxuXHRcdFx0aGFuZGxlU3VibWl0LFxuXHRcdFx0cHJpc3RpbmUsXG5cdFx0XHRyZXNldCxcblx0XHRcdHN1Ym1pdHRpbmcsXG5cdFx0XHRjaGFuZ2VWYWx1ZXNcblx0XHR9ID0gdGhpcy5wcm9wcztcblx0XHRsZXQge1xuXHRcdFx0c3RhdGlvblZvc1xuXHRcdH0gPSB0aGlzLnN0YXRlO1xuXHRcdGNvbnN0IG92ZXJmb2x3ID0ge1xuXHRcdFx0J292ZXJmbG93JzogJ2hpZGRlbicsXG5cdFx0XHRtYXhIZWlnaHQ6IDUxMCxcblx0XHR9XG5cdFx0Y29uc3QgaGVpZ2h0ID0ge1xuXHRcdFx0aGVpZ2h0OiBzdGF0aW9uVm9zLmxlbmd0aCAqIDQ1LFxuXHRcdFx0bWF4SGVpZ2h0OiA2NjcsXG5cdFx0fVxuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2IHN0eWxlPXt7aGVpZ2h0OjY2NyxtYXJnaW5Ub3A6MjB9fT5cbjxmb3JtIG9uU3VibWl0PXtoYW5kbGVTdWJtaXQodGhpcy5vblN1Ym1pdCl9PlxuXHRcdFx0PEtyRmllbGQgZ3JpZD17MS8yfSAgbmFtZT1cInJlbnRCZWdpbkRhdGVcIiBjb21wb25lbnQ9XCJkYXRlXCIgbGFiZWw9XCLlh4/np5/lvIDlp4vml7bpl7TvvJpcIiBvbkNoYW5nZT17dGhpcy5vbkNoYW5nZVJlbnRCZWdpbkRhdGV9IGlubGluZT17dHJ1ZX0vPlxuXG4gICAgICA8VGFibGUgb25TZWxlY3Q9e3RoaXMub25TZWxlY3R9IHN0eWxlPXtvdmVyZm9sd30+XG4gICAgICAgIDxUYWJsZUhlYWRlcj5cbiAgICAgICAgICA8VGFibGVIZWFkZXJDb2x1bW4+57G75YirPC9UYWJsZUhlYWRlckNvbHVtbj5cbiAgICAgICAgICA8VGFibGVIZWFkZXJDb2x1bW4+57yW5Y+377yP5ZCN56ewPC9UYWJsZUhlYWRlckNvbHVtbj5cbiAgICAgICAgICA8VGFibGVIZWFkZXJDb2x1bW4+5Y2V5Lu377yI5YWD77yP5pyI77yJPC9UYWJsZUhlYWRlckNvbHVtbj5cbiAgICAgICAgICA8VGFibGVIZWFkZXJDb2x1bW4+6LW35aeL5pel5pyfPC9UYWJsZUhlYWRlckNvbHVtbj5cbiAgICAgICAgICA8VGFibGVIZWFkZXJDb2x1bW4+57uT5p2f5pel5pyfPC9UYWJsZUhlYWRlckNvbHVtbj5cbiAgICAgICAgICA8VGFibGVIZWFkZXJDb2x1bW4+5YeP56ef5byA5aeL5pel5pyfPC9UYWJsZUhlYWRlckNvbHVtbj5cbiAgICAgIDwvVGFibGVIZWFkZXI+XG4gICAgICA8VGFibGVCb2R5PlxuICAgICAge3N0YXRpb25Wb3MgJiYgc3RhdGlvblZvcy5tYXAoKGl0ZW0saW5kZXgpPT57XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPFRhYmxlUm93IGtleT17aW5kZXh9PlxuICAgICAgICAgIDxUYWJsZVJvd0NvbHVtbiA+eyhpdGVtLnN0YXRpb25UeXBlID09IDEpID8n5bel5L2NJzon5Lya6K6u5a6kJ308L1RhYmxlUm93Q29sdW1uPlxuICAgICAgICAgIDxUYWJsZVJvd0NvbHVtbiA+e2l0ZW0uc3RhdGlvbk5hbWV9PC9UYWJsZVJvd0NvbHVtbj5cbiAgICAgICAgICA8VGFibGVSb3dDb2x1bW4gPntpdGVtLnVuaXRwcmljZX08L1RhYmxlUm93Q29sdW1uPlxuICAgICAgICAgIDxUYWJsZVJvd0NvbHVtbiA+PEtyRGF0ZSB2YWx1ZT17aXRlbS5sZWFzZUJlZ2luRGF0ZX0vPjwvVGFibGVSb3dDb2x1bW4+XG4gICAgICAgICAgPFRhYmxlUm93Q29sdW1uID48S3JEYXRlIHZhbHVlPXtpdGVtLmxlYXNlRW5kRGF0ZX0vPjwvVGFibGVSb3dDb2x1bW4+XG4gICAgICAgICAgPFRhYmxlUm93Q29sdW1uPlxuXHRcdFx0XHR7aXRlbS5yZW50QmVnaW5EYXRlJiYgZGF0ZUZvcm1hdChpdGVtLnJlbnRCZWdpbkRhdGUsJ3l5eXktbW0tZGQnKX1cbiAgICAgICAgICA8L1RhYmxlUm93Q29sdW1uPlxuICAgICAgICAgPC9UYWJsZVJvdz5cbiAgICAgICAgKTtcbiAgICAgIH0pfVxuICAgICAgPC9UYWJsZUJvZHk+XG4gICAgICA8L1RhYmxlPlxuICAgICAgPEdyaWQ+XG4gICAgICA8Um93IHN0eWxlPXt7bWFyZ2luVG9wOjMwLHBhZGRpbmdCb3R0b206MjR9fT5cbiAgICAgIDxDb2wgbWQ9ezR9PjwvQ29sPlxuICAgICAgPENvbCBtZD17Mn0gYWxpZ249XCJjZW50ZXJcIj4gPEJ1dHRvbiAgbGFiZWw9XCLnoa7lrppcIiB0eXBlPVwic3VibWl0XCIgLz4gPC9Db2w+XG4gICAgICA8Q29sIG1kPXsyfSBhbGlnbj1cImNlbnRlclwiPiA8QnV0dG9uICBsYWJlbD1cIuWPlua2iFwiIGNhbmNsZT17dHJ1ZX0gdHlwZT1cImJ1dHRvblwiICBvblRvdWNoVGFwPXt0aGlzLm9uQ2FuY2VsfS8+IDwvQ29sPlxuICAgICAgPENvbCBtZD17NH0+PC9Db2w+XG4gICAgICA8L1Jvdz5cbiAgICAgIDwvR3JpZD5cbjwvZm9ybT5cblx0XHRcdDwvZGl2Pik7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVkdXhGb3JtKHtcblx0Zm9ybTogJ3NlbGVjdFN0YXRpb25Gb3JtJyxcblx0ZW5hYmxlUmVpbml0aWFsaXplOiB0cnVlLFxuXHRrZWVwRGlydHlPblJlaW5pdGlhbGl6ZTogdHJ1ZVxufSkoU2VsZWN0U3RhdGlvbkZvcm0pOyJdfQ==