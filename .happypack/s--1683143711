'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('./index.less');

var _krUi = require('kr-ui');

var _Redux = require('kr/Redux');

var _UpdatePasswordForm = require('./UpdatePasswordForm');

var _UpdatePasswordForm2 = _interopRequireDefault(_UpdatePasswordForm);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PersonalCenter = function (_Component) {
	_inherits(PersonalCenter, _Component);

	function PersonalCenter(props, context) {
		_classCallCheck(this, PersonalCenter);

		var _this2 = _possibleConstructorReturn(this, (PersonalCenter.__proto__ || Object.getPrototypeOf(PersonalCenter)).call(this, props, context));

		_this2.initBasicInfo = function () {
			var _this = _this2;
			_this.setState({
				isLegal: false
			});
			_Redux.Store.dispatch(_Redux.Actions.callAPI('PersonalCenterData', {})).then(function (response) {
				if (response.pwdStrength < 3) {
					_this.setState({
						pwdStrengthClass: 'low',
						pwdLevel: '低',
						pwdLetter: 'red'
					});
				} else if (response.pwdStrength == 3) {
					_this.setState({
						pwdStrengthClass: 'middle',
						pwdLevel: '中',
						pwdLetter: 'yellow'
					});
				} else if (response.pwdStrength == 4) {
					_this.setState({
						pwdStrengthClass: 'high',
						pwdLevel: '高',
						pwdLetter: 'green'
					});
				}
				_this.setState({
					name: response.loginName,
					mail: response.email,
					mobile: response.mobile,
					pwdStrength: response.pwdStrength
				});
			}).catch(function (err) {
				//    			console.log(err);
			});
		};

		_this2.mobileTitleClick = function () {
			_this2.setState({
				titleClass: true,
				mmContent: true
			});
		};

		_this2.mailTitleClick = function () {
			_this2.setState({
				titleClass: false,
				mmContent: false
			});
		};

		_this2.openPwdVerifyIdFunc = function () {
			if (_this2.state.isLegal == true) {
				_this2.setState({
					openPwdRevise: true,
					openVerifyId: false,
					togettest: false
				});

				return;
			}
			_this2.setState({
				openVerifyId: true,
				togetMobiletest: true,
				togetMailtest: true,
				togettest: false,
				gettingMobile: false,
				gettingMail: false,
				gettingNewMobile: false,
				MobileTimeDisabledState: false,
				MailTimeDisabledState: false,
				regettestMobileState: false,
				regettestMailState: false,
				timeminMobile: 60,
				timeminMail: 60,
				PwdOrMobile: 'pwd',
				regettestNewMobileState: false
			});
		};

		_this2.openMobileVerifyIdFunc = function () {
			if (_this2.state.isLegal == true) {
				_this2.setState({
					openMobileRevise: true,
					openVerifyId: false,
					togetNewMobiletest: true,
					gettingNewMobile: false,
					MobileTimeDisabledState: false,
					timeminMobile: 60,
					togettest: false,
					regettestMobileState: false,
					regettestNewMobileState: false
				});
				return;
			}
			_this2.setState({
				openVerifyId: true,
				togetMobiletest: true,
				togetMailtest: true,
				gettingMobile: false,
				gettingMail: false,
				gettingNewMobile: false,
				MobileTimeDisabledState: false,
				MailTimeDisabledState: false,
				regettestMobileState: false,
				regettestMailState: false,
				timeminMobile: 60,
				timeminMail: 60,
				regettestNewMobileState: false,
				togettest: false,
				//timeminMobile:"",//
				//timeminMail:"",//
				PwdOrMobile: 'mobile'
			});
		};

		_this2.closeVerifyIdFunc = function () {
			_this2.setState({
				openVerifyId: false,
				regettestMobileState: false,
				regettestMailState: false,
				//timeminMobile:"",//
				togettest: false
			});
		};

		_this2.togetMobiletestCode = function () {
			_this2.refs.MobileCode.value = '';
			_this2.setState({
				regettestMobileState: false,
				gettingMobile: true,
				togetMobiletest: false
			}, function () {
				var _this = this;
				_Redux.Store.dispatch(_Redux.Actions.callAPI('PersonalCenterGetMobileVerificationCode', {})).then(function (response) {
					_this.togetMobiletest();
				}).catch(function (err) {
					//_this.togetMobiletest()
					if (err.code < 0) {
						_krUi.Message.error(err.message);
						//        			console.log(err)
					}
					_this.setState({
						gettingMobile: false,
						togetMobiletest: true
					});
				});
			});
		};

		_this2.togetMobiletest = function () {
			window.clearTimeout(_this2.timer);
			var _this = _this2;
			_this2.setState({
				togettest: true,
				gettingMobile: false,
				MobileTimeDisabledState: true,
				regettestMobileState: false,
				timeminMobile: 60
			}, function () {
				time();
			});
			function time() {
				//	            console.log(_this.state.timeminMobile)
				if (_this.state.timeminMobile == 0) {
					_this.setState({
						regettestMobileState: true,
						MobileTimeDisabledState: false,
						togetMobiletest: false
					});
				} else {
					_this.setState({
						timeminMobile: --_this.state.timeminMobile
					});
					_this.timer = window.setTimeout(function () {
						time();
					}, 1000);
				}
			}
		};

		_this2.togetMailtestCode = function () {
			_this2.refs.MailCode.value = '';
			_this2.setState({
				gettingMail: true,
				regettestMailState: false,
				togetMailtest: false
			}, function () {
				var _this = this;
				_Redux.Store.dispatch(_Redux.Actions.callAPI('PersonalCenterGetMailVerificationCode', {})).then(function (response) {
					_this.togetMailtest();
				}).catch(function (err) {
					if (err.code < 0) {
						_krUi.Message.error(err.message);
						//                 console.log(err)
					}
					_this.setState({
						gettingMail: false,
						togetMailtest: true
					});
				});
			});
		};

		_this2.togetMailtest = function () {
			window.clearTimeout(_this2.timerMail);
			var _this = _this2;
			_this2.setState({
				//   togettest:true,
				//togetMailtest:false,
				MailTimeDisabledState: true,
				regettestMailState: false,
				timeminMail: 60,
				gettingMail: false
			}, function () {
				time();
				//this.getMailVerificationCode()
			});
			function time() {
				if (_this.state.timeminMail == 0) {
					_this.setState({
						regettestMailState: true,
						MailTimeDisabledState: false,
						togetMailtest: false
					});
				} else {
					_this.setState({
						timeminMail: --_this.state.timeminMail
					});
					_this.timerMail = window.setTimeout(function () {
						time();
					}, 1000);
				}
			}
		};

		_this2.submitIdByMobile = function () {

			if (_this2.refs.MobileCode.value) {
				//console.log("111",document.getElementsByClassName("code")[0].value);
				_this2.submitVerifyIDbyMobile();
			} else {
				_krUi.Message.error("请填写验证码");
			}
		};

		_this2.submitIdByMail = function () {
			if (_this2.refs.MailCode.value) {
				_this2.submitVerifyIDbyMail();
			} else {
				_krUi.Message.error("请填写验证码");
			}
		};

		_this2.submitVerifyIDbyMobile = function () {
			var _this = _this2;
			//console.log("1",this.state.regettestMobileState);
			_Redux.Store.dispatch(_Redux.Actions.callAPI('PersonalCenterVerifyIdByMobile', {
				verifyCode: _this.refs.MobileCode.value
			})).then(function (response) {
				_this.setState({
					isLegal: true
				}, function () {
					//	console.log("2",this.state.regettestMobileState);
					if (_this.state.PwdOrMobile == "pwd") {
						_this.setState({
							openPwdRevise: true,
							openVerifyId: false
						});
					} else if (_this.state.PwdOrMobile == "mobile") {
						_this.setState({
							openMobileRevise: true,
							openVerifyId: false,
							togettest: false,
							MobileTimeDisabledState: false,
							togetNewMobiletest: true,
							//regettestMailState:false,
							//	regettestMobileState:false,
							regettestNewMobileState: false
						});
					}
					//console.log("3",this.state.regettestMobileState);
				});
			}).catch(function (err) {
				if (err.code < 0) {
					_krUi.Message.error(err.message);
					//           	console.log(err)
					//          	console.log(err);
				}
			});
		};

		_this2.submitVerifyIDbyMail = function () {
			var _this = _this2;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('PersonalCenterVerifyIdByMail', {
				verifyCode: _this.refs.MailCode.value
			})).then(function (response) {
				_this.setState({
					isLegal: true
				}, function () {
					if (_this.state.PwdOrMobile == "pwd") {
						_this.setState({
							openPwdRevise: true,
							openVerifyId: false
						});
					} else if (_this.state.PwdOrMobile == "mobile") {
						_this.setState({
							openMobileRevise: true,
							openVerifyId: false,
							togettest: false,
							togetNewMobiletest: true,
							MobileTimeDisabledState: false,
							//regettestMailState:false,
							//regettestMobileState:false,
							regettestNewMobileState: false
						});
					}
				});
			}).catch(function (err) {
				if (err.code < 0) {
					_krUi.Message.error(err.message);
					//           	console.log(err)
				}
			});
		};

		_this2.testrevisemobile = function () {
			var _this = _this2;
			_this.refs.reviseMobileCode.value = '';

			if (_this.refs.newMobile.value) {
				_this.setState({
					gettingNewMobile: true,
					regettestNewMobileState: false,
					togetNewMobiletest: false
				}, function () {
					_Redux.Store.dispatch(_Redux.Actions.callAPI('PersonalCenterGetNewMobileVerificationCode', {
						mobile: _this.refs.newMobile.value
					})).then(function (response) {
						_this.reviseMobileGetVerify();
					}).catch(function (err) {
						//本地测试	_this.reviseMobileGetVerify()
						if (err.code < 0) {
							_krUi.Message.error(err.message);
							//            	console.log(err)
						}
						_this.setState({
							gettingNewMobile: false,
							togetNewMobiletest: true
						});
					});
				});
			} else {
				_krUi.Message.error("请填写手机号");
			}
		};

		_this2.reviseMobileGetVerify = function () {
			window.clearTimeout(_this2.timerNewMobile);
			var _this = _this2;
			_this.setState({
				gettingNewMobile: false,
				MobileTimeDisabledState: true,
				regettestNewMobileState: false,
				togettest: true,
				timeminMobile: 60
			}, function () {
				time();
			});
			function time() {
				//console.log(_this.state.timeminMobile)
				if (_this.state.timeminMobile == 0) {
					_this.setState({
						regettestNewMobileState: true,
						MobileTimeDisabledState: false,
						//timeminMobile:"",//
						togetNewMobiletest: false
					});
				} else {
					_this.setState({
						timeminMobile: --_this.state.timeminMobile
					});
					_this.timerNewMobile = window.setTimeout(function () {
						time();
					}, 1000);
				}
			}
		};

		_this2.submitMobile = function () {
			if (_this2.refs.newMobile.value) {
				_this2.submitReviseMobile();
			} else {
				_krUi.Message.error("请填写手机号");
			}
		};

		_this2.submitReviseMobile = function () {
			var _this = _this2;
			//      console.log(document.getElementById("reviseMobile_code").value)
			_Redux.Store.dispatch(_Redux.Actions.callAPI('PersonalCenterVerifyReviseMobileVerificationCode', {}, {
				mobile: _this.refs.newMobile.value,
				verifyCode: _this.refs.reviseMobileCode.value
			})).then(function (response) {
				//	console.log(response)
				_krUi.Message.success("修改成功");
				_this.setState({
					openMobileRevise: false,
					isLegal: false
				}, function () {
					_this.initBasicInfo();
				});
			}).catch(function (err) {
				if (err.code < 0) {
					_krUi.Message.error(err.message);
					//        	console.log(err)
				}
			});
		};

		_this2.submitPwd = function (values) {
			var _this = _this2;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('PersonalCenterVerifyRevisePwd', {}, {
				newPwd: values.new,
				newPwds: values.newagain,
				oldPwd: values.old
			})).then(function (response) {
				_krUi.Message.success("修改成功");
				window.setTimeout(function () {
					window.location.href = "/login/login";
				}, 1000);
			}).catch(function (err) {
				if (err.code < 0) {
					_krUi.Message.error(err.message);
				}
			});
		};

		_this2.closePwdRevise = function () {
			_this2.setState({
				openPwdRevise: false
			});
		};

		_this2.closeMobileRevise = function () {
			_this2.setState({
				openMobileRevise: false
			});
		};

		_this2.state = {
			openVerifyId: false,
			PwdOrMobile: '',
			mmContent: true,
			titleClass: true,
			togetMobiletest: true,
			togetMailtest: true,
			MobileTimeDisabledState: false,
			MailTimeDisabledState: false,
			timeminMobile: 60,
			timeminMail: 60,
			timedisabled: '秒后,重新获取验证码',
			regettestMobileState: false,
			regettestMailState: false,
			regettest: '重新获取验证码',
			pwdStrengthClass: '',
			pwdLetter: '',
			name: '',
			mail: '',
			mobile: '',
			gettingMobile: false,
			gettingMail: false,
			gettingNewMobile: false,
			pwdStrength: '',
			pwdLevel: '',
			VerifyCodeSuccessOrFail: '',
			VerifyIdSuccessOrFail: '',
			VerifyIdSuccessOrFailMessage: '',
			openPwdRevise: false,
			openMobileRevise: false,
			ceshi: "1",
			isLegal: false,
			testSuccess: false,
			regettestNewMobileState: false,
			togetNewMobiletest: true
		};
		_this2.timer = null;
		_this2.timerMail = null;
		_this2.timerNewMobile = null;
		return _this2;
	}
	// 加载基本信息


	_createClass(PersonalCenter, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			this.initBasicInfo();
			_Redux.Store.dispatch(_Redux.Actions.switchSidebarNav(false));
		}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps() {
			//console.log(this.state.isLegal);
			//console.log("111",document.getElementsByClassName("code")[0].value);
		}
		//点击修改密码时打开验证窗口

		//点击修改手机号时打开验证窗口

		//关闭验证身份窗口

		//test手机验证身份点击获取验证码

		//手机验证点击获取验证码函数old

		//test邮箱验证身份点击获取验证码

		//邮箱验证点击获取验证码函数

		//身份验证By手机点击确认后

		//身份验证By邮箱点击确认后

		//手机身份验证点击确定

		//邮箱身份验证点击确定

		//test修改手机号获取验证码

		//修改手机号时新手机点击获取验证码函数old

		//修改手机号点击确定后的函数

		//验证修改手机号api


		//修改密码点击确定后的函数ing

	}, {
		key: 'render',
		value: function render() {
			var _state = this.state,
			    settle_mobile = _state.settle_mobile,
			    settle_password = _state.settle_password;

			return _react2.default.createElement(
				'div',
				{ className: 'g-personal-center' },
				_react2.default.createElement(_krUi.Section, { title: '\u4E2A\u4EBA\u4E2D\u5FC3' }),
				_react2.default.createElement(
					'div',
					{ className: 'personal-data' },
					_react2.default.createElement(
						'div',
						{ className: 'left_box' },
						_react2.default.createElement(
							'div',
							{ className: 'left' },
							_react2.default.createElement('div', { className: 'head' })
						),
						_react2.default.createElement(
							'div',
							{ className: 'middle' },
							_react2.default.createElement('div', { className: 'line' }),
							_react2.default.createElement('div', { className: 'circle' }),
							_react2.default.createElement('div', { className: 'circle' })
						)
					),
					_react2.default.createElement(
						'div',
						{ className: 'right_box' },
						_react2.default.createElement(
							'ul',
							{ className: 'data' },
							_react2.default.createElement(
								'li',
								null,
								'\u767B\u5F55\u8D26\u53F7\uFF1A',
								this.state.name
							),
							_react2.default.createElement(
								'li',
								null,
								'\u90AE\u2003\u2003\u7BB1\uFF1A',
								this.state.mail
							)
						)
					)
				),
				_react2.default.createElement(
					'div',
					{ className: 'safe' },
					_react2.default.createElement(
						'dl',
						{ className: 'row level' },
						_react2.default.createElement(
							'dt',
							null,
							'\u60A8\u5F53\u524D\u7684\u8D26\u53F7\u5B89\u5168\u7A0B\u5EA6'
						),
						_react2.default.createElement(
							'dd',
							null,
							_react2.default.createElement('div', { id: 'bar', className: this.state.pwdStrengthClass }),
							_react2.default.createElement(
								'p',
								null,
								'\u5B89\u5168\u7EA7\u522B\uFF1A',
								_react2.default.createElement(
									'span',
									{ className: this.state.pwdLetter },
									this.state.pwdLevel
								)
							)
						)
					),
					_react2.default.createElement(
						'dl',
						{ className: 'row password' },
						_react2.default.createElement(
							'dt',
							null,
							'\u5BC6\u7801'
						),
						_react2.default.createElement(
							'dd',
							null,
							'\u5B89\u5168\u6027\u9AD8\u7684\u5BC6\u7801\u53EF\u4EE5\u4F7F\u5E10\u53F7\u66F4\u5B89\u5168\u3002\u5EFA\u8BAE\u60A8\u5B9A\u671F\u66F4\u6362\u5BC6\u7801\uFF0C\u8BBE\u7F6E\u4E00\u4E2A\u5305\u542B\u5B57\u6BCD\uFF0C\u7B26\u53F7\u6216\u6570\u5B57\u4E2D\u81F3\u5C11\u4E24\u9879\u4E14\u957F\u5EA6\u8D85\u8FC76\u4F4D\u7684\u5BC6\u7801\u3002',
							_react2.default.createElement(
								'p',
								{ className: 'setted' },
								'\u2002\u5DF2\u8BBE\u7F6E\u2002',
								_react2.default.createElement(
									'span',
									{ className: 'bl' },
									'|'
								),
								'\u2002',
								_react2.default.createElement(
									'span',
									{ onTouchTap: this.openPwdVerifyIdFunc, className: 'revise' },
									'\u4FEE\u6539'
								)
							)
						)
					),
					_react2.default.createElement(
						'dl',
						{ className: 'row mobile' },
						_react2.default.createElement(
							'dt',
							null,
							'\u624B\u673A\u53F7'
						),
						_react2.default.createElement(
							'dd',
							null,
							_react2.default.createElement(
								'span',
								null,
								'\u60A8\u5DF2\u7ED1\u5B9A\u4E86\u624B\u673A ',
								_react2.default.createElement(
									'span',
									{ className: 'mobileSettle' },
									this.state.mobile
								),
								'\u3002\uFF08\u60A8\u7684\u624B\u673A\u4E3A\u5B89\u5168\u624B\u673A\uFF0C\u53EF\u4EE5\u627E\u56DE\u5BC6\u7801\uFF09'
							),
							_react2.default.createElement(
								'p',
								{ className: 'setted' },
								'\u2002\u5DF2\u8BBE\u7F6E\u2002',
								_react2.default.createElement(
									'span',
									{ className: 'bl' },
									'|'
								),
								'\u2002',
								_react2.default.createElement(
									'span',
									{ onTouchTap: this.openMobileVerifyIdFunc, className: 'revise' },
									'\u4FEE\u6539'
								)
							)
						)
					)
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{ title: '\u9A8C\u8BC1\u8EAB\u4EFD', open: this.state.openVerifyId, onClose: this.closeVerifyIdFunc, contentStyle: { width: 444 } },
					_react2.default.createElement(
						'div',
						{ className: 'verifyId' },
						_react2.default.createElement(
							'div',
							{ className: 'm_mTitle' },
							_react2.default.createElement(
								'span',
								{ onTouchTap: this.mobileTitleClick, className: this.state.titleClass ? 'activeTitle' : 'normalTitle' },
								_react2.default.createElement('span', { className: 'arrow' }),
								'\u624B\u673A\u53F7'
							),
							_react2.default.createElement(
								'span',
								{ onTouchTap: this.mailTitleClick, className: !this.state.titleClass ? 'activeTitle' : 'normalTitle' },
								_react2.default.createElement('span', { className: 'arrow' }),
								'\u90AE\u7BB1'
							)
						),
						this.state.mmContent && _react2.default.createElement(
							'div',
							{ className: 'mobile_test' },
							_react2.default.createElement(
								'span',
								{ className: 'm_m' },
								this.state.mobile
							),
							_react2.default.createElement(
								'span',
								{ className: 'testTitle' },
								'\u9A8C\u8BC1\u7801'
							),
							_react2.default.createElement(
								'div',
								{ className: 'test' },
								_react2.default.createElement('input', { className: 'code', ref: 'MobileCode', placeholder: '6\u4F4D\u9A8C\u8BC1\u7801', type: 'text' }),
								_react2.default.createElement(
									'span',
									{ className: 'alltest' },
									this.state.togetMobiletest && _react2.default.createElement(
										'span',
										{ onTouchTap: this.togetMobiletestCode, className: 'gettest' },
										'\u70B9\u6B64\u83B7\u53D6\u9A8C\u8BC1\u7801'
									),
									this.state.gettingMobile && _react2.default.createElement(
										'span',
										{ className: 'timeout' },
										'\u6B63\u5728\u53D1\u9001...'
									),
									this.state.MobileTimeDisabledState && _react2.default.createElement(
										'span',
										{ className: 'timeout' },
										this.state.timeminMobile + this.state.timedisabled
									),
									this.state.regettestMobileState && _react2.default.createElement(
										'span',
										{ onTouchTap: this.togetMobiletestCode, className: 'regettest' },
										this.state.regettest
									)
								)
							),
							this.state.togettest && _react2.default.createElement(
								'span',
								{ className: 'geted' },
								'\u2002\u2003\u2002\u9A8C\u8BC1\u7801\u5DF2\u53D1\u9001\u5230\u4F60\u7684\u624B\u673A\uFF0C30\u5206\u949F\u5185\u8F93\u5165\u6709\u6548\uFF0C\u9A8C\u8BC1\u7801\u7B49\u540C\u4E8E\u5BC6\u7801\uFF0C\u6253\u6B7B\u4E5F\u4E0D\u80FD\u544A\u8BC9\u522B\u4EBA\u3002'
							)
						),
						!this.state.mmContent && _react2.default.createElement(
							'div',
							{ className: 'mail_test' },
							_react2.default.createElement(
								'span',
								{ className: 'm_m' },
								this.state.mail
							),
							_react2.default.createElement(
								'span',
								{ className: 'testTitle' },
								'\u9A8C\u8BC1\u7801'
							),
							_react2.default.createElement(
								'div',
								{ className: 'test' },
								_react2.default.createElement('input', { className: 'code', ref: 'MailCode', placeholder: '6\u4F4D\u9A8C\u8BC1\u7801', type: 'text' }),
								_react2.default.createElement(
									'span',
									{ className: 'alltest' },
									this.state.togetMailtest && _react2.default.createElement(
										'span',
										{ onTouchTap: this.togetMailtestCode, className: 'gettest' },
										'\u70B9\u6B64\u83B7\u53D6\u9A8C\u8BC1\u7801'
									),
									this.state.gettingMail && _react2.default.createElement(
										'span',
										{ className: 'timeout' },
										'\u6B63\u5728\u53D1\u9001...'
									),
									this.state.MailTimeDisabledState && _react2.default.createElement(
										'span',
										{ className: 'timeout' },
										this.state.timeminMail + this.state.timedisabled
									),
									this.state.regettestMailState && _react2.default.createElement(
										'span',
										{ onTouchTap: this.togetMailtestCode, className: 'regettest' },
										this.state.regettest
									)
								)
							)
						),
						this.state.mmContent && _react2.default.createElement(
							_krUi.Grid,
							null,
							_react2.default.createElement(
								_krUi.Row,
								null,
								_react2.default.createElement(
									_krUi.Col,
									{ align: 'center' },
									_react2.default.createElement(
										_krUi.ListGroup,
										null,
										_react2.default.createElement(
											_krUi.ListGroupItem,
											{ style: { paddingRight: 30, paddingTop: 25 } },
											_react2.default.createElement(_krUi.Button, { width: 90, height: 36, fontSize: 14, label: '\u786E\u5B9A', onTouchTap: this.submitIdByMobile })
										),
										_react2.default.createElement(
											_krUi.ListGroupItem,
											{ style: { paddingTop: 25 } },
											_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', type: 'button', width: 90, height: 34, fontSize: 14, cancle: true, onTouchTap: this.closeVerifyIdFunc })
										)
									)
								)
							)
						),
						!this.state.mmContent && _react2.default.createElement(
							_krUi.Grid,
							null,
							_react2.default.createElement(
								_krUi.Row,
								null,
								_react2.default.createElement(
									_krUi.Col,
									{ align: 'center' },
									_react2.default.createElement(
										_krUi.ListGroup,
										null,
										_react2.default.createElement(
											_krUi.ListGroupItem,
											{ style: { paddingRight: 30, paddingTop: 25 } },
											_react2.default.createElement(_krUi.Button, { label: '\u786E\u5B9A', width: 90, height: 36, fontSize: 14, onTouchTap: this.submitIdByMail })
										),
										_react2.default.createElement(
											_krUi.ListGroupItem,
											{ style: { paddingTop: 25 } },
											_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', type: 'button', width: 90, height: 34, fontSize: 14, cancle: true, onTouchTap: this.closeVerifyIdFunc })
										)
									)
								)
							)
						)
					)
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{ title: '\u4FEE\u6539\u624B\u673A\u53F7', open: this.state.openMobileRevise, onClose: this.closeMobileRevise, contentStyle: { width: 444 } },
					_react2.default.createElement(
						'div',
						{ className: 'reviseMobile' },
						_react2.default.createElement(
							'span',
							{ className: 'testTitle' },
							'\u624B\u673A\u53F7'
						),
						_react2.default.createElement('input', { ref: 'newMobile', className: 'input', placeholder: '\u8BF7\u8F93\u5165\u624B\u673A\u53F7', type: 'text' }),
						_react2.default.createElement(
							'span',
							{ className: 'testTitle' },
							'\u9A8C\u8BC1\u7801'
						),
						_react2.default.createElement(
							'div',
							{ className: 'test' },
							_react2.default.createElement('input', { className: 'code', ref: 'reviseMobileCode', placeholder: '6\u4F4D\u9A8C\u8BC1\u7801', type: 'text' }),
							_react2.default.createElement(
								'span',
								{ className: 'alltest' },
								this.state.togetNewMobiletest && _react2.default.createElement(
									'span',
									{ onTouchTap: this.testrevisemobile, className: 'gettest' },
									'\u70B9\u6B64\u83B7\u53D6\u9A8C\u8BC1\u7801'
								),
								this.state.gettingNewMobile && _react2.default.createElement(
									'span',
									{ className: 'timeout' },
									'\u6B63\u5728\u53D1\u9001...'
								),
								this.state.MobileTimeDisabledState && _react2.default.createElement(
									'span',
									{ className: 'timeout' },
									this.state.timeminMobile + this.state.timedisabled
								),
								this.state.regettestNewMobileState && _react2.default.createElement(
									'span',
									{ onTouchTap: this.testrevisemobile, className: 'regettest' },
									this.state.regettest
								)
							)
						),
						this.state.togettest && _react2.default.createElement(
							'span',
							{ className: 'geted' },
							'\u2003\u2002\u2002\u9A8C\u8BC1\u7801\u5DF2\u53D1\u9001\u5230\u4F60\u7684\u624B\u673A\uFF0C30\u5206\u949F\u5185\u8F93\u5165\u6709\u6548,\u9A8C\u8BC1\u7801\u7B49\u540C\u4E8E\u5BC6\u7801\uFF0C\u6253\u6B7B\u4E5F\u4E0D\u80FD\u544A\u8BC9\u522B\u4EBA\u3002'
						),
						_react2.default.createElement(
							_krUi.Grid,
							null,
							_react2.default.createElement(
								_krUi.Row,
								null,
								_react2.default.createElement(
									_krUi.Col,
									{ align: 'center' },
									_react2.default.createElement(
										_krUi.ListGroup,
										null,
										_react2.default.createElement(
											_krUi.ListGroupItem,
											{ style: { paddingRight: 30, paddingTop: 25 } },
											_react2.default.createElement(_krUi.Button, { label: '\u786E\u5B9A', width: 90, height: 36, fontSize: 14, onTouchTap: this.submitMobile })
										),
										_react2.default.createElement(
											_krUi.ListGroupItem,
											{ style: { paddingTop: 25 } },
											_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', width: 90, height: 34, fontSize: 14, type: 'button', cancle: true, onTouchTap: this.closeMobileRevise })
										)
									)
								)
							)
						)
					)
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{ title: '\u4FEE\u6539\u5BC6\u7801', open: this.state.openPwdRevise, onClose: this.closePwdRevise, contentStyle: { width: 444 } },
					_react2.default.createElement(_UpdatePasswordForm2.default, { onSubmit: this.submitPwd, onCancel: this.closePwdRevise })
				)
			);
		}
	}]);

	return PersonalCenter;
}(_react.Component);

PersonalCenter.displayName = 'PersonalCenter';
exports.default = PersonalCenter;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(PersonalCenter, 'PersonalCenter', '/Users/liuyihao/Code/kr-admin/src/Containers/Permission/PersonalCenter/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,