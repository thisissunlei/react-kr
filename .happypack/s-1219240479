'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CircleStyle = function (_Component) {
	_inherits(CircleStyle, _Component);

	function CircleStyle(props) {
		_classCallCheck(this, CircleStyle);

		return _possibleConstructorReturn(this, (CircleStyle.__proto__ || Object.getPrototypeOf(CircleStyle)).call(this, props));
	}

	_createClass(CircleStyle, [{
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    num = _props.num,
			    info = _props.info,
			    circle = _props.circle,
			    children = _props.children,
			    style = _props.style,
			    other = _objectWithoutProperties(_props, ['num', 'info', 'circle', 'children', 'style']);

			if (circle == 'center') {
				return _react2.default.createElement(
					'div',
					{ className: 'ui-detailContent', style: style },
					_react2.default.createElement(
						'div',
						{ className: 'one' },
						_react2.default.createElement(
							'p',
							null,
							num
						),
						_react2.default.createElement(
							'div',
							{ className: 'txt' },
							'\u2014\u2014 ',
							info
						)
					),
					_react2.default.createElement(
						'div',
						{ className: 'circle' },
						_react2.default.createElement('span', null)
					),
					children
				);
			}
			if (circle == 'bottom') {
				return _react2.default.createElement(
					'div',
					{ className: 'ui-textInfo', style: style },
					_react2.default.createElement(
						'div',
						{ className: 'one' },
						_react2.default.createElement(
							'p',
							null,
							num
						),
						_react2.default.createElement(
							'div',
							{ className: 'txt' },
							'\u2014\u2014 ',
							info
						)
					),
					_react2.default.createElement(
						'div',
						{ className: 'circle' },
						_react2.default.createElement('span', null)
					),
					children
				);
			}
		}
	}]);

	return CircleStyle;
}(_react.Component);

CircleStyle.displayName = 'CircleStyle';
CircleStyle.defaultProps = {
	num: 1,
	info: '',
	circle: 'center'

};
CircleStyle.propTypes = {
	/**
  * num
  */
	num: _react2.default.PropTypes.any,
	/**
  * info 文字描述
  */
	info: _react2.default.PropTypes.string,
	/**
  * circle center:圆圈在中间 bottom:圆圈在底部
  */
	circle: _react2.default.PropTypes.string,
	/**
  * style 样式
  */
	style: _react2.default.PropTypes.object

};
exports.default = CircleStyle;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(CircleStyle, 'CircleStyle', '/Users/smile/Documents/kr-admin/src/Components/CircleStyle/index.js');
}();

;