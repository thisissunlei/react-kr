{"version":3,"sources":["src/Components/DatePicker/internal/EnhancedButton.js"],"names":["styleInjected","listening","tabPressed","injectStyle","style","document","createElement","innerHTML","body","appendChild","listenForTabPresses","on","window","event","EnhancedButton","state","isKeyboardFocused","handleKeyDown","props","disabled","disableKeyboardFocus","handleTouchTap","removeKeyboardFocus","onKeyDown","handleKeyUp","onKeyUp","handleBlur","cancelFocusTimeout","onBlur","handleFocus","persist","focusTimeout","setTimeout","setKeyboardFocus","onFocus","handleClick","onClick","onTouchTap","keyboardFocused","setState","refs","enhancedButton","focus","onKeyboardFocus","nextProps","clearTimeout","centerRipple","children","disableFocusRipple","disableTouchRipple","focusRippleColor","focusRippleOpacity","touchRippleColor","touchRippleOpacity","focusRipple","undefined","touchRipple","containerElement","href","tabIndex","type","other","context","muiTheme","prepareStyles","mergedStyles","border","boxSizing","display","fontFamily","baseTheme","WebkitTapHighlightColor","tapHighlightColor","cursor","textDecoration","margin","padding","outline","fontSize","fontWeight","transform","verticalAlign","backgroundColor","background","buttonProps","ref","buttonChildren","createButtonChildren","isValidElement","cloneElement","propTypes","bool","node","oneOfType","string","element","number","func","onMouseDown","onMouseEnter","onMouseLeave","onMouseUp","onTouchEnd","onTouchStart","object","defaultProps","contextTypes","isRequired"],"mappings":"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","file":"EnhancedButton.js","sourceRoot":"/Users/liuyihao/Code/kr-admin","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport {createChildFragment} from '../utils/childUtils';\nimport Events from '../utils/events';\nimport keycode from 'keycode';\nimport FocusRipple from './FocusRipple';\nimport TouchRipple from './TouchRipple';\n\nlet styleInjected = false;\nlet listening = false;\nlet tabPressed = false;\n\nfunction injectStyle() {\n  if (!styleInjected) {\n    // Remove inner padding and border in Firefox 4+.\n    const style = document.createElement('style');\n    style.innerHTML = `\n      button::-moz-focus-inner,\n      input::-moz-focus-inner {\n        border: 0;\n        padding: 0;\n      }\n    `;\n\n    document.body.appendChild(style);\n    styleInjected = true;\n  }\n}\n\nfunction listenForTabPresses() {\n  if (!listening) {\n    Events.on(window, 'keydown', (event) => {\n      tabPressed = keycode(event) === 'tab';\n    });\n    listening = true;\n  }\n}\n\nclass EnhancedButton extends Component {\n  static propTypes = {\n    centerRipple: PropTypes.bool,\n    children: PropTypes.node,\n    containerElement: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n    ]),\n    disableFocusRipple: PropTypes.bool,\n    disableKeyboardFocus: PropTypes.bool,\n    disableTouchRipple: PropTypes.bool,\n    disabled: PropTypes.bool,\n    focusRippleColor: PropTypes.string,\n    focusRippleOpacity: PropTypes.number,\n    href: PropTypes.string,\n    keyboardFocused: PropTypes.bool,\n    onBlur: PropTypes.func,\n    onClick: PropTypes.func,\n    onFocus: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    onKeyboardFocus: PropTypes.func,\n    onMouseDown: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onMouseUp: PropTypes.func,\n    onTouchEnd: PropTypes.func,\n    onTouchStart: PropTypes.func,\n    onTouchTap: PropTypes.func,\n    style: PropTypes.object,\n    tabIndex: PropTypes.number,\n    touchRippleColor: PropTypes.string,\n    touchRippleOpacity: PropTypes.number,\n    type: PropTypes.string,\n  };\n\n  static defaultProps = {\n    containerElement: 'button',\n    onBlur: () => {},\n    onClick: () => {},\n    onFocus: () => {},\n    onKeyDown: () => {},\n    onKeyUp: () => {},\n    onKeyboardFocus: () => {},\n    onMouseDown: () => {},\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n    onMouseUp: () => {},\n    onTouchEnd: () => {},\n    onTouchStart: () => {},\n    onTouchTap: () => {},\n    tabIndex: 0,\n    type: 'button',\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {isKeyboardFocused: false};\n\n  componentWillMount() {\n    const {disabled, disableKeyboardFocus, keyboardFocused} = this.props;\n    if (!disabled && keyboardFocused && !disableKeyboardFocus) {\n      this.setState({isKeyboardFocused: true});\n    }\n  }\n\n  componentDidMount() {\n    injectStyle();\n    listenForTabPresses();\n    if (this.state.isKeyboardFocused) {\n      this.refs.enhancedButton.focus();\n      this.props.onKeyboardFocus(null, true);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if ((nextProps.disabled || nextProps.disableKeyboardFocus) &&\n      this.state.isKeyboardFocused) {\n      this.setState({isKeyboardFocused: false});\n      if (nextProps.onKeyboardFocus) {\n        nextProps.onKeyboardFocus(null, false);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.focusTimeout);\n  }\n\n  isKeyboardFocused() {\n    return this.state.isKeyboardFocused;\n  }\n\n  removeKeyboardFocus(event) {\n    if (this.state.isKeyboardFocused) {\n      this.setState({isKeyboardFocused: false});\n      this.props.onKeyboardFocus(event, false);\n    }\n  }\n\n  setKeyboardFocus(event) {\n    if (!this.state.isKeyboardFocused) {\n      this.setState({isKeyboardFocused: true});\n      this.props.onKeyboardFocus(event, true);\n    }\n  }\n\n  cancelFocusTimeout() {\n    if (this.focusTimeout) {\n      clearTimeout(this.focusTimeout);\n      this.focusTimeout = null;\n    }\n  }\n\n  createButtonChildren() {\n    const {\n      centerRipple,\n      children,\n      disabled,\n      disableFocusRipple,\n      disableKeyboardFocus,\n      disableTouchRipple,\n      focusRippleColor,\n      focusRippleOpacity,\n      touchRippleColor,\n      touchRippleOpacity,\n    } = this.props;\n    const {isKeyboardFocused} = this.state;\n\n    // Focus Ripple\n    const focusRipple = isKeyboardFocused && !disabled && !disableFocusRipple && !disableKeyboardFocus ? (\n      <FocusRipple\n        color={focusRippleColor}\n        opacity={focusRippleOpacity}\n        show={isKeyboardFocused}\n      />\n    ) : undefined;\n\n    // Touch Ripple\n    const touchRipple = !disabled && !disableTouchRipple ? (\n      <TouchRipple\n        centerRipple={centerRipple}\n        color={touchRippleColor}\n        opacity={touchRippleOpacity}\n      >\n        {children}\n      </TouchRipple>\n    ) : undefined;\n\n    return createChildFragment({\n      focusRipple,\n      touchRipple,\n      children: touchRipple ? undefined : children,\n    });\n  }\n\n  handleKeyDown = (event) => {\n    if (!this.props.disabled && !this.props.disableKeyboardFocus) {\n      if (keycode(event) === 'enter' && this.state.isKeyboardFocused) {\n        this.handleTouchTap(event);\n      }\n      if (keycode(event) === 'esc' && this.state.isKeyboardFocused) {\n        this.removeKeyboardFocus(event);\n      }\n    }\n    this.props.onKeyDown(event);\n  };\n\n  handleKeyUp = (event) => {\n    if (!this.props.disabled && !this.props.disableKeyboardFocus) {\n      if (keycode(event) === 'space' && this.state.isKeyboardFocused) {\n        this.handleTouchTap(event);\n      }\n    }\n    this.props.onKeyUp(event);\n  };\n\n  handleBlur = (event) => {\n    this.cancelFocusTimeout();\n    this.removeKeyboardFocus(event);\n    this.props.onBlur(event);\n  };\n\n  handleFocus = (event) => {\n    if (event) event.persist();\n    if (!this.props.disabled && !this.props.disableKeyboardFocus) {\n      // setTimeout is needed because the focus event fires first\n      // Wait so that we can capture if this was a keyboard focus\n      // or touch focus\n      this.focusTimeout = setTimeout(() => {\n        if (tabPressed) {\n          this.setKeyboardFocus(event);\n          tabPressed = false;\n        }\n      }, 150);\n\n      this.props.onFocus(event);\n    }\n  };\n\n  handleClick = (event) => {\n    if (!this.props.disabled) {\n      tabPressed = false;\n      this.props.onClick(event);\n    }\n  };\n\n  handleTouchTap = (event) => {\n    this.cancelFocusTimeout();\n    if (!this.props.disabled) {\n      tabPressed = false;\n      this.removeKeyboardFocus(event);\n      this.props.onTouchTap(event);\n    }\n  };\n\n  render() {\n    const {\n      centerRipple, // eslint-disable-line no-unused-vars\n      children,\n      containerElement,\n      disabled,\n      disableFocusRipple,\n      disableKeyboardFocus, // eslint-disable-line no-unused-vars\n      disableTouchRipple, // eslint-disable-line no-unused-vars\n      focusRippleColor, // eslint-disable-line no-unused-vars\n      focusRippleOpacity, // eslint-disable-line no-unused-vars\n      href,\n      keyboardFocused, // eslint-disable-line no-unused-vars\n      touchRippleColor, // eslint-disable-line no-unused-vars\n      touchRippleOpacity, // eslint-disable-line no-unused-vars\n      onBlur, // eslint-disable-line no-unused-vars\n      onClick, // eslint-disable-line no-unused-vars\n      onFocus, // eslint-disable-line no-unused-vars\n      onKeyUp, // eslint-disable-line no-unused-vars\n      onKeyDown, // eslint-disable-line no-unused-vars\n      onKeyboardFocus, // eslint-disable-line no-unused-vars\n      onTouchTap, // eslint-disable-line no-unused-vars\n      style,\n      tabIndex,\n      type,\n      ...other\n    } = this.props;\n\n    const {\n      prepareStyles,\n      enhancedButton,\n    } = this.context.muiTheme;\n\n    const mergedStyles = Object.assign({\n      border: 10,\n      boxSizing: 'border-box',\n      display: 'inline-block',\n      fontFamily: this.context.muiTheme.baseTheme.fontFamily,\n      WebkitTapHighlightColor: enhancedButton.tapHighlightColor, // Remove mobile color flashing (deprecated)\n      cursor: disabled ? 'default' : 'pointer',\n      textDecoration: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 'none',\n      fontSize: 'inherit',\n      fontWeight: 'inherit',\n      /**\n       * This is needed so that ripples do not bleed\n       * past border radius.\n       * See: http://stackoverflow.com/questions/17298739/\n       * css-overflow-hidden-not-working-in-chrome-when-parent-has-border-radius-and-chil\n       */\n      transform: disableTouchRipple && disableFocusRipple ? null : 'translate(0, 0)',\n      verticalAlign: href ? 'middle' : null,\n    }, style);\n\n\n    // Passing both background:none & backgroundColor can break due to object iteration order\n    if (!mergedStyles.backgroundColor && !mergedStyles.background) {\n      mergedStyles.background = 'none';\n    }\n\n    if (disabled && href) {\n      return (\n        <span\n          {...other}\n          style={mergedStyles}\n        >\n          {children}\n        </span>\n      );\n    }\n\n    const buttonProps = {\n      ...other,\n      style: prepareStyles(mergedStyles),\n      ref: 'enhancedButton',\n      disabled: disabled,\n      href: href,\n      onBlur: this.handleBlur,\n      onClick: this.handleClick,\n      onFocus: this.handleFocus,\n      onKeyUp: this.handleKeyUp,\n      onKeyDown: this.handleKeyDown,\n      onTouchTap: this.handleTouchTap,\n      tabIndex: disabled || disableKeyboardFocus ? -1 : tabIndex,\n      type: type,\n    };\n    const buttonChildren = this.createButtonChildren();\n\n    if (React.isValidElement(containerElement)) {\n      return React.cloneElement(containerElement, buttonProps, buttonChildren);\n    }\n\n    return React.createElement(href ? 'a' : containerElement, buttonProps, buttonChildren);\n  }\n}\n\nexport default EnhancedButton;\n"]}