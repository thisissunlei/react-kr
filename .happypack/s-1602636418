'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _simpleAssign = require('simple-assign');

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _reactAddonsPureRenderMixin = require('react-addons-pure-render-mixin');

var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Redux = require('kr/Redux');

var _CreateAccount = require('./CreateAccount');

var _CreateAccount2 = _interopRequireDefault(_CreateAccount);

var _DataPermission = require('./DataPermission');

var _DataPermission2 = _interopRequireDefault(_DataPermission);

var _SearchForm = require('./SearchForm');

var _SearchForm2 = _interopRequireDefault(_SearchForm);

var _EditAccount = require('./EditAccount');

var _EditAccount2 = _interopRequireDefault(_EditAccount);

var _reduxForm = require('redux-form');

var _krUi = require('kr-ui');

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AccountList = function (_Component) {
    _inherits(AccountList, _Component);

    function AccountList(props, context) {
        _classCallCheck(this, AccountList);

        var _this2 = _possibleConstructorReturn(this, (AccountList.__proto__ || Object.getPrototypeOf(AccountList)).call(this, props, context));

        _this2.openNewCreate = function () {
            _this2.setState({
                openNewCreate: !_this2.state.openNewCreate,
                searchParams: {
                    page: 1,
                    pageSize: '15'
                }
            });
        };

        _this2.openEditAcc = function () {
            _this2.setState({
                openEditAcc: !_this2.state.openEditAcc
            });
        };

        _this2.onOperation = function (type, itemDetail) {
            var searchParams = _this2.state.searchParams;

            var _this = _this2;
            var timer = +new Date();
            _this2.setState({ itemDetail: itemDetail });
            if (type == 'data') {
                var orderId = itemDetail.id;
                console.log(itemDetail);
            } else if (type == 'dele') {
                _Redux.Store.dispatch(_Redux.Actions.callAPI('delSsoUser', { id: itemDetail.id })).then(function (response) {
                    _this.setState({
                        searchParams: {
                            page: 1,
                            pageSize: '15',
                            timer: timer
                        }
                    }, function () {
                        _krUi.Message.success("删除成功");
                        console.log(this.state.searchParams);
                    });
                }).catch(function (err) {
                    _krUi.Message.error(err.message);
                });
            } else if (type == 'reset') {
                _Redux.Store.dispatch(_Redux.Actions.callAPI('resetPassword', {}, { id: itemDetail.id })).then(function (response) {
                    _krUi.Message.success('重置成功');
                }).catch(function (err) {
                    _krUi.Message.error(err.message);
                });
            } else if (type == 'lock') {
                _Redux.Store.dispatch(_Redux.Actions.callAPI('lockAccount', {}, { id: itemDetail.id })).then(function (response) {
                    _krUi.Message.success('已加锁');
                }).catch(function (err) {
                    _krUi.Message.error(err.message);
                });
            } else if (type == 'edit') {
                _this.setState({ itemDetail: itemDetail });
                _this2.openEditAcc();
            }
        };

        _this2.openDataPermission = function () {
            _this2.setState({
                openDataPermission: !_this2.state.openDataPermission
            });
        };

        _this2.onSearchSubmit = function (value) {
            var searchParams = _this2.state.searchParams;

            console.log(searchParams);
            if (value.filter == 'company') {
                _this2.setState({
                    searchParams: {
                        page: 1,
                        pageSize: 15,
                        accountName: value.content
                    }
                });
            }
            if (value.filter == 'city') {
                _this2.setState({
                    searchParams: {
                        page: 1,
                        pageSize: 15,
                        realName: value.content
                    }
                });
            }
            if (value.filter == 'community') {
                _this2.setState({
                    searchParams: {
                        page: 1,
                        pageSize: 15,
                        mobilePhone: value.content
                    }
                });
            }
            if (value.filter == 'people') {
                _this2.setState({
                    searchParams: {
                        page: 1,
                        pageSize: 15,
                        email: value.content
                    }
                });
            }
        };

        _this2.onSearchSubmit = _this2.onSearchSubmit.bind(_this2);
        _this2.openDataPermission = _this2.openDataPermission.bind(_this2);
        _this2.onOperation = _this2.onOperation.bind(_this2);
        _this2.state = {
            searchParams: {
                accountName: '',
                page: 1,
                pageSize: 15,
                timer: 1
            },
            openNewCreate: false,
            openDataPermission: false,
            openEditAcc: false,
            item: {},
            itemDetail: {}
        };

        return _this2;
    }
    // componentDidMount() {
    // 	var _this = this;
    // 	Store.dispatch(Actions.callAPI('getSsoUserList')).then(function(response) {
    // 		_this.setState({
    // 			item: response,
    // 		},function(){
    // 			console.log(this.state.item.items);
    // 		});
    // 	}).catch(function(err) {
    // 		Notify.show([{
    // 			message: err.message,
    // 			type: 'danger',
    // 		}]);
    // 	});
    //
    // }

    //操作相关


    _createClass(AccountList, [{
        key: 'onNewCreateSubmit',
        value: function onNewCreateSubmit(searchParams) {
            searchParams = (0, _simpleAssign2.default)({}, this.state.searchParams, searchParams);
            this.setState({
                searchParams: searchParams,
                openNewCreate: !this.state.openNewCreate
            });
        }
    }, {
        key: 'onNewCreateCancel',
        value: function onNewCreateCancel() {
            this.openNewCreateDialog();
        }
        //搜索

    }, {
        key: 'render',
        value: function render() {
            var searchParams = this.state.searchParams;
            var itemDetail = this.state.itemDetail;

            console.log("124124124", this.state.itemDetail);
            var logFlag = '';

            var options = [{
                label: '登录名',
                value: 'company'
            }, {
                label: '姓名',
                value: 'city'
            }, {
                label: '手机号',
                value: 'community'
            }, {
                label: '电子邮箱',
                value: 'people'
            }];
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    _krUi.Section,
                    { title: '\u8D26\u6237\u5217\u8868' },
                    _react2.default.createElement(
                        _krUi.Row,
                        { style: {
                                position: 'relative',
                                zIndex: 5
                            } },
                        _react2.default.createElement(
                            _krUi.Col,
                            { md: 8 },
                            _react2.default.createElement(
                                _krUi.ListGroup,
                                null,
                                _react2.default.createElement(
                                    _krUi.ListGroupItem,
                                    { style: {
                                            padding: '7px 50px 6px 17px'
                                        } },
                                    _react2.default.createElement(_krUi.SearchForms, { onSubmit: this.onSearchSubmit, placeholder: '\u8BF7\u8F93\u5165\u5173\u952E\u5B57', searchFilter: options })
                                ),
                                _react2.default.createElement(
                                    _krUi.ListGroupItem,
                                    { style: {
                                            paddingTop: 7,
                                            paddingBottom: 6
                                        } },
                                    _react2.default.createElement(_krUi.Button, { label: '\u65B0\u5EFA', type: 'button', onClick: this.openNewCreate, width: 70, height: 26, fontSize: 14 })
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _krUi.Table,
                        { style: {
                                marginTop: 10
                            }, displayCheckbox: false, onLoaded: this.onLoaded, ajax: true, ajaxUrlName: 'getSsoUserList', ajaxParams: this.state.searchParams, onOperation: this.onOperation, onExport: this.onExport },
                        _react2.default.createElement(
                            _krUi.TableHeader,
                            null,
                            _react2.default.createElement(
                                _krUi.TableHeaderColumn,
                                null,
                                'ID'
                            ),
                            _react2.default.createElement(
                                _krUi.TableHeaderColumn,
                                null,
                                '\u767B\u5F55\u540D'
                            ),
                            _react2.default.createElement(
                                _krUi.TableHeaderColumn,
                                null,
                                '\u59D3\u540D'
                            ),
                            _react2.default.createElement(
                                _krUi.TableHeaderColumn,
                                null,
                                '\u624B\u673A\u53F7'
                            ),
                            _react2.default.createElement(
                                _krUi.TableHeaderColumn,
                                null,
                                '\u7535\u5B50\u90AE\u7BB1'
                            ),
                            _react2.default.createElement(
                                _krUi.TableHeaderColumn,
                                null,
                                '\u9501\u5B9A\u6807\u8BC6'
                            ),
                            _react2.default.createElement(
                                _krUi.TableHeaderColumn,
                                null,
                                '\u64CD\u4F5C'
                            )
                        ),
                        _react2.default.createElement(
                            _krUi.TableBody,
                            null,
                            _react2.default.createElement(
                                _krUi.TableRow,
                                null,
                                _react2.default.createElement(_krUi.TableRowColumn, { style: {
                                        overflow: 'hidden'
                                    }, name: 'id' }),
                                _react2.default.createElement(_krUi.TableRowColumn, { name: 'accountName' }),
                                _react2.default.createElement(_krUi.TableRowColumn, { name: 'realName' }),
                                _react2.default.createElement(_krUi.TableRowColumn, { name: 'mobilePhone' }),
                                _react2.default.createElement(_krUi.TableRowColumn, { name: 'email' }),
                                _react2.default.createElement(_krUi.TableRowColumn, { name: 'accountStatus', options: [{
                                        label: '未锁定',
                                        value: 'NOTLOCK'
                                    }, {
                                        label: '锁定',
                                        value: 'LOCKED'
                                    }], component: function component(value, oldValue) {
                                        if (value == 'NOTLOCK') {
                                            logFlag = false;
                                        }
                                        if (value == 'LOCKED') {
                                            console.log('[[[[]]]]');
                                            logFlag = true;
                                        }
                                        return _react2.default.createElement(
                                            'div',
                                            null,
                                            value
                                        );
                                    } }),
                                _react2.default.createElement(
                                    _krUi.TableRowColumn,
                                    null,
                                    _react2.default.createElement(_krUi.Button, { label: '\u4FEE\u6539', onTouchTap: this.openEdit, type: 'operation', operation: 'edit' }),
                                    _react2.default.createElement(_krUi.Button, { label: '\u91CD\u7F6E\u5BC6\u7801', type: 'operation', operation: 'reset' }),
                                    _react2.default.createElement(_krUi.Button, { label: logFlag ? '解锁' : '加锁', type: 'operation', operation: 'lock' }),
                                    _react2.default.createElement(_krUi.Button, { label: '\u5220\u9664', type: 'operation', operation: 'dele' }),
                                    _react2.default.createElement(_krUi.Button, { label: '\u6570\u636E', onTouchTap: this.openDataPermission, type: 'operation', operation: 'data' })
                                )
                            )
                        ),
                        _react2.default.createElement(_krUi.TableFooter, null)
                    )
                ),
                _react2.default.createElement(
                    _krUi.Dialog,
                    { title: '\u65B0\u5EFA\u767B\u5F55\u8D26\u53F7', modal: true, open: this.state.openNewCreate, onClose: this.openNewCreate, contentStyle: {
                            width: 500
                        } },
                    _react2.default.createElement(_CreateAccount2.default, { onSubmit: this.onNewCreateSubmit })
                ),
                _react2.default.createElement(
                    _krUi.Dialog,
                    { title: '\u7F16\u8F91\u767B\u5F55\u8D26\u53F7', modal: true, open: this.state.openEditAcc, onClose: this.openEditAcc, contentStyle: {
                            width: 500
                        } },
                    _react2.default.createElement(_EditAccount2.default, { detail: this.state.itemDetail, onCancel: this.openNewCreate })
                ),
                _react2.default.createElement(
                    _krUi.Dialog,
                    { title: '\u7F16\u8F91\u6570\u636E\u6743\u9650', modal: true, open: this.state.openDataPermission, onClose: this.openDataPermission, contentStyle: {
                            width: 500,
                            height: 500
                        } },
                    _react2.default.createElement(_DataPermission2.default, { detailFuc: this.reloadFunc, detail: this.state.itemDetail, onCancel: this.openDataPermission })
                )
            );
        }
    }]);

    return AccountList;
}(_react.Component);

var _default = (0, _reduxForm.reduxForm)({ form: 'AccountList', enableReinitialize: true, keepDirtyOnReinitialize: true })(AccountList);

exports.default = _default;
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }

    __REACT_HOT_LOADER__.register(AccountList, 'AccountList', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Permission/AccountList/index.js');

    __REACT_HOT_LOADER__.register(_default, 'default', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Permission/AccountList/index.js');
}();

;