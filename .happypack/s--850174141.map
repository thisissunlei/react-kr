{"version":3,"sources":["src/Redux/Utils/fetch.js"],"names":["polyfill","env","process","NODE_ENV","getUrl","path","params","mode","server","url","indexOf","err","console","error","Object","keys","length","item","hasOwnProperty","replace","encodeURI","searchParams","set","toString","getMethod","apiConfig","method","check401","res","code","window","location","href","jsonParse","json","http","request","payload","promise","get","post","update","remove","transformPreResponse","response","data","prototype","call","pop","transformResponse","resolve","reject","headers","credentials","then","parseInt","catch","getdemo","xhr","XMLHttpRequest","withCredentials","open","responseType","onload","e","status","send","bodyParams","p","push","encodeURIComponent","document","cookie","body","join","prop","module","exports"],"mappings":"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","file":"fetch.js","sourceRoot":"/Users/liuyihao/Code/kr-admin","sourcesContent":[" import Promise from 'promise-polyfill';\nimport fetch from 'isomorphic-fetch';\nimport URLSearchParams from 'url-search-params';\nimport { browserHistory } from 'react-router';\nimport APIS from '../../Configs/apis';\n\nimport ES6Promise from 'es6-promise';\nES6Promise.polyfill();\n\nvar env = process.env.NODE_ENV;\n\nfunction getUrl(path, params = {},mode = false) {\n\n    let server = '';\n\n\n\tif(env ==='test'){\n\t\tserver = 'http://optest.krspace.cn';\n\t}if(env ==='development'){\n\t\tserver = 'http://optest.krspace.cn';\n\t}else if(env ==='test01'){\n\t\tserver = 'http://optest01.krspace.cn';\n\t} else if(env ==='test02'){\n\t\tserver = 'http://optest02.krspace.cn';\n\t}else {\n\t\tserver = '';\n  \t}\n\n\n\n\t/*\n    if (path.match(/^http/) != 'null') {\n        return path;\n    }\n    */\n    //本地联调接口\n    // let url = APIS[path].url;\n    // if(url.indexOf('apixr')){\n    // \tserver = ''\n    // }\n\n\n    var url = APIS[path].url;\n\n    if(url.indexOf('mockjsdata') !==-1){\n    \tserver='';\n    }\n    try {\n        server += APIS[path].url;\n    } catch(err) {\n        console.error(`${path} not defined in apis.js`);\n        return false;\n    }\n    \n\n    if(Object.keys(params).length){\n        for (let item in params) {\n            if (params.hasOwnProperty(item)) {\n                server = server.replace('{' + item + '}', encodeURI(params[item]));\n                delete params[item];\n            }\n        }\n    }\n\n\n    if(!mode){\n\n        var searchParams = new URLSearchParams();\n\n        for (let item in params) {\n            if (params.hasOwnProperty(item)) {\n                searchParams.set(item,params[item]);\n            }\n        }\n\n        if(server.indexOf('?') !== -1){\n            server +='&'+searchParams.toString();\n        }else{\n            server +='?'+searchParams.toString();\n        }\n    }\n\n\t//去除多余参数\n\tserver = server.replace(/={.*?}/gi,'=');\n\n    return server;\n}\n\n\n\nfunction getMethod(path) {\n\n     const apiConfig = APIS[path];\n    return apiConfig.method;\n}\n\nfunction check401(res) {\n    if (res.code ===-4011) {\n\t\twindow.location.href = '/';\n    }\n    return res;\n}\n\nfunction jsonParse(res) {\n    return res.json();\n}\n\nconst http = {\n\n    request:(path='demo', params,payload,method)=>{\n\n\n\n        const url = getUrl(path, params);\n\n        method = method || getMethod(path);\n        var promise = '';\n\n        if (!url) {\n            return;\n        }\n\n        switch(method){\n            case 'get':{\n\n                promise = http.get(url,params);\n                break;\n            }\n            case 'post':{\n                    promise = http.post(url,params,payload);\n                break;\n            }\n\n            case 'put':{\n                    promise = http.update(url,params,payload);\n                break;\n            }\n            case 'delete':{\n                   promise = http.remove(url,params,payload);\n                break;\n            }\n            default:{\n                promise = http.get(url,params,payload);\n                break;\n            }\n        }\n\n        return promise;\n    },\n\ttransformPreResponse(response){\n\t\tvar data = response;\n\t\t//处理mock 数据\n\t\tif(Object.prototype.toString.call(response) === '[object Array]'){\n\t\t\tdata = response.pop();\n\t\t}\n\t\treturn data;\n\t},\n\ttransformResponse:function(response){\n\t\treturn response.data;\n\t},\n\tget: (url, params) => new Promise((resolve, reject) => {\n\n\t\tif (!url) {\n\t\t\treturn;\n\t\t}\n\n\t\tfetch(url, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Accept': '*',\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n\t\t\t},\n      mode:'cors',\n\t\t  credentials: 'include',\n\t\t})\n\t\t\t.then(jsonParse)\n\t\t\t.then(check401)\n\t\t\t.then(http.transformPreResponse)\n\t\t\t.then(json => {\n\t\t\t\tif(parseInt(json.code)>0){\n\t\t\t\t\t//处理数据格式\n\t\t\t\t\tresolve(http.transformResponse(json));\n\t\t\t\t}else{\n\t\t\t\t\treject(json);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => reject(err));\n\t}),\n\n\tgetdemo: (url, params) => new Promise((resolve, reject) => {\n\n\t\tif (!url) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar xhr = new XMLHttpRequest();\n\n\t\txhr.withCredentials = true;\n\t\txhr.open('GET', url, true);\n\t\txhr.responseType = 'json';\n\t\txhr.onload = function(e) {\n\t\t  if (this.status >= 200 || this.status <300 ) {\n\t\t\t  var json = http.transformPreResponse(xhr.response);\n\t\t\t\tif(json && json.code && parseInt(json.code)>0){\n\t\t\t\t\t//处理数据格式\n\t\t\t\t\tresolve(http.transformResponse(json))\n\t\t\t\t}else{\n\t\t\t\t\treject(json)\n\t\t\t\t}\n\t\t  }else{\n\t\t\t\treject(xhr.response);\n\t\t  }\n\t\t};\n\t\txhr.send();\n\t}),\n\n\tpost: (url, params, payload) => new Promise((resolve, reject) => {\n\n\t\tif (!url) {\n\t\t\treturn\n\t\t}\n\n    var bodyParams = [];\n    for (var p in payload){\n        bodyParams.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(payload[p]));\n    }\n\n\t\tfetch(url, {\n\t\t\tmethod: 'POST',\n\t\t  credentials: 'include',\n      mode:'cors',\n\t\t\theaders: {\n\t\t\t\t'Accept': '*',\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n\t\t\t\t\"Cookie\": document.cookie\n\t\t\t},\n\t\t\tbody:bodyParams.join('&')\n\t\t})\n\n\t\t\t.then(jsonParse)\n\t\t\t.then(check401)\n\t\t\t.then(http.transformPreResponse)\n\t\t\t.then(json => {\n\n\t\t\t\tif(parseInt(json.code)>0){\n\t\t\t\t\t//处理数据格式\n\t\t\t\t\tresolve(http.transformResponse(json));\n\t\t\t\t}else{\n\t\t\t\t\treject(json);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => reject(err));\n\t}),\n\n\tupdate: (url, params, payload) => new Promise((resolve, reject) => {\n\t\tconst searchParams = new URLSearchParams();\n\n\t\tif (!url) {\n\t\t\treturn\n\t\t}\n\n\t\tfor (const prop in payload) {\n\t\t\tsearchParams.set(prop, payload[prop])\n\t\t}\n\n\t\tfetch(url, {\n\t\t\tmethod: 'PUT',\n\t\t  credentials: 'include',\n      mode:'cors',\n\t\t\theaders: {\n\t\t\t\t'Accept': '*',\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n\t\t\t},\n\t\t\tbody: searchParams\n\t\t})\n\t\t\t.then(jsonParse)\n\t\t\t.then(check401)\n\t\t\t.then(http.transformPreResponse)\n\t\t\t.then(json => {\n\t\t\t\tif(parseInt(json.code)>0){\n\t\t\t\t\t//处理数据格式\n\t\t\t\t\tresolve(http.transformResponse(json));\n\t\t\t\t}else{\n\t\t\t\t\treject(json);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => reject(err));\n\t}),\n\n\tremove: (url, params, payload) => new Promise((resolve, reject) => {\n\t\tconst searchParams = new URLSearchParams();\n\n\t\tif (!url) {\n\t\t\treturn\n\t\t}\n\n\t\tfor (const prop in payload) {\n\t\t\tsearchParams.set(prop, payload[prop])\n\t\t}\n\n\t\treturn fetch(url, {\n\t\t\tmethod: 'DELETE',\n\t\t  credentials: 'include',\n      mode:'cors',\n\t\t\theaders: {\n\t\t\t\t'Accept': '*',\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n\t\t\t},\n\t\t\tbody: searchParams\n\t\t})\n\t\t\t.then(jsonParse)\n\t\t\t.then(check401)\n\t\t\t.then(http.transformPreResponse)\n\t\t\t.then(json => {\n\t\t\t\tif(parseInt(json.code)>0){\n\t\t\t\t\t//处理数据格式\n\t\t\t\t\tresolve(http.transformResponse(json))\n\t\t\t\t}else{\n\t\t\t\t\treject(json)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => reject(err));\n\t}),\n}\n\n\n\nmodule.exports = http;\n"]}