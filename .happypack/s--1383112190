'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _TableHeaderColumn = require('../TableHeaderColumn');

var _TableHeaderColumn2 = _interopRequireDefault(_TableHeaderColumn);

var _TableRowColumn = require('../TableRowColumn');

var _TableRowColumn2 = _interopRequireDefault(_TableRowColumn);

var _Pagination = require('../../Pagination');

var _Pagination2 = _interopRequireDefault(_Pagination);

var _Button = require('kr-ui/Button');

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableFooter = function (_React$Component) {
	_inherits(TableFooter, _React$Component);

	function TableFooter(props) {
		_classCallCheck(this, TableFooter);

		var _this = _possibleConstructorReturn(this, (TableFooter.__proto__ || Object.getPrototypeOf(TableFooter)).call(this, props));

		_this.onImport = function () {
			var onImport = _this.props.onImport;

			onImport && onImport();
		};

		_this.batchDelet = function () {
			var batchDelet = _this.props.batchDelet;

			batchDelet && batchDelet();
		};

		_this.renderOther = function () {
			var renderOther = _this.props.renderOther;

			renderOther && renderOther();
			// return (<span>dddd</span>)
			console.log('other', renderOther);
		};

		_this.onExport = _this.onExport.bind(_this);
		_this.onPageChange = _this.onPageChange.bind(_this);
		_this.onSelectAll = _this.onSelectAll.bind(_this);

		_this.renderCheckbox = _this.renderCheckbox.bind(_this);
		_this.renderPagination = _this.renderPagination.bind(_this);
		_this.renderExport = _this.renderExport.bind(_this);

		return _this;
	}

	_createClass(TableFooter, [{
		key: 'onSelectAll',
		value: function onSelectAll() {
			var onSelectAll = this.props.onSelectAll;

			onSelectAll && onSelectAll();
		}
	}, {
		key: 'onExport',
		value: function onExport() {
			var onExport = this.props.onExport;

			onExport && onExport();
		}
	}, {
		key: 'onPageChange',
		value: function onPageChange(page) {
			var onPageChange = this.props.onPageChange;

			onPageChange && onPageChange(page);
		}
	}, {
		key: 'renderCheckbox',
		value: function renderCheckbox() {
			var displayCheckbox = this.props.displayCheckbox;


			if (!displayCheckbox) {
				return null;
			}

			return _react2.default.createElement(
				_TableRowColumn2.default,
				{ width: this.props.defaultValue.checkboxWidth },
				_react2.default.createElement('input', { type: 'checkbox', onTouchTap: this.onSelectAll })
			);
		}
	}, {
		key: 'renderPagination',
		value: function renderPagination() {
			var _props = this.props,
			    pagination = _props.pagination,
			    totalCount = _props.totalCount,
			    page = _props.page,
			    pageSize = _props.pageSize;


			if (!pagination) {
				return null;
			}
			return _react2.default.createElement(_Pagination2.default, { totalCount: totalCount, page: page, pageSize: pageSize, onPageChange: this.onPageChange });
		}
	}, {
		key: 'renderExport',
		value: function renderExport() {
			var exportSwitch = this.props.exportSwitch;


			if (!exportSwitch) {
				return;
			}

			return _react2.default.createElement(
				'a',
				{ style: { width: 80, height: 30, background: '#499df1', color: '#fff', display: 'inline-block', borderRadius: '4px', lineHeight: '30px', textAlign: 'center', boxShadow: ' 0 1px 6px rgba(0, 0, 0, 0.2), 0 1px 4px rgba(0, 0, 0, 0.2)', marginRight: 20, cursor: 'pointer' }, onClick: this.onExport },
				'\u5BFC\xA0\xA0\u51FA'
			);
		}
	}, {
		key: 'render',
		value: function render() {
			var _props2 = this.props,
			    className = _props2.className,
			    children = _props2.children,
			    totalCount = _props2.totalCount,
			    page = _props2.page,
			    pageSize = _props2.pageSize,
			    footer = _props2.footer,
			    batchDelet = _props2.batchDelet,
			    onImport = _props2.onImport,
			    renderOther = _props2.renderOther,
			    exportSwitch = _props2.exportSwitch;


			if (!footer) {
				return null;
			}
			var num = 1;
			if (onImport && batchDelet && exportSwitch) {
				num = 4;
			}

			return _react2.default.createElement(
				'tfoot',
				{ className: 'tfoot' },
				_react2.default.createElement(
					'tr',
					null,
					_react2.default.createElement(
						_TableRowColumn2.default,
						{ style: { textAlign: 'left', position: 'absolute' }, colSpan: num },
						this.renderExport(),
						renderOther && renderOther()
					),
					_react2.default.createElement(
						_TableRowColumn2.default,
						{ colSpan: 100, align: 'right' },
						this.renderPagination()
					)
				)
			);
		}
	}]);

	return TableFooter;
}(_react2.default.Component);

TableFooter.displayName = 'TableFooter';
TableFooter.defaultProps = {
	exportSwitch: false
};
TableFooter.PropTypes = {
	className: _react2.default.PropTypes.string,
	children: _react2.default.PropTypes.node,
	page: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.number]),
	pageSize: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.number]),
	totalCount: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.number]),
	displayCheckbox: _react2.default.PropTypes.bool,
	pagination: _react2.default.PropTypes.bool,
	onSelectAll: _react2.default.PropTypes.func,
	onExport: _react2.default.PropTypes.func,
	onPageChange: _react2.default.PropTypes.func,
	exportSwitch: _react2.default.PropTypes.bool,
	renderOther: _react2.default.PropTypes.func
};
exports.default = TableFooter;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(TableFooter, 'TableFooter', '/Users/tmac_zc/Code/kr-admin/src/Components/Table/TableFooter/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,