'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reduxForm = require('redux-form');

var _Redux = require('kr/Redux');

var _fetch = require('kr/Redux/Utils/fetch');

var _fetch2 = _interopRequireDefault(_fetch);

var _krUi = require('kr-ui');

var _NewCreateForm = require('./NewCreateForm');

var _NewCreateForm2 = _interopRequireDefault(_NewCreateForm);

var _ConfirmFormDetail = require('./ConfirmFormDetail');

var _ConfirmFormDetail2 = _interopRequireDefault(_ConfirmFormDetail);

var _State = require('../../State');

var _State2 = _interopRequireDefault(_State);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var JoinCreate = function (_Component) {
	_inherits(JoinCreate, _Component);

	function JoinCreate(props, context) {
		_classCallCheck(this, JoinCreate);

		var _this2 = _possibleConstructorReturn(this, (JoinCreate.__proto__ || Object.getPrototypeOf(JoinCreate)).call(this, props, context));

		_this2.openConfirmCreateDialog = _this2.openConfirmCreateDialog.bind(_this2);
		_this2.onCreateSubmit = _this2.onCreateSubmit.bind(_this2);
		_this2.onCancel = _this2.onCancel.bind(_this2);
		_this2.onConfrimSubmit = _this2.onConfrimSubmit.bind(_this2);

		_this2.state = {
			initialValues: {},
			optionValues: {},
			formValues: {},
			openConfirmCreate: false
		};
		_this2.isConfirmSubmiting = false;
		_Redux.Store.dispatch((0, _reduxForm.reset)('admitCreateForm'));
		return _this2;
	}

	_createClass(JoinCreate, [{
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			_Redux.Store.dispatch((0, _reduxForm.reset)('admitCreateForm'));
		}
	}, {
		key: 'onCreateSubmit',
		value: function onCreateSubmit(formValues) {
			this.setState({
				formValues: formValues
			});
			var _this = this;

			this.openConfirmCreateDialog();
		}
	}, {
		key: 'onConfrimSubmit',
		value: function onConfrimSubmit() {

			if (this.isConfirmSubmiting) {
				return;
			}
			this.isConfirmSubmiting = true;

			var formValues = this.state.formValues;
			var params = this.props.params;

			var _this = this;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('addFinaContractIntentletter', {}, formValues)).then(function (response) {
				_this.isConfirmSubmiting = false;
				_krUi.Notify.show([{
					message: '创建成功',
					type: 'success'
				}]);
				_State2.default.ajaxListData({ cityName: '', communityName: '', createDateBegin: '', createDateEnd: '', createrName: '', customerName: '', page: '', pageSize: '', salerName: '' });
				_State2.default.openTowAgreement = false;
				// window.setTimeout(function() {
				// 	window.location.href = "./#/operation/customerManage/" + params.customerId + "/order/" + params.orderId + "/agreement/admit/" + response.contractId + "/detail";
				// }, 0);
				_State2.default.openOneAgreement = false;
			}).catch(function (err) {
				_this.isConfirmSubmiting = false;
				_krUi.Notify.show([{
					message: err.message,
					type: 'danger'
				}]);
			});

			this.openConfirmCreateDialog();
		}
	}, {
		key: 'onCancel',
		value: function onCancel() {
			//window.history.back();
			_State2.default.openTowAgreement = false;
			_State2.default.openOneAgreement = false;
		}
	}, {
		key: 'openConfirmCreateDialog',
		value: function openConfirmCreateDialog() {
			this.setState({
				openConfirmCreate: !this.state.openConfirmCreate
			});
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {

			var _this = this;
			var params = this.props.params;

			var initialValues = {};
			var optionValues = {};

			_Redux.Store.dispatch(_Redux.Actions.callAPI('fina-contract-intention', {
				customerId: params.customerId,
				mainBillId: params.orderId,
				communityId: 1
			})).then(function (response) {

				initialValues.contractstate = 'UNSTART';
				initialValues.mainbillid = params.orderId;

				initialValues.leaseContact = response.customer.customerMember;
				initialValues.leaseContacttel = response.customer.customerPhone;
				optionValues.communityAddress = response.customer.communityAddress;
				optionValues.leaseAddress = response.customer.customerAddress;
				initialValues.leaseAddress = response.customer.customerAddress;

				//合同类别，枚举类型（1:意向书,2:入住协议,3:增租协议,4.续租协议,5:减租协议,6退租协议）
				initialValues.contracttype = 'INTENTION';

				optionValues.fnaCorporationList = response.fnaCorporation.map(function (item, index) {
					item.value = item.id;
					item.label = item.corporationName;
					return item;
				});
				optionValues.paymentList = response.payment.map(function (item, index) {
					item.value = item.id;
					item.label = item.dicName;
					return item;
				});

				optionValues.payTypeList = response.payType.map(function (item, index) {
					item.value = item.id;
					item.label = item.dicName;
					return item;
				});

				optionValues.floorList = response.customer.floor;
				optionValues.customerName = response.customer.customerName;
				optionValues.leaseAddress = response.customer.customerAddress;
				optionValues.communityName = response.customer.communityName;
				optionValues.communityId = response.customer.communityid;
				optionValues.mainbillCommunityId = response.mainbillCommunityId || 1;

				_this.setState({
					initialValues: initialValues,
					optionValues: optionValues
				});
			}).catch(function (err) {
				_krUi.Notify.show([{
					message: '后台出错请联系管理员',
					type: 'danger'
				}]);
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _state = this.state,
			    initialValues = _state.initialValues,
			    optionValues = _state.optionValues;


			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(_krUi.BreadCrumbs, { children: ['系统运营', '客户管理', '承租协议'] }),
				_react2.default.createElement(
					'div',
					{ style: { marginTop: 10 } },
					_react2.default.createElement(_NewCreateForm2.default, { onSubmit: this.onCreateSubmit, initialValues: initialValues, onCancel: this.onCancel, optionValues: optionValues })
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u627F\u79DF\u610F\u5411\u4E66',
						modal: true,
						autoScrollBodyContent: true,
						autoDetectWindowHeight: true,
						onClose: this.openConfirmCreateDialog,
						open: this.state.openConfirmCreate },
					_react2.default.createElement(_ConfirmFormDetail2.default, { detail: this.state.formValues, onSubmit: this.onConfrimSubmit, onCancel: this.openConfirmCreateDialog, optionValues: optionValues })
				)
			);
		}
	}]);

	return JoinCreate;
}(_react.Component);

exports.default = JoinCreate;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(JoinCreate, 'JoinCreate', '/Users/liuyihao/Code/kr-admin/src/Containers/Operation/CustomerManage/AgreementList/Admit/Create/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Db250YWluZXJzL09wZXJhdGlvbi9DdXN0b21lck1hbmFnZS9BZ3JlZW1lbnRMaXN0L0FkbWl0L0NyZWF0ZS9pbmRleC5qcyJdLCJuYW1lcyI6WyJKb2luQ3JlYXRlIiwicHJvcHMiLCJjb250ZXh0Iiwib3BlbkNvbmZpcm1DcmVhdGVEaWFsb2ciLCJiaW5kIiwib25DcmVhdGVTdWJtaXQiLCJvbkNhbmNlbCIsIm9uQ29uZnJpbVN1Ym1pdCIsInN0YXRlIiwiaW5pdGlhbFZhbHVlcyIsIm9wdGlvblZhbHVlcyIsImZvcm1WYWx1ZXMiLCJvcGVuQ29uZmlybUNyZWF0ZSIsImlzQ29uZmlybVN1Ym1pdGluZyIsImRpc3BhdGNoIiwic2V0U3RhdGUiLCJfdGhpcyIsInBhcmFtcyIsImNhbGxBUEkiLCJ0aGVuIiwicmVzcG9uc2UiLCJzaG93IiwibWVzc2FnZSIsInR5cGUiLCJhamF4TGlzdERhdGEiLCJjaXR5TmFtZSIsImNvbW11bml0eU5hbWUiLCJjcmVhdGVEYXRlQmVnaW4iLCJjcmVhdGVEYXRlRW5kIiwiY3JlYXRlck5hbWUiLCJjdXN0b21lck5hbWUiLCJwYWdlIiwicGFnZVNpemUiLCJzYWxlck5hbWUiLCJvcGVuVG93QWdyZWVtZW50Iiwib3Blbk9uZUFncmVlbWVudCIsImNhdGNoIiwiZXJyIiwiY3VzdG9tZXJJZCIsIm1haW5CaWxsSWQiLCJvcmRlcklkIiwiY29tbXVuaXR5SWQiLCJjb250cmFjdHN0YXRlIiwibWFpbmJpbGxpZCIsImxlYXNlQ29udGFjdCIsImN1c3RvbWVyIiwiY3VzdG9tZXJNZW1iZXIiLCJsZWFzZUNvbnRhY3R0ZWwiLCJjdXN0b21lclBob25lIiwiY29tbXVuaXR5QWRkcmVzcyIsImxlYXNlQWRkcmVzcyIsImN1c3RvbWVyQWRkcmVzcyIsImNvbnRyYWN0dHlwZSIsImZuYUNvcnBvcmF0aW9uTGlzdCIsImZuYUNvcnBvcmF0aW9uIiwibWFwIiwiaXRlbSIsImluZGV4IiwidmFsdWUiLCJpZCIsImxhYmVsIiwiY29ycG9yYXRpb25OYW1lIiwicGF5bWVudExpc3QiLCJwYXltZW50IiwiZGljTmFtZSIsInBheVR5cGVMaXN0IiwicGF5VHlwZSIsImZsb29yTGlzdCIsImZsb29yIiwiY29tbXVuaXR5aWQiLCJtYWluYmlsbENvbW11bml0eUlkIiwibWFyZ2luVG9wIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7OztBQUlBOztBQU1BOztBQUlBOzs7O0FBRUE7O0FBVUE7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7SUFHcUJBLFU7OztBQUVwQixxQkFBWUMsS0FBWixFQUFtQkMsT0FBbkIsRUFBNEI7QUFBQTs7QUFBQSx1SEFDckJELEtBRHFCLEVBQ2RDLE9BRGM7O0FBRzNCLFNBQUtDLHVCQUFMLEdBQStCLE9BQUtBLHVCQUFMLENBQTZCQyxJQUE3QixRQUEvQjtBQUNBLFNBQUtDLGNBQUwsR0FBc0IsT0FBS0EsY0FBTCxDQUFvQkQsSUFBcEIsUUFBdEI7QUFDQSxTQUFLRSxRQUFMLEdBQWdCLE9BQUtBLFFBQUwsQ0FBY0YsSUFBZCxRQUFoQjtBQUNBLFNBQUtHLGVBQUwsR0FBdUIsT0FBS0EsZUFBTCxDQUFxQkgsSUFBckIsUUFBdkI7O0FBRUEsU0FBS0ksS0FBTCxHQUFhO0FBQ1pDLGtCQUFlLEVBREg7QUFFWkMsaUJBQWMsRUFGRjtBQUdaQyxlQUFZLEVBSEE7QUFJWkMsc0JBQW1CO0FBSlAsR0FBYjtBQU1BLFNBQUtDLGtCQUFMLEdBQTBCLEtBQTFCO0FBQ0EsZUFBTUMsUUFBTixDQUFlLHNCQUFNLGlCQUFOLENBQWY7QUFmMkI7QUFnQjNCOzs7O3lDQUNzQjtBQUN0QixnQkFBTUEsUUFBTixDQUFlLHNCQUFNLGlCQUFOLENBQWY7QUFDQTs7O2lDQUVjSCxVLEVBQVk7QUFDMUIsUUFBS0ksUUFBTCxDQUFjO0FBQ2JKO0FBRGEsSUFBZDtBQUdBLE9BQUlLLFFBQVEsSUFBWjs7QUFFQSxRQUFLYix1QkFBTDtBQUNBOzs7b0NBRWlCOztBQUVmLE9BQUcsS0FBS1Usa0JBQVIsRUFBMkI7QUFDMUI7QUFDQTtB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RVpDLFdBQU07QUFGTSxLQUFELENBQVo7QUFJQSxJQXBERDtBQXFEQTs7OzJCQUdRO0FBQUEsZ0JBS0osS0FBS2YsS0FMRDtBQUFBLE9BR1BDLGFBSE8sVUFHUEEsYUFITztBQUFBLE9BSVBDLFlBSk8sVUFJUEEsWUFKTzs7O0FBT1IsVUFHQztBQUFBO0FBQUE7QUFFQyx1REFBYSxVQUFVLENBQUMsTUFBRCxFQUFRLE1BQVIsRUFBZSxNQUFmLENBQXZCLEdBRkQ7QUFHQTtBQUFBO0FBQUEsT0FBSyxPQUFPLEVBQUM2RCxXQUFVLEVBQVgsRUFBWjtBQUNFLDhEQUFlLFVBQVUsS0FBS2xFLGNBQTlCLEVBQThDLGVBQWVJLGFBQTdELEVBQTRFLFVBQVUsS0FBS0gsUUFBM0YsRUFBcUcsY0FBY0ksWUFBbkg7QUFERixLQUhBO0FBT0E7QUFBQTtBQUFBO0FBQ0MsYUFBTSxnQ0FEUDtBQUVDLGFBQU8sSUFGUjtBQUdDLDZCQUF1QixJQUh4QjtBQUlDLDhCQUF3QixJQUp6QjtBQUtDLGVBQVMsS0FBS1AsdUJBTGY7QUFNQyxZQUFNLEtBQUtLLEtBQUwsQ0FBV0ksaUJBTmxCO0FBT0csa0VBQW1CLFFBQVEsS0FBS0osS0FBTCxDQUFXRyxVQUF0QyxFQUFrRCxVQUFVLEtBQUtKLGVBQWpFLEVBQWtGLFVBQVUsS0FBS0osdUJBQWpHLEVBQTBILGNBQWNPLFlBQXhJO0FBUEg7QUFQQSxJQUhEO0FBcUJBOzs7Ozs7a0JBaExtQlYsVTs7Ozs7Ozs7K0JBQUFBLFUiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xpdXlpaGFvL0NvZGUva3ItYWRtaW4iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHtcblx0Q29tcG9uZW50LFxuXHRQcm9wVHlwZXNcbn0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtcblx0cmVkdXhGb3JtLFxuXHRzdWJtaXRGb3JtLFxuXHRjaGFuZ2UsXG5cdHJlc2V0XG59IGZyb20gJ3JlZHV4LWZvcm0nO1xuaW1wb3J0IHtcblx0QWN0aW9ucyxcblx0U3RvcmVcbn0gZnJvbSAna3IvUmVkdXgnO1xuaW1wb3J0IGh0dHAgZnJvbSAna3IvUmVkdXgvVXRpbHMvZmV0Y2gnO1xuXG5pbXBvcnQge1xuXHREaWFsb2csXG5cdFNlY3Rpb24sXG5cdEdyaWQsXG5cdE5vdGlmeSxcblx0QnJlYWRDcnVtYnMsXG5cdERvdFRpdGxlLFxuXHRUaXRsZSxcbn0gZnJvbSAna3ItdWknO1xuXG5pbXBvcnQgTmV3Q3JlYXRlRm9ybSBmcm9tICcuL05ld0NyZWF0ZUZvcm0nO1xuaW1wb3J0IENvbmZpcm1Gb3JtRGV0YWlsIGZyb20gJy4vQ29uZmlybUZvcm1EZXRhaWwnO1xuaW1wb3J0IGFsbFN0YXRlIGZyb20gXCIuLi8uLi9TdGF0ZVwiO1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEpvaW5DcmVhdGUgZXh0ZW5kcyBDb21wb25lbnQge1xuXG5cdGNvbnN0cnVjdG9yKHByb3BzLCBjb250ZXh0KSB7XG5cdFx0c3VwZXIocHJvcHMsIGNvbnRleHQpO1xuXG5cdFx0dGhpcy5vcGVuQ29uZmlybUNyZWF0ZURpYWxvZyA9IHRoaXMub3BlbkNvbmZpcm1DcmVhdGVEaWFsb2cuYmluZCh0aGlzKTtcblx0XHR0aGlzLm9uQ3JlYXRlU3VibWl0ID0gdGhpcy5vbkNyZWF0ZVN1Ym1pdC5iaW5kKHRoaXMpO1xuXHRcdHRoaXMub25DYW5jZWwgPSB0aGlzLm9uQ2FuY2VsLmJpbmQodGhpcyk7XG5cdFx0dGhpcy5vbkNvbmZyaW1TdWJtaXQgPSB0aGlzLm9uQ29uZnJpbVN1Ym1pdC5iaW5kKHRoaXMpO1xuXG5cdFx0dGhpcy5zdGF0ZSA9IHtcblx0XHRcdGluaXRpYWxWYWx1ZXM6IHt9LFxuXHRcdFx0b3B0aW9uVmFsdWVzOiB7fSxcblx0XHRcdGZvcm1WYWx1ZXM6IHt9LFxuXHRcdFx0b3BlbkNvbmZpcm1DcmVhdGU6IGZhbHNlXG5cdFx0fVxuXHRcdHRoaXMuaXNDb25maXJtU3VibWl0aW5nID0gZmFsc2U7XG5cdFx0U3RvcmUuZGlzcGF0Y2gocmVzZXQoJ2FkbWl0Q3JlYXRlRm9ybScpKTtcblx0fVxuXHRjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcblx0XHRTdG9yZS5kaXNwYXRjaChyZXNldCgnYWRtaXRDcmVhdGVGb3JtJykpO1xuXHR9XG5cblx0b25DcmVhdGVTdWJtaXQoZm9ybVZhbHVlcykge1xuXHRcdHRoaXMuc2V0U3RhdGUoe1xuXHRcdFx0Zm9ybVZhbHVlc1xuXHRcdH0pO1xuXHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cblx0XHR0aGlzLm9wZW5Db25maXJtQ3JlYXRlRGlhbG9nKCk7XG5cdH1cblxuXHRvbkNvbmZyaW1TdWJtaXQoKSB7XG5cblx0XHRcdFx0aWYodGhpcy5pc0NvbmZpcm1TdWJtaXRpbmcpe1xuXHRcdFx0XHRcdHJldHVybiA7XG5cdFx0XHRcdH1cblx0XHRcdFx0dGhpcy5pc0NvbmZpcm1TdWJtaXRpbmcgPSB0cnVlO1xuXG5cdFx0bGV0IHtcblx0XHRcdGZvcm1WYWx1ZXNcblx0XHR9ID0gdGhpcy5zdGF0ZTtcblx0XHRsZXQge1xuXHRcdFx0cGFyYW1zXG5cdFx0fSA9IHRoaXMucHJvcHM7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXHRcdFN0b3JlLmRpc3BhdGNoKEFjdGlvbnMuY2FsbEFQSSgnYWRkRmluYUNvbnRyYWN0SW50ZW50bGV0dGVyJywge30sIGZvcm1WYWx1ZXMpKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG5cdFx0XHRfdGhpcy5pc0NvbmZpcm1TdWJtaXRpbmcgPSBmYWxzZTtcblx0XHRcdE5vdGlmeS5zaG93KFt7XG5cdFx0XHRcdG1lc3NhZ2U6ICfliJvlu7rmiJDlip8nLFxuXHRcdFx0XHR0eXBlOiAnc3VjY2VzcycsXG5cdFx0XHR9XSk7XG5cdFx0XHRhbGxTdGF0ZS5hamF4TGlzdERhdGEoe2NpdHlOYW1lOicnLGNvbW11bml0eU5hbWU6JycsY3JlYXRlRGF0ZUJlZ2luOicnLGNyZWF0ZURhdGVFbmQ6JycsY3JlYXRlck5hbWU6JycsY3VzdG9tZXJOYW1lOicnLHBhZ2U6JycscGFnZVNpemU6Jycsc2FsZXJOYW1lOicnfSlcblx0XHRcdGFsbFN0YXRlLm9wZW5Ub3dBZ3JlZW1lbnQ9ZmFsc2U7XG5cdFx0XHQvLyB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpIHtcblx0XHRcdC8vIFx0d2luZG93LmxvY2F0aW9uLmhyZWYgPSBcIi4vIy9vcGVyYXRpb24vY3VzdG9tZXJNYW5hZ2UvXCIgKyBwYXJhbXMuY3VzdG9tZXJJZCArIFwiL29yZGVyL1wiICsgcGFyYW1zLm9yZGVySWQgKyBcIi9hZ3JlZW1lbnQvYWRtaXQvXCIgKyByZXNwb25zZS5jb250cmFjdElkICsgXCIvZGV0YWlsXCI7XG5cdFx0XHQvLyB9LCAwKTtcblx0XHQgICAgYWxsU3RhdGUub3Blbk9uZUFncmVlbWVudD1mYWxzZTtcblxuXG5cdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XG5cdFx0XHRcdF90aGlzLmlzQ29uZmlybVN1Ym1pdGluZyA9IGZhbHNlO1xuXHRcdFx0Tm90aWZ5LnNob3coW3tcblx0XHRcdFx0bWVzc2FnZTogZXJyLm1lc3NhZ2UsXG5cdFx0XHRcdHR5cGU6ICdkYW5nZXInLFxuXHRcdFx0fV0pO1xuXHRcdH0pO1xuXG5cdFx0dGhpcy5vcGVuQ29uZmlybUNyZWF0ZURpYWxvZygpO1xuXHR9XG5cblx0b25DYW5jZWwoKSB7XG5cdFx0Ly93aW5kb3cuaGlzdG9yeS5iYWNrKCk7XG5cdFx0YWxsU3RhdGUub3BlblRvd0FncmVlbWVudD1mYWxzZTtcblx0XHRhbGxTdGF0ZS5vcGVuT25lQWdyZWVtZW50PWZhbHNlO1xuXHR9XG5cblx0b3BlbkNvbmZpcm1DcmVhdGVEaWFsb2coKSB7XG5cdFx0dGhpcy5zZXRTdGF0ZSh7XG5cdFx0XHRvcGVuQ29uZmlybUNyZWF0ZTogIXRoaXMuc3RhdGUub3BlbkNvbmZpcm1DcmVhdGVcblx0XHR9KTtcblx0fVxuXG5cdGNvbXBvbmVudERpZE1vdW50KCkge1xuXG5cdFx0dmFyIF90aGlzID0gdGhpcztcblx0XHRjb25zdCB7XG5cdFx0XHRwYXJhbXNcblx0XHR9ID0gdGhpcy5wcm9wcztcblx0XHRsZXQgaW5pdGlhbFZhbHVlcyA9IHt9O1xuXHRcdGxldCBvcHRpb25WYWx1ZXMgPSB7fTtcblxuXHRcdFN0b3JlLmRpc3BhdGNoKEFjdGlvbnMuY2FsbEFQSSgnZmluYS1jb250cmFjdC1pbnRlbnRpb24nLCB7XG5cdFx0XHRjdXN0b21lcklkOiBwYXJhbXMuY3VzdG9tZXJJZCxcblx0XHRcdG1haW5CaWxsSWQ6IHBhcmFtcy5vcmRlcklkLFxuXHRcdFx0Y29tbXVuaXR5SWQ6IDFcblx0XHR9KSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuXG5cdFx0XHRpbml0aWFsVmFsdWVzLmNvbnRyYWN0c3RhdGUgPSAnVU5TVEFSVCc7XG5cdFx0XHRpbml0aWFsVmFsdWVzLm1haW5iaWxsaWQgPSBwYXJhbXMub3JkZXJJZDtcblxuXHRcdFx0aW5pdGlhbFZhbHVlcy5sZWFzZUNvbnRhY3QgPSByZXNwb25zZS5jdXN0b21lci5jdXN0b21lck1lbWJlcjtcblx0XHRcdGluaXRpYWxWYWx1ZXMubGVhc2VDb250YWN0dGVsID0gcmVzcG9uc2UuY3VzdG9tZXIuY3VzdG9tZXJQaG9uZTtcblx0XHRcdG9wdGlvblZhbHVlcy5jb21tdW5pdHlBZGRyZXNzID0gcmVzcG9uc2UuY3VzdG9tZXIuY29tbXVuaXR5QWRkcmVzcztcblx0XHRcdG9wdGlvblZhbHVlcy5sZWFzZUFkZHJlc3MgPSByZXNwb25zZS5jdXN0b21lci5jdXN0b21lckFkZHJlc3M7XG5cdFx0XHRpbml0aWFsVmFsdWVzLmxlYXNlQWRkcmVzcyA9IHJlc3BvbnNlLmN1c3RvbWVyLmN1c3RvbWVyQWRkcmVzcztcblxuXHRcdFx0Ly/lkIjlkIznsbvliKvvvIzmnprkuL7nsbvlnovvvIgxOuaEj+WQkeS5piwyOuWFpeS9j+WNj+iuriwzOuWinuenn+WNj+iuriw0Lue7reenn+WNj+iuriw1OuWHj+enn+WNj+iuriw26YCA56ef5Y2P6K6u77yJXG5cdFx0XHRpbml0aWFsVmFsdWVzLmNvbnRyYWN0dHlwZSA9ICdJTlRFTlRJT04nO1xuXG5cdFx0XHRvcHRpb25WYWx1ZXMuZm5hQ29ycG9yYXRpb25MaXN0ID0gcmVzcG9uc2UuZm5hQ29ycG9yYXRpb24ubWFwKGZ1bmN0aW9uKGl0ZW0sIGluZGV4KSB7XG5cdFx0XHRcdGl0ZW0udmFsdWUgPSBpdGVtLmlkO1xuXHRcdFx0XHRpdGVtLmxhYmVsID0gaXRlbS5jb3Jwb3JhdGlvbk5hbWU7XG5cdFx0XHRcdHJldHVybiBpdGVtO1xuXHRcdFx0fSk7XG5cdFx0XHRvcHRpb25WYWx1ZXMucGF5bWVudExpc3QgPSByZXNwb25zZS5wYXltZW50Lm1hcChmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuXHRcdFx0XHRpdGVtLnZhbHVlID0gaXRlbS5pZDtcblx0XHRcdFx0aXRlbS5sYWJlbCA9IGl0ZW0uZGljTmFtZTtcblx0XHRcdFx0cmV0dXJuIGl0ZW07XG5cdFx0XHR9KTtcblxuXHRcdFx0b3B0aW9uVmFsdWVzLnBheVR5cGVMaXN0ID0gcmVzcG9uc2UucGF5VHlwZS5tYXAoZnVuY3Rpb24oaXRlbSwgaW5kZXgpIHtcblx0XHRcdFx0aXRlbS52YWx1ZSA9IGl0ZW0uaWQ7XG5cdFx0XHRcdGl0ZW0ubGFiZWwgPSBpdGVtLmRpY05hbWU7XG5cdFx0XHRcdHJldHVybiBpdGVtO1xuXHRcdFx0fSk7XG5cblx0XHRcdG9wdGlvblZhbHVlcy5mbG9vckxpc3QgPSByZXNwb25zZS5jdXN0b21lci5mbG9vcjtcblx0XHRcdG9wdGlvblZhbHVlcy5jdXN0b21lck5hbWUgPSByZXNwb25zZS5jdXN0b21lci5jdXN0b21lck5hbWU7XG5cdFx0XHRvcHRpb25WYWx1ZXMubGVhc2VBZGRyZXNzID0gcmVzcG9uc2UuY3VzdG9tZXIuY3VzdG9tZXJBZGRyZXNzO1xuXHRcdFx0b3B0aW9uVmFsdWVzLmNvbW11bml0eU5hbWUgPSByZXNwb25zZS5jdXN0b21lci5jb21tdW5pdHlOYW1lO1xuXHRcdFx0b3B0aW9uVmFsdWVzLmNvbW11bml0eUlkID0gcmVzcG9uc2UuY3VzdG9tZXIuY29tbXVuaXR5aWQ7XG5cdFx0XHRvcHRpb25WYWx1ZXMubWFpbmJpbGxDb21tdW5pdHlJZCA9IHJlc3BvbnNlLm1haW5iaWxsQ29tbXVuaXR5SWQgfHwgMTtcblxuXHRcdFx0X3RoaXMuc2V0U3RhdGUoe1xuXHRcdFx0XHRpbml0aWFsVmFsdWVzLFxuXHRcdFx0XHRvcHRpb25WYWx1ZXNcblx0XHRcdH0pO1xuXG5cdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XG5cdFx0XHROb3RpZnkuc2hvdyhbe1xuXHRcdFx0XHRtZXNzYWdlOiAn5ZCO5Y+w5Ye66ZSZ6K+36IGU57O7566h55CG5ZGYJyxcblx0XHRcdFx0dHlwZTogJ2RhbmdlcicsXG5cdFx0XHR9XSk7XG5cdFx0fSk7XG5cdH1cblxuXG5cdHJlbmRlcigpIHtcblxuXHRcdGxldCB7XG5cdFx0XHRpbml0aWFsVmFsdWVzLFxuXHRcdFx0b3B0aW9uVmFsdWVzXG5cdFx0fSA9IHRoaXMuc3RhdGU7XG5cblx0XHRyZXR1cm4gKFxuXG5cblx0XHRcdDxkaXYgPlxuXG5cdFx0IFx0PEJyZWFkQ3J1bWJzIGNoaWxkcmVuPXtbJ+ezu+e7n+i/kOiQpScsJ+WuouaIt+euoeeQhicsJ+aJv+enn+WNj+iuriddfS8+XG5cdFx0XHQ8ZGl2IHN0eWxlPXt7bWFyZ2luVG9wOjEwfX0+XG5cdFx0XHRcdFx0PE5ld0NyZWF0ZUZvcm0gb25TdWJtaXQ9e3RoaXMub25DcmVhdGVTdWJtaXR9IGluaXRpYWxWYWx1ZXM9e2luaXRpYWxWYWx1ZXN9IG9uQ2FuY2VsPXt0aGlzLm9uQ2FuY2VsfSBvcHRpb25WYWx1ZXM9e29wdGlvblZhbHVlc30vPlxuXHRcdFx0PC9kaXY+XG5cblx0XHRcdDxEaWFsb2dcblx0XHRcdFx0dGl0bGU9XCLmib/np5/mhI/lkJHkuaZcIlxuXHRcdFx0XHRtb2RhbD17dHJ1ZX1cblx0XHRcdFx0YXV0b1Njcm9sbEJvZHlDb250ZW50PXt0cnVlfVxuXHRcdFx0XHRhdXRvRGV0ZWN0V2luZG93SGVpZ2h0PXt0cnVlfVxuXHRcdFx0XHRvbkNsb3NlPXt0aGlzLm9wZW5Db25maXJtQ3JlYXRlRGlhbG9nfVxuXHRcdFx0XHRvcGVuPXt0aGlzLnN0YXRlLm9wZW5Db25maXJtQ3JlYXRlfSA+XG5cdFx0XHRcdFx0XHQ8Q29uZmlybUZvcm1EZXRhaWwgZGV0YWlsPXt0aGlzLnN0YXRlLmZvcm1WYWx1ZXN9IG9uU3VibWl0PXt0aGlzLm9uQ29uZnJpbVN1Ym1pdH0gb25DYW5jZWw9e3RoaXMub3BlbkNvbmZpcm1DcmVhdGVEaWFsb2d9IG9wdGlvblZhbHVlcz17b3B0aW9uVmFsdWVzfSAvPlxuXHRcdFx0ICA8L0RpYWxvZz5cblx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59XG4iXX0=