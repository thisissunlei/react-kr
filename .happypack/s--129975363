'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _TableHeaderColumn = require('../TableHeaderColumn');

var _TableHeaderColumn2 = _interopRequireDefault(_TableHeaderColumn);

var _Checkbox = require('../../Checkbox');

var _Checkbox2 = _interopRequireDefault(_Checkbox);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableHeader = function (_React$Component) {
	_inherits(TableHeader, _React$Component);

	function TableHeader(props) {
		_classCallCheck(this, TableHeader);

		var _this = _possibleConstructorReturn(this, (TableHeader.__proto__ || Object.getPrototypeOf(TableHeader)).call(this, props));

		_this.onSort = _this.onSort.bind(_this);

		_this.renderCheckbox = _this.renderCheckbox.bind(_this);
		_this.createTableHeaderColumn = _this.createTableHeaderColumn.bind(_this);

		return _this;
	}

	_createClass(TableHeader, [{
		key: 'onSort',
		value: function onSort(name) {
			var onSort = this.props.onSort;

			if (!name) {
				return;
			}
			onSort && onSort(name);
		}
	}, {
		key: 'renderCheckbox',
		value: function renderCheckbox() {
			var _props = this.props,
			    onSelectAll = _props.onSelectAll,
			    displayCheckbox = _props.displayCheckbox,
			    onCellClick = _props.onCellClick,
			    allRowsSelected = _props.allRowsSelected;


			if (!displayCheckbox) {
				return null;
			}

			//return ( <TableHeaderColumn width={this.props.defaultValue.checkboxWidth}></TableHeaderColumn>);
			return _react2.default.createElement(
				_TableHeaderColumn2.default,
				{ width: this.props.defaultValue.checkboxWidth },
				' ',
				_react2.default.createElement(_Checkbox2.default, { onCheck: onSelectAll, checked: allRowsSelected })
			);
		}
	}, {
		key: 'createTableHeaderColumn',
		value: function createTableHeaderColumn(base, index) {
			return _react2.default.cloneElement(base, {
				key: index,
				onSort: this.onSort
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props2 = this.props,
			    className = _props2.className,
			    children = _props2.children;


			var tHeader = [];
			_react2.default.Children.forEach(children, function (child, index) {
				if (!_react2.default.isValidElement(child)) return;
				var _child$type = child.type,
				    muiName = _child$type.muiName,
				    name = _child$type.name,
				    displayName = _child$type.displayName;


				if (displayName === 'TableHeaderColumn') {
					tHeader.push(_this2.createTableHeaderColumn(child, index));
				}
			});

			return _react2.default.createElement(
				'thead',
				{ className: className },
				_react2.default.createElement(
					'tr',
					null,
					this.renderCheckbox(),
					tHeader
				)
			);
		}
	}]);

	return TableHeader;
}(_react2.default.Component);

TableHeader.displayName = 'TableHeader';
TableHeader.propTypes = {
	className: _react2.default.PropTypes.string,
	children: _react2.default.PropTypes.node,
	onSelectAll: _react2.default.PropTypes.func,
	displayCheckbox: _react2.default.PropTypes.bool,
	defaultValue: _react2.default.PropTypes.object,
	onSort: _react2.default.PropTypes.func,
	allRowsSelected: _react2.default.PropTypes.bool

};
exports.default = TableHeader;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(TableHeader, 'TableHeader', '/Users/tmac_zc/Code/kr-admin/src/Components/Table/TableHeader/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Db21wb25lbnRzL1RhYmxlL1RhYmxlSGVhZGVyL2luZGV4LmpzIl0sIm5hbWVzIjpbIlRhYmxlSGVhZGVyIiwicHJvcHMiLCJvblNvcnQiLCJiaW5kIiwicmVuZGVyQ2hlY2tib3giLCJjcmVhdGVUYWJsZUhlYWRlckNvbHVtbiIsIm5hbWUiLCJvblNlbGVjdEFsbCIsImRpc3BsYXlDaGVja2JveCIsIm9uQ2VsbENsaWNrIiwiYWxsUm93c1NlbGVjdGVkIiwiZGVmYXVsdFZhbHVlIiwiY2hlY2tib3hXaWR0aCIsImJhc2UiLCJpbmRleCIsImNsb25lRWxlbWVudCIsImtleSIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwidEhlYWRlciIsIkNoaWxkcmVuIiwiZm9yRWFjaCIsImNoaWxkIiwiaXNWYWxpZEVsZW1lbnQiLCJ0eXBlIiwibXVpTmFtZSIsImRpc3BsYXlOYW1lIiwicHVzaCIsIkNvbXBvbmVudCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsIm5vZGUiLCJmdW5jIiwiYm9vbCIsIm9iamVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7SUFFcUJBLFc7OztBQWdCcEIsc0JBQVlDLEtBQVosRUFBa0I7QUFBQTs7QUFBQSx3SEFDWEEsS0FEVzs7QUFHakIsUUFBS0MsTUFBTCxHQUFjLE1BQUtBLE1BQUwsQ0FBWUMsSUFBWixPQUFkOztBQUVBLFFBQUtDLGNBQUwsR0FBc0IsTUFBS0EsY0FBTCxDQUFvQkQsSUFBcEIsT0FBdEI7QUFDQSxRQUFLRSx1QkFBTCxHQUErQixNQUFLQSx1QkFBTCxDQUE2QkYsSUFBN0IsT0FBL0I7O0FBTmlCO0FBU2pCOzs7O3lCQUdNRyxJLEVBQUs7QUFBQSxPQUNKSixNQURJLEdBQ00sS0FBS0QsS0FEWCxDQUNKQyxNQURJOztBQUVYLE9BQUcsQ0FBQ0ksSUFBSixFQUFTO0FBQ1I7QUFDQTtBQUNESixhQUFVQSxPQUFPSSxJQUFQLENBQVY7QUFDQTs7O21DQUVlO0FBQUEsZ0JBRWlELEtBQUtMLEtBRnREO0FBQUEsT0FFVk0sV0FGVSxVQUVWQSxXQUZVO0FBQUEsT0FFRUMsZUFGRixVQUVFQSxlQUZGO0FBQUEsT0FFa0JDLFdBRmxCLFVBRWtCQSxXQUZsQjtBQUFBLE9BRThCQyxlQUY5QixVQUU4QkEsZUFGOUI7OztBQUlmLE9BQUcsQ0FBQ0YsZUFBSixFQUFvQjtBQUNuQixXQUFPLElBQVA7QUFDQTs7QUFFRDtBQUNBLFVBQVM7QUFBQTtBQUFBLE1BQW1CLE9BQU8sS0FBS1AsS0FBTCxDQUFXVSxZQUFYLENBQXdCQyxhQUFsRDtBQUFBO0FBQWtFLHdEQUFVLFNBQVNMLFdBQW5CLEVBQWdDLFNBQVNHLGVBQXpDO0FBQWxFLElBQVQ7QUFFQTs7OzBDQUd1QkcsSSxFQUFLQyxLLEVBQU07QUFDbEMsVUFBTyxnQkFBTUMsWUFBTixDQUNORixJQURNLEVBRU47QUFDQ0csU0FBSUYsS0FETDtBQUVDWixZQUFPLEtBQUtBO0FBRmIsSUFGTSxDQUFQO0FBT0E7OzsyQkFFUTtBQUFBOztBQUFBLGlCQUVtQixLQUFLRCxLQUZ4QjtBQUFBLE9BRUhnQixTQUZHLFdBRUhBLFNBRkc7QUFBQSxPQUVPQyxRQUZQLFdBRU9BLFFBRlA7OztBQUlSLE9BQUlDLFVBQVUsRUFBZDtBQUNBLG1CQUFNQyxRQUFOLENBQWVDLE9BQWYsQ0FBdUJILFFBQXZCLEVBQWlDLFVBQUNJLEtBQUQsRUFBT1IsS0FBUCxFQUFpQjtBQUNqRCxRQUFJLENBQUMsZ0JBQU1TLGNBQU4sQ0FBcUJELEtBQXJCLENBQUwsRUFBa0M7QUFEZSxzQkFFZEEsTUFBTUUsSUFGUTtBQUFBLFFBRTFDQyxPQUYwQyxlQUUxQ0EsT0FGMEM7QUFBQSxRQUVsQ25CLElBRmtDLGVBRWxDQSxJQUZrQztBQUFBLFFBRTdCb0IsV0FGNkIsZUFFN0JBLFdBRjZCOzs7QUFJakQsUUFBSUEsZ0JBQWdCLG1CQUFwQixFQUF5QztBQUN4Q1AsYUFBUVEsSUFBUixDQUFhLE9BQUt0Qix1QkFBTCxDQUE2QmlCLEtBQTdCLEVBQW1DUixLQUFuQyxDQUFiO0FBQ0E7QUFDRCxJQVBEOztBQVNBLFVBQ0M7QUFBQTtBQUFBLE1BQU8sV0FBV0csU0FBbEI7QUFDQztBQUFBO0FBQUE7QUFDZSxVQUFLYixjQUFMLEVBRGY7QUFFTWU7QUFGTjtBQURELElBREQ7QUFTQTs7OztFQW5GdUMsZ0JBQU1TLFM7O0FBQTFCNUIsVyxDQUViMEIsVyxHQUFjLGE7QUFGRDFCLFcsQ0FJYjZCLFMsR0FBWTtBQUNsQlosWUFBVyxnQkFBTWEsU0FBTixDQUFnQkMsTUFEVDtBQUVsQmIsV0FBVSxnQkFBTVksU0FBTixDQUFnQkUsSUFGUjtBQUdoQnpCLGNBQVksZ0JBQU11QixTQUFOLENBQWdCRyxJQUhaO0FBSWxCekIsa0JBQWdCLGdCQUFNc0IsU0FBTixDQUFnQkksSUFKZDtBQUtsQnZCLGVBQWEsZ0JBQU1tQixTQUFOLENBQWdCSyxNQUxYO0FBTWxCakMsU0FBTyxnQkFBTTRCLFNBQU4sQ0FBZ0JHLElBTkw7QUFPbEJ2QixrQkFBZ0IsZ0JBQU1vQixTQUFOLENBQWdCSTs7QUFQZCxDO2tCQUpDbEMsVzs7Ozs7Ozs7K0JBQUFBLFciLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3RtYWNfemMvQ29kZS9rci1hZG1pbiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVGFibGVIZWFkZXJDb2x1bW4gZnJvbSAnLi4vVGFibGVIZWFkZXJDb2x1bW4nO1xuaW1wb3J0IENoZWNrYm94IGZyb20gJy4uLy4uL0NoZWNrYm94JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGFibGVIZWFkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG5cdHN0YXRpYyBkaXNwbGF5TmFtZSA9ICdUYWJsZUhlYWRlcic7XG5cblx0c3RhdGljIHByb3BUeXBlcyA9IHtcblx0XHRjbGFzc05hbWU6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG5cdFx0Y2hpbGRyZW46IFJlYWN0LlByb3BUeXBlcy5ub2RlLFxuICAgIG9uU2VsZWN0QWxsOlJlYWN0LlByb3BUeXBlcy5mdW5jLFxuXHRcdGRpc3BsYXlDaGVja2JveDpSZWFjdC5Qcm9wVHlwZXMuYm9vbCxcblx0XHRkZWZhdWx0VmFsdWU6UmVhY3QuUHJvcFR5cGVzLm9iamVjdCxcblx0XHRvblNvcnQ6UmVhY3QuUHJvcFR5cGVzLmZ1bmMsXG5cdFx0YWxsUm93c1NlbGVjdGVkOlJlYWN0LlByb3BUeXBlcy5ib29sLFxuXG5cdH1cblxuXG5cdGNvbnN0cnVjdG9yKHByb3BzKXtcblx0XHRzdXBlcihwcm9wcyk7XG5cblx0XHR0aGlzLm9uU29ydCA9IHRoaXMub25Tb3J0LmJpbmQodGhpcyk7XG5cblx0XHR0aGlzLnJlbmRlckNoZWNrYm94ID0gdGhpcy5yZW5kZXJDaGVja2JveC5iaW5kKHRoaXMpO1xuXHRcdHRoaXMuY3JlYXRlVGFibGVIZWFkZXJDb2x1bW4gPSB0aGlzLmNyZWF0ZVRhYmxlSGVhZGVyQ29sdW1uLmJpbmQodGhpcyk7XG5cblxuXHR9XG5cblxuXHRvblNvcnQobmFtZSl7XG5cdFx0Y29uc3Qge29uU29ydH0gPSB0aGlzLnByb3BzO1xuXHRcdGlmKCFuYW1lKXtcblx0XHRcdHJldHVybiA7XG5cdFx0fVxuXHRcdG9uU29ydCAmJiBvblNvcnQobmFtZSk7XG5cdH1cblxuXHRyZW5kZXJDaGVja2JveCgpe1xuXG5cdFx0bGV0IHtvblNlbGVjdEFsbCxkaXNwbGF5Q2hlY2tib3gsb25DZWxsQ2xpY2ssYWxsUm93c1NlbGVjdGVkfSA9IHRoaXMucHJvcHM7XG5cblx0XHRpZighZGlzcGxheUNoZWNrYm94KXtcblx0XHRcdHJldHVybiBudWxsO1xuXHRcdH1cblxuXHRcdC8vcmV0dXJuICggPFRhYmxlSGVhZGVyQ29sdW1uIHdpZHRoPXt0aGlzLnByb3BzLmRlZmF1bHRWYWx1ZS5jaGVja2JveFdpZHRofT48L1RhYmxlSGVhZGVyQ29sdW1uPik7XG5cdFx0cmV0dXJuICggPFRhYmxlSGVhZGVyQ29sdW1uIHdpZHRoPXt0aGlzLnByb3BzLmRlZmF1bHRWYWx1ZS5jaGVja2JveFdpZHRofT4gPENoZWNrYm94IG9uQ2hlY2s9e29uU2VsZWN0QWxsfSBjaGVja2VkPXthbGxSb3dzU2VsZWN0ZWR9IC8+PC9UYWJsZUhlYWRlckNvbHVtbj4pO1xuXG5cdH1cblxuXG5cdGNyZWF0ZVRhYmxlSGVhZGVyQ29sdW1uKGJhc2UsaW5kZXgpe1xuXHRcdHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQoXG5cdFx0XHRiYXNlLFxuXHRcdFx0e1xuXHRcdFx0XHRrZXk6aW5kZXgsXG5cdFx0XHRcdG9uU29ydDp0aGlzLm9uU29ydFxuXHRcdFx0fVxuXHRcdCk7XG5cdH1cblxuXHRyZW5kZXIoKSB7XG5cblx0XHRsZXQge2NsYXNzTmFtZSxjaGlsZHJlbn0gPSB0aGlzLnByb3BzO1xuXG5cdFx0bGV0IHRIZWFkZXIgPSBbXTtcblx0XHRSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKGNoaWxkcmVuLCAoY2hpbGQsaW5kZXgpID0+IHtcblx0XHRcdGlmICghUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSByZXR1cm47XG5cdFx0XHRjb25zdCB7bXVpTmFtZSxuYW1lLGRpc3BsYXlOYW1lfSA9IGNoaWxkLnR5cGU7XG5cblx0XHRcdGlmIChkaXNwbGF5TmFtZSA9PT0gJ1RhYmxlSGVhZGVyQ29sdW1uJykge1xuXHRcdFx0XHR0SGVhZGVyLnB1c2godGhpcy5jcmVhdGVUYWJsZUhlYWRlckNvbHVtbihjaGlsZCxpbmRleCkpIDtcblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdHJldHVybiAoXG5cdFx0XHQ8dGhlYWQgY2xhc3NOYW1lPXtjbGFzc05hbWV9ID5cblx0XHRcdFx0PHRyPlxuICAgICAgICAgICAgICAgICAge3RoaXMucmVuZGVyQ2hlY2tib3goKX1cblx0XHRcdCAgICAgIHt0SGVhZGVyfVxuXHRcdFx0XHQ8L3RyPlxuXHRcdFx0PC90aGVhZD5cblx0XHQpO1xuXG5cdH1cbn1cbiJdfQ==