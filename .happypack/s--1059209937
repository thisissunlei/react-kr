'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Redux = require('kr/Redux');

var _reduxForm = require('redux-form');

var _krUi = require('kr-ui');

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SearchForm = function (_Component) {
	_inherits(SearchForm, _Component);

	function SearchForm(props) {
		_classCallCheck(this, SearchForm);

		var _this = _possibleConstructorReturn(this, (SearchForm.__proto__ || Object.getPrototypeOf(SearchForm)).call(this, props));

		_this.onSubmit = function (form) {
			var onSubmit = _this.props.onSubmit;

			onSubmit && onSubmit(form);
		};

		_this.openSearch = function () {
			var openSearch = _this.props.openSearch;

			openSearch && openSearch();
		};

		_this.openAdd = function () {
			var openAdd = _this.props.openAdd;

			openAdd && openAdd();
		};

		_this.onCancel = function () {
			var onCancel = _this.props.onCancel;

			onCancel && onCancel();
		};

		return _this;
	}

	_createClass(SearchForm, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    error = _props.error,
			    handleSubmit = _props.handleSubmit,
			    pristine = _props.pristine,
			    reset = _props.reset;


			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(_krUi.Button, { label: '\u6DFB\u52A0\u56DE\u6B3E', onTouchTap: this.openAdd }),
				_react2.default.createElement('span', { className: 'u-span' }),
				_react2.default.createElement(_krUi.Button, { label: '\u6279\u91CF\u5BA1\u6838' }),
				_react2.default.createElement('span', { className: 'u-high-search', onTouchTap: this.openSearch }),
				_react2.default.createElement(_krUi.SearchForms, { onSubmit: this.onSubmit, placeholder: '\u8BF7\u8F93\u5165\u5BA2\u6237\u540D\u79F0', inputName: 'todo' })
			);
		}
	}]);

	return SearchForm;
}(_react.Component);

SearchForm.PropTypes = {
	onSubmit: _react2.default.PropTypes.func,
	onCancel: _react2.default.PropTypes.func
};

var _default = (0, _reduxForm.reduxForm)({
	form: 'searchForm1'
})(SearchForm);

exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(SearchForm, 'SearchForm', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Finance/Manage/Audit/ToDoAudit/SearchForm.js');

	__REACT_HOT_LOADER__.register(_default, 'default', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Finance/Manage/Audit/ToDoAudit/SearchForm.js');
}();

;