'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _krUi = require('kr-ui');

var _dateformat = require('dateformat');

var _dateformat2 = _interopRequireDefault(_dateformat);

var _Redux = require('kr/Redux');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdmitDetail = function (_Component) {
	_inherits(AdmitDetail, _Component);

	function AdmitDetail(props, context) {
		_classCallCheck(this, AdmitDetail);

		var _this2 = _possibleConstructorReturn(this, (AdmitDetail.__proto__ || Object.getPrototypeOf(AdmitDetail)).call(this, props, context));

		_this2.addClick = function () {
			var _this2$state = _this2.state,
			    oldBasicStationVos = _this2$state.oldBasicStationVos,
			    newBasicStationVos = _this2$state.newBasicStationVos,
			    openMinus = _this2$state.openMinus,
			    openAdd = _this2$state.openAdd;

			_this2.setState({
				newBasicStationVos: oldBasicStationVos,
				openMinus: true,
				openAdd: false
			});
		};

		_this2.minusClick = function () {
			var _this2$state2 = _this2.state,
			    oldBasicStationVos = _this2$state2.oldBasicStationVos,
			    newBasicStationVos = _this2$state2.newBasicStationVos,
			    openAdd = _this2$state2.openAdd,
			    openMinus = _this2$state2.openMinus;

			_this2.setState({
				newBasicStationVos: oldBasicStationVos.slice(0, 5),
				openAdd: true,
				openMinus: false
			});
		};

		_this2.onCancel = function () {
			var onCancel = _this2.props.onCancel;

			onCancel && onCancel();
		};

		_this2.print = function () {
			var params = _this2.props.params;
			var url = './#/operation/customerManage/' + params.customerId + '/order/' + params.orderId + '/agreement/admit/' + params.id + '/print';
			var newWindow = window.open(url);
		};

		_this2.addRender = function () {
			var _this = _this2;
			var add = '';
			add = _react2.default.createElement(
				'div',
				{ onClick: _this.addClick, className: 'arrow-wrap' },
				_react2.default.createElement(
					'span',
					{ className: 'arrow-open' },
					'\u5C55\u5F00'
				),
				_react2.default.createElement('span', { className: 'arrow-pic' })
			);
			return add;
		};

		_this2.minusRender = function () {
			var _this = _this2;
			var minus = '';
			minus = _react2.default.createElement(
				'div',
				{ onClick: _this.minusClick, className: 'arrow-wrap' },
				_react2.default.createElement(
					'span',
					{ className: 'arrow-open' },
					'\u6536\u8D77'
				),
				_react2.default.createElement('span', { className: 'arrow-pic-do' })
			);
			return minus;
		};

		_this2.state = {
			isLoading: true,
			basic: {
				payment: {},
				stationVos: []
			},
			oldBasicStationVos: [],
			openAdd: false,
			openMinus: false,
			newBasicStationVos: []
		};

		return _this2;
	}

	_createClass(AdmitDetail, [{
		key: 'componentWillMount',
		value: function componentWillMount() {}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _this = this;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('showFinaContractIntentletter', {
				id: this.props.params.id
			})).then(function (response) {
				_this.setState({
					basic: response,
					isLoading: false,
					oldBasicStationVos: response.stationVos
				}, function () {
					var _this$state = _this.state,
					    newBasicStationVos = _this$state.newBasicStationVos,
					    oldBasicStationVos = _this$state.oldBasicStationVos,
					    openAdd = _this$state.openAdd;

					if (oldBasicStationVos && oldBasicStationVos.length > 5) {
						_this.setState({
							newBasicStationVos: oldBasicStationVos.slice(0, 5),
							openAdd: true
						});
					}
					if (oldBasicStationVos && oldBasicStationVos.length <= 5) {
						_this.setState({
							newBasicStationVos: oldBasicStationVos,
							openAdd: false
						});
					}
				});
			}).catch(function (err) {
				_krUi.Notify.show([{
					message: err.message,
					type: 'danger'
				}]);
			});
		}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps() {
			var _state = this.state,
			    newBasicStationVos = _state.newBasicStationVos,
			    oldBasicStationVos = _state.oldBasicStationVos,
			    openAdd = _state.openAdd;

			if (oldBasicStationVos && oldBasicStationVos.length > 5) {
				this.setState({
					newBasicStationVos: oldBasicStationVos.slice(0, 5),
					openAdd: true
				});
			}
			if (oldBasicStationVos && oldBasicStationVos.length <= 5) {
				this.setState({
					newBasicStationVos: oldBasicStationVos,
					openAdd: false
				});
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var isLoading = this.state.isLoading;


			if (isLoading) {
				return _react2.default.createElement(_krUi.Loading, null);
			}

			var orderBaseInfo = {};
			var contractList = [];

			function onCancel() {
				location.href = "/#/operation/customerManage/" + params.customerId + "/order/" + params.orderId + "/detail";
			}
			var params = this.props.params;

			function getOrderUrl() {
				return './#/operation/customerManage/' + params.customerId + '/order/' + params.orderId + '/detail';
			}

			var _state2 = this.state,
			    basic = _state2.basic,
			    newBasicStationVos = _state2.newBasicStationVos,
			    openAdd = _state2.openAdd,
			    openMinus = _state2.openMinus;

			var dicName = void 0;

			if (basic.payment) {
				dicName = basic.payment.dicName;
			} else {
				dicName = '';
			}
			var content = {
				position: 'relative',
				width: '100%',
				margin: '0 auto',
				fontSize: 14
			};
			var info = {
				paddingBottom: 10
			};

			var BasicRender = function BasicRender(props) {

				return _react2.default.createElement(
					'div',
					{ className: 'content', style: content },
					_react2.default.createElement(_krUi.Title, { value: '\u627F\u79DF\u610F\u5411\u4E66\u8BE6\u60C5\u9875_\u8D22\u52A1\u7BA1\u7406' }),
					_react2.default.createElement('div', { className: 'customer-close', onClick: _this3.onCancel }),
					_react2.default.createElement(
						'span',
						{ className: 'content-title' },
						'\u627F\u79DF\u534F\u8BAE\u4E66\u8BE6\u60C5\u9875'
					),
					_react2.default.createElement(
						_krUi.DotTitle,
						{ title: '\u79DF\u8D41\u660E\u7EC6' },
						_react2.default.createElement(
							_krUi.Table,
							{ displayCheckbox: false },
							_react2.default.createElement(
								_krUi.TableHeader,
								null,
								_react2.default.createElement(
									_krUi.TableHeaderColumn,
									null,
									'\u7C7B\u522B'
								),
								_react2.default.createElement(
									_krUi.TableHeaderColumn,
									null,
									'\u7F16\u53F7\uFF0F\u540D\u79F0'
								),
								_react2.default.createElement(
									_krUi.TableHeaderColumn,
									null,
									'\u8D77\u59CB\u65E5\u671F'
								),
								_react2.default.createElement(
									_krUi.TableHeaderColumn,
									null,
									'\u7ED3\u675F\u65E5\u671F'
								)
							),
							_react2.default.createElement(
								_krUi.TableBody,
								null,
								newBasicStationVos && newBasicStationVos.map(function (item, index) {
									return _react2.default.createElement(
										_krUi.TableRow,
										{ key: index },
										_react2.default.createElement(
											_krUi.TableRowColumn,
											null,
											item.stationType == 1 ? '工位' : '会议室'
										),
										_react2.default.createElement(
											_krUi.TableRowColumn,
											null,
											item.stationName
										),
										_react2.default.createElement(
											_krUi.TableRowColumn,
											null,
											_react2.default.createElement(_krUi.KrDate, { value: item.leaseBeginDate })
										),
										_react2.default.createElement(
											_krUi.TableRowColumn,
											null,
											_react2.default.createElement(_krUi.KrDate, { value: item.leaseEndDate })
										)
									);
								})
							)
						),
						openAdd && _this3.addRender(),
						openMinus && _this3.minusRender()
					),
					_react2.default.createElement(
						'div',
						{ className: 'content-info', style: info },
						_react2.default.createElement(
							'div',
							{ className: 'detail-first' },
							_react2.default.createElement(_krUi.KrField, { component: 'labelText', grid: 1 / 2, label: '\u51FA\u79DF\u65B9\uFF1A', value: basic.lessorName, requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { component: 'labelText', grid: 1 / 2, left: 60, label: '\u5730\u5740\uFF1A', value: basic.lessorAddress, defaultValue: '\u65E0', requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { component: 'labelText', grid: 1 / 2, label: '\u8054\u7CFB\u4EBA\uFF1A', value: basic.lessorContactName, defaultValue: '\u65E0', requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { component: 'labelText', grid: 1 / 2, left: 60, label: '\u7535\u8BDD\uFF1A', value: basic.lessorContacttel, defaultValue: '\u65E0', requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { component: 'labelText', grid: 1 / 2, label: '\u627F\u79DF\u65B9\uFF1A', value: basic.customerName, defaultValue: '\u65E0', requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { component: 'labelText', grid: 1 / 2, left: 60, label: '\u5730\u5740\uFF1A', value: basic.leaseAddress, defaultValue: '\u65E0', requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { component: 'labelText', grid: 1 / 2, label: '\u8054\u7CFB\u4EBA\uFF1A', value: basic.leaseContact, defaultValue: '\u65E0', requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { component: 'labelText', grid: 1 / 2, left: 60, label: '\u7535\u8BDD\uFF1A', value: basic.leaseContacttel, defaultValue: '\u65E0', requireBlue: true, toolTrue: 'true' })
						),
						_react2.default.createElement(_krUi.SplitLine, { style: { display: 'none' } }),
						_react2.default.createElement(
							'div',
							{ className: 'detail-first' },
							_react2.default.createElement(_krUi.KrField, { component: 'labelText', grid: 1 / 2, label: '\u6240\u5C5E\u793E\u533A\uFF1A', value: basic.communityName, defaultValue: '\u65E0', requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { component: 'labelText', grid: 1 / 2, left: 60, label: '\u6240\u5C5E\u697C\u5C42\uFF1A', value: basic.wherefloor, defaultValue: '\u65E0', requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { label: '\u5B9A\u91D1\u603B\u989D\uFF1A', grid: 1 / 2, component: 'labelText', value: basic.totaldownpayment, defaultValue: '0', requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { label: '\u7B7E\u7F72\u65E5\u671F\uFF1A', grid: 1 / 2, left: 60, component: 'labelText', type: 'date', value: basic.signdate, defaultValue: '0', requireBlue: true }),
							_react2.default.createElement(_krUi.KrField, { label: '\u5408\u540C\u7F16\u53F7\uFF1A', grid: 1 / 2, component: 'labelText', value: basic.contractcode, defaultValue: '\u65E0', requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { label: '\u4ED8\u6B3E\u65B9\u5F0F\uFF1A', left: 60, grid: 1 / 2, component: 'labelText', value: dicName, defaultValue: '\u65E0', requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { label: '\u79DF\u8D41\u5DE5\u4F4D\uFF1A', grid: 1 / 2, component: 'labelText', value: basic.stationnum, defaultValue: '0', requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { label: '\u79DF\u8D41\u4F1A\u8BAE\u5BA4\uFF1A', left: 60, grid: 1 / 2, component: 'labelText', value: basic.boardroomnum, defaultValue: '0', requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { label: '\u79DF\u8D41\u671F\u9650\uFF1A', grid: 1 / 2, component: 'labelText', value: (0, _dateformat2.default)(basic.leaseBegindate, "yyyy-mm-dd") + '\u2014\u2014' + (0, _dateformat2.default)(basic.leaseEnddate, "yyyy-mm-dd"), defaultValue: '0', requireBlue: true }),
							_react2.default.createElement(_krUi.KrField, { label: '\u4FDD\u7559\u5929\u6570\uFF1A', grid: 1 / 2, component: 'labelText', left: 60, value: basic.templockday, defaultValue: '0', requireBlue: true, toolTrue: 'true' }),
							_react2.default.createElement(_krUi.KrField, { label: '\u5907\u6CE8\uFF1A', grid: 1 / 1, component: 'labelText', value: basic.contractmark, defaultValue: '\u65E0', requireBlue: true, inline: false }),
							_react2.default.createElement(
								_krUi.KrField,
								{ component: 'group', label: '\u4E0A\u4F20\u9644\u4EF6\uFF1A', requireBlue: true },
								basic.contractFileList && basic.contractFileList.map(function (item, index) {
									return _react2.default.createElement(_krUi.Button, { label: item.fileName, type: 'link', href: item.fileUrl, key: index });
								})
							)
						)
					)
				);
			};

			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(_krUi.BreadCrumbs, { children: ['社区运营',, '合同详情'] }),
				_react2.default.createElement(BasicRender, null),
				_react2.default.createElement(
					_krUi.Grid,
					{ style: { marginTop: 5, marginBottom: 50 } },
					_react2.default.createElement(
						_krUi.Row,
						null,
						_react2.default.createElement(_krUi.Col, { md: 5, align: 'center' }),
						_react2.default.createElement(
							_krUi.Col,
							{ md: 2, align: 'center' },
							' ',
							_react2.default.createElement(_krUi.Button, { label: '\u6253\u5370', backgroundColor: '#499df1', width: 100, height: 40, fontSize: 16, onClick: this.print })
						),
						_react2.default.createElement(_krUi.Col, { md: 5, align: 'center' })
					)
				)
			);
		}
	}]);

	return AdmitDetail;
}(_react.Component);

exports.default = AdmitDetail;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(AdmitDetail, 'AdmitDetail', '/Users/liuyihao/Code/kr-admin/src/Containers/Operation/CustomerManage/AgreementList/Admit/Detail/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,