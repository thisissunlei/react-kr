{"version":3,"sources":["src/Components/DatePicker/Dialog/Dialog.js"],"names":["TransitionItem","state","style","clearTimeout","enterTimeout","leaveTimeout","callback","componentWillAppear","spacing","context","muiTheme","baseTheme","setState","opacity","transform","desktopKeylineIncrement","setTimeout","props","children","other","prepareStyles","propTypes","node","object","contextTypes","isRequired","getStyles","autoScrollBodyContent","open","palette","dialog","zIndex","gutter","desktopGutter","borderScroll","borderColor","root","position","boxSizing","WebkitTapHighlightColor","top","left","width","height","transition","easeOut","content","maxWidth","margin","actionsContainer","padding","textAlign","marginTop","borderTop","overlay","dialogOverlay","title","color","textColor","fontSize","titleFontSize","lineHeight","fontWeight","marginBottom","borderBottom","body","bodyFontSize","bodyColor","overflowY","DialogInline","handleTouchTapOverlay","requestClose","handleKeyUp","event","handleResize","positionDialog","actions","autoDetectWindowHeight","bodyStyle","repositionOnUpdate","clientHeight","window","innerHeight","document","documentElement","container","findDOMNode","dialogWindow","refs","dialogContent","minPaddingTop","dialogWindowHeight","offsetHeight","paddingTop","styles","maxDialogContentHeight","previousSibling","Children","count","nextSibling","maxHeight","buttonClicked","modal","onRequestClose","actionsContainerClassName","actionsContainerStyle","bodyClassName","className","contentClassName","contentStyle","overlayClassName","overlayStyle","titleClassName","titleStyle","toArray","titleElement","isValidElement","cloneElement","string","bool","func","Dialog","renderLayer","defaultProps"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;IAEMA,c;;;;;;;;;;;;;;sMAUJC,K,GAAQ;AACNC,aAAO;AADD,K;;;;;2CAIe;AACrBC,mBAAa,KAAKC,YAAlB;AACAD,mBAAa,KAAKE,YAAlB;AACD;;;uCAEkBC,Q,EAAU;AAC3B,WAAKC,mBAAL,CAAyBD,QAAzB;AACD;;;wCAEmBA,Q,EAAU;AAC5B,UAAME,UAAU,KAAKC,OAAL,CAAaC,QAAb,CAAsBC,SAAtB,CAAgCH,OAAhD;;AAEA,WAAKI,QAAL,CAAc;AACZV,eAAO;AACLW,mBAAS,CADJ;AAELC,uCAA2BN,QAAQO,uBAAnC;AAFK;AADK,OAAd;;AAOA,WAAKX,YAAL,GAAoBY,WAAWV,QAAX,EAAqB,GAArB,CAApB,CAV4B,CAUmB;AAChD;;;uCAEkBA,Q,EAAU;AAC3B,WAAKM,QAAL,CAAc;AACZV,eAAO;AACLW,mBAAS,CADJ;AAELC,qBAAW;AAFN;AADK,OAAd;;AAOA,WAAKT,YAAL,GAAoBW,WAAWV,QAAX,EAAqB,GAArB,CAApB,CAR2B,CAQoB;AAChD;;;6BAEQ;AAAA,mBAKH,KAAKW,KALF;AAAA,UAELf,KAFK,UAELA,KAFK;AAAA,UAGLgB,QAHK,UAGLA,QAHK;AAAA,UAIFC,KAJE;;AAAA,UAOAC,aAPA,GAOiB,KAAKX,OAAL,CAAaC,QAP9B,CAOAU,aAPA;;;AASP,aACE;AAAA;AAAA,qBAASD,KAAT,IAAgB,OAAOC,cAAc,4BAAc,EAAd,EAAkB,KAAKnB,KAAL,CAAWC,KAA7B,EAAoCA,KAApC,CAAd,CAAvB;AACGgB;AADH,OADF;AAKD;;;;;;AA7DGlB,c,CACGqB,S,GAAY;AACjBH,YAAU,iBAAUI,IADH;AAEjBpB,SAAO,iBAAUqB;AAFA,C;AADfvB,c,CAMGwB,Y,GAAe;AACpBd,YAAU,iBAAUa,MAAV,CAAiBE;AADP,C;;;AA0DxB,SAASC,SAAT,CAAmBT,KAAnB,EAA0BR,OAA1B,EAAmC;AAAA,MAE/BkB,qBAF+B,GAI7BV,KAJ6B,CAE/BU,qBAF+B;AAAA,MAG/BC,IAH+B,GAI7BX,KAJ6B,CAG/BW,IAH+B;AAAA,0BAa7BnB,QAAQC,QAbqB;AAAA,gDAO/BC,SAP+B;AAAA,MAQ7BH,OAR6B,yBAQ7BA,OAR6B;AAAA,MAS7BqB,OAT6B,yBAS7BA,OAT6B;AAAA,MAW/BC,MAX+B,qBAW/BA,MAX+B;AAAA,MAY/BC,MAZ+B,qBAY/BA,MAZ+B;;;AAejC,MAAMC,SAASxB,QAAQyB,aAAvB;AACA,MAAMC,8BAA4BL,QAAQM,WAA1C;;AAEA,SAAO;AACLC,UAAM;AACJC,gBAAU,OADN;AAEJC,iBAAW,YAFP;AAGJC,+BAAyB,eAHrB,EAGsC;AAC1CR,cAAQA,OAAOD,MAJX;AAKJU,WAAK,CALD;AAMJC,YAAMb,OAAO,CAAP,GAAW,CAAC,KANd;AAOJc,aAAO,MAPH;AAQJC,cAAQ,MARJ;AASJC,kBAAYhB,OACV,sBAAYiB,OAAZ,CAAoB,KAApB,EAA2B,MAA3B,EAAmC,KAAnC,CADU,GAEV,sBAAYA,OAAZ,CAAoB,KAApB,EAA2B,MAA3B,EAAmC,OAAnC;AAXE,KADD;AAcLC,aAAS;AACPR,iBAAW,YADJ;AAEPC,+BAAyB,eAFlB,EAEmC;AAC1CK,kBAAY,sBAAYC,OAAZ,EAHL;AAIPR,gBAAU,UAJH;AAKPK,aAAO,KALA;AAMPK,gBAAUvC,QAAQO,uBAAR,GAAkC,EANrC;AAOPiC,cAAQ,QAPD;AAQPjB,cAAQA,OAAOD;AARR,KAdJ;AAwBLmB,sBAAkB;AAChBX,iBAAW,YADK;AAEhBC,+BAAyB,eAFT,EAE0B;AAC1CW,eAAS,CAHO;AAIhBR,aAAO,MAJS;AAKhBS,iBAAW,OALK;AAMhBC,iBAAWzB,wBAAwB,CAAC,CAAzB,GAA6B,CANxB;AAOhB0B,iBAAW1B,wBAAwBO,YAAxB,GAAuC;AAPlC,KAxBb;AAiCLoB,aAAS;AACPvB,cAAQA,OAAOwB;AADR,KAjCJ;AAoCLC,WAAO;AACLR,cAAQ,CADH;AAELE,eAAYlB,MAAZ,WAAwBA,MAAxB,gBAAyCA,MAAzC,OAFK;AAGLyB,aAAO5B,QAAQ6B,SAHV;AAILC,gBAAU7B,OAAO8B,aAJZ;AAKLC,kBAAY,MALP;AAMLC,kBAAY,GANP;AAOLC,oBAAcpC,wBAAwB,CAAC,CAAzB,GAA6B,CAPtC;AAQLqC,oBAAcrC,wBAAwBO,YAAxB,GAAuC;AARhD,KApCF;AA8CL+B,UAAM;AACJN,gBAAU7B,OAAOoC,YADb;AAEJT,aAAO3B,OAAOqC,SAFV;AAGJjB,gBAAYjC,MAAMuC,KAAN,GAAc,CAAd,GAAkBxB,MAA9B,YAA0CA,MAA1C,WAAsDA,MAAtD,OAHI;AAIJM,iBAAW,YAJP;AAKJ8B,iBAAWzC,wBAAwB,MAAxB,GAAiC;AALxC;AA9CD,GAAP;AAsDD;;IAEK0C,Y;;;;;;;;;;;;;;yMAkGJC,qB,GAAwB,YAAM;AAC5B,aAAKC,YAAL,CAAkB,KAAlB;AACD,K,SAEDC,W,GAAc,UAACC,KAAD,EAAW;AACvB,UAAI,uBAAQA,KAAR,MAAmB,KAAvB,EAA8B;AAC5B,eAAKF,YAAL,CAAkB,KAAlB;AACD;AACF,K,SAEDG,Y,GAAe,YAAM;AACnB,aAAKC,cAAL;AACD,K;;;;;wCAjFmB;AAClB,WAAKA,cAAL;AACD;;;yCAEoB;AACnB,WAAKA,cAAL;AACD;;;qCAEgB;AAAA,oBASX,KAAK1D,KATM;AAAA,UAEb2D,OAFa,WAEbA,OAFa;AAAA,UAGbC,sBAHa,WAGbA,sBAHa;AAAA,UAIblD,qBAJa,WAIbA,qBAJa;AAAA,UAKbmD,SALa,WAKbA,SALa;AAAA,UAMblD,IANa,WAMbA,IANa;AAAA,UAObmD,kBAPa,WAObA,kBAPa;AAAA,UAQbvB,KARa,WAQbA,KARa;;;AAWf,UAAI,CAAC5B,IAAL,EAAW;AACT;AACD;;AAED,UAAMoD,eAAeC,OAAOC,WAAP,IAAsBC,SAASC,eAAT,CAAyBJ,YAA/C,IAA+DG,SAASlB,IAAT,CAAce,YAAlG;AACA,UAAMK,YAAY,mBAASC,WAAT,CAAqB,IAArB,CAAlB;AACA,UAAMC,eAAe,mBAASD,WAAT,CAAqB,KAAKE,IAAL,CAAUD,YAA/B,CAArB;AACA,UAAME,gBAAgB,mBAASH,WAAT,CAAqB,KAAKE,IAAL,CAAUC,aAA/B,CAAtB;AACA,UAAMC,gBAAgB,EAAtB;;AAEA;AACAH,mBAAarF,KAAb,CAAmByC,MAAnB,GAA4B,EAA5B;AACA8C,oBAAcvF,KAAd,CAAoByC,MAApB,GAA6B,EAA7B;;AAEA,UAAMgD,qBAAqBJ,aAAaK,YAAxC;AACA,UAAIC,aAAc,CAACb,eAAeW,kBAAhB,IAAsC,CAAvC,GAA4C,EAA7D;AACA,UAAIE,aAAaH,aAAjB,EAAgCG,aAAaH,aAAb;;AAEhC;AACA;AACA,UAAIX,sBAAsB,CAACM,UAAUnF,KAAV,CAAgB2F,UAA3C,EAAuD;AACrDR,kBAAUnF,KAAV,CAAgB2F,UAAhB,GAAgCA,UAAhC;AACD;;AAED;AACA,UAAIhB,0BAA0BlD,qBAA9B,EAAqD;AACnD,YAAMmE,SAASpE,UAAU,KAAKT,KAAf,EAAsB,KAAKR,OAA3B,CAAf;AACAqF,eAAO7B,IAAP,GAAc,4BAAc6B,OAAO7B,IAArB,EAA2Ba,SAA3B,CAAd;AACA,YAAIiB,yBAAyBf,eAAe,IAAI,EAAhD;;AAEA,YAAIxB,KAAJ,EAAWuC,0BAA0BN,cAAcO,eAAd,CAA8BJ,YAAxD;;AAEX,YAAI,gBAAMK,QAAN,CAAeC,KAAf,CAAqBtB,OAArB,CAAJ,EAAmC;AACjCmB,oCAA0BN,cAAcU,WAAd,CAA0BP,YAApD;AACD;;AAEDH,sBAAcvF,KAAd,CAAoBkG,SAApB,GAAmCL,sBAAnC;AACD;AACF;;;iCAEYM,a,EAAe;AAC1B,UAAI,CAACA,aAAD,IAAkB,KAAKpF,KAAL,CAAWqF,KAAjC,EAAwC;AACtC;AACD;;AAED,UAAI,KAAKrF,KAAL,CAAWsF,cAAf,EAA+B;AAC7B,aAAKtF,KAAL,CAAWsF,cAAX,CAA0B,CAAC,CAACF,aAA5B;AACD;AACF;;;6BAgBQ;AAAA,oBAkBH,KAAKpF,KAlBF;AAAA,UAEL2D,OAFK,WAELA,OAFK;AAAA,UAGL4B,yBAHK,WAGLA,yBAHK;AAAA,UAILC,qBAJK,WAILA,qBAJK;AAAA,UAKLC,aALK,WAKLA,aALK;AAAA,UAML5B,SANK,WAMLA,SANK;AAAA,UAOL5D,QAPK,WAOLA,QAPK;AAAA,UAQLyF,SARK,WAQLA,SARK;AAAA,UASLC,gBATK,WASLA,gBATK;AAAA,UAULC,YAVK,WAULA,YAVK;AAAA,UAWLC,gBAXK,WAWLA,gBAXK;AAAA,UAYLC,YAZK,WAYLA,YAZK;AAAA,UAaLnF,IAbK,WAaLA,IAbK;AAAA,UAcLoF,cAdK,WAcLA,cAdK;AAAA,UAeLC,UAfK,WAeLA,UAfK;AAAA,UAgBLzD,KAhBK,WAgBLA,KAhBK;AAAA,UAiBLtD,KAjBK,WAiBLA,KAjBK;AAAA,UAoBAkB,aApBA,GAoBiB,KAAKX,OAAL,CAAaC,QApB9B,CAoBAU,aApBA;;AAqBP,UAAM0E,SAASpE,UAAU,KAAKT,KAAf,EAAsB,KAAKR,OAA3B,CAAf;;AAEAqF,aAAO1D,IAAP,GAAc,4BAAc0D,OAAO1D,IAArB,EAA2BlC,KAA3B,CAAd;AACA4F,aAAOhD,OAAP,GAAiB,4BAAcgD,OAAOhD,OAArB,EAA8B+D,YAA9B,CAAjB;AACAf,aAAO7B,IAAP,GAAc,4BAAc6B,OAAO7B,IAArB,EAA2Ba,SAA3B,CAAd;AACAgB,aAAO7C,gBAAP,GAA0B,4BAAc6C,OAAO7C,gBAArB,EAAuCwD,qBAAvC,CAA1B;AACAX,aAAOxC,OAAP,GAAiB,4BAAcwC,OAAOxC,OAArB,EAA8ByD,YAA9B,CAAjB;AACAjB,aAAOtC,KAAP,GAAe,4BAAcsC,OAAOtC,KAArB,EAA4ByD,UAA5B,CAAf;;AAEA,UAAMhE,mBAAmB,gBAAMgD,QAAN,CAAeC,KAAf,CAAqBtB,OAArB,IAAgC,CAAhC,IACvB;AAAA;AAAA,UAAK,WAAW4B,yBAAhB,EAA2C,OAAOpF,cAAc0E,OAAO7C,gBAArB,CAAlD;AACG,wBAAMgD,QAAN,CAAeiB,OAAf,CAAuBtC,OAAvB;AADH,OADF;;AAMA,UAAIuC,eAAe3D,KAAnB;AACA,UAAI,gBAAM4D,cAAN,CAAqB5D,KAArB,CAAJ,EAAiC;AAC/B2D,uBAAe,gBAAME,YAAN,CAAmB7D,KAAnB,EAA0B;AACvCmD,qBAAWnD,MAAMvC,KAAN,CAAY0F,SAAZ,IAAyBK,cADG;AAEvC9G,iBAAOkB,cAAc,4BAAc0E,OAAOtC,KAArB,EAA4BA,MAAMvC,KAAN,CAAYf,KAAxC,CAAd;AAFgC,SAA1B,CAAf;AAID,OALD,MAKO,IAAI,OAAOsD,KAAP,KAAiB,QAArB,EAA+B;AACpC2D,uBACE;AAAA;AAAA,YAAI,WAAWH,cAAf,EAA+B,OAAO5F,cAAc0E,OAAOtC,KAArB,CAAtC;AACGA;AADH,SADF;AAKD;;AAED,aACE;AAAA;AAAA,UAAK,WAAWmD,SAAhB,EAA2B,OAAOvF,cAAc0E,OAAO1D,IAArB,CAAlC;AACGR,gBACC;AACE,kBAAO,QADT;AAEE,mBAAS,KAAK4C,WAFhB;AAGE,oBAAU,KAAKE;AAHjB,UAFJ;AAQE;AAAA;AAAA;AACE,uBAAU,KADZ;AAEE,iBAAI,cAFN;AAGE,8BAAkB,IAHpB;AAIE,qCAAyB,GAJ3B;AAKE,6BAAiB,IALnB;AAME,oCAAwB;AAN1B;AAQG9C,kBACC;AAAC,0BAAD;AAAA;AACE,yBAAWgF,gBADb;AAEE,qBAAOd,OAAOhD;AAFhB;AAIE;AAAA;AAAA,gBAAO,QAAQ,CAAf;AACGqE,0BADH;AAEE;AAAA;AAAA;AACE,uBAAI,eADN;AAEE,6BAAWT,aAFb;AAGE,yBAAOtF,cAAc0E,OAAO7B,IAArB;AAHT;AAKG/C;AALH,eAFF;AASG+B;AATH;AAJF;AATJ,SARF;AAmCE;AACE,gBAAMrB,IADR;AAEE,qBAAWkF,gBAFb;AAGE,iBAAOhB,OAAOxC,OAHhB;AAIE,sBAAY,KAAKgB;AAJnB;AAnCF,OADF;AA4CD;;;;;;AA9MGD,Y,CACGhD,S,GAAY;AACjBuD,WAAS,iBAAUtD,IADF;AAEjBkF,6BAA2B,iBAAUc,MAFpB;AAGjBb,yBAAuB,iBAAUlF,MAHhB;AAIjBsD,0BAAwB,iBAAU0C,IAJjB;AAKjB5F,yBAAuB,iBAAU4F,IALhB;AAMjBb,iBAAe,iBAAUY,MANR;AAOjBxC,aAAW,iBAAUvD,MAPJ;AAQjBL,YAAU,iBAAUI,IARH;AASjBqF,aAAW,iBAAUW,MATJ;AAUjBV,oBAAkB,iBAAUU,MAVX;AAWjBT,gBAAc,iBAAUtF,MAXP;AAYjB+E,SAAO,iBAAUiB,IAZA;AAajBhB,kBAAgB,iBAAUiB,IAbT;AAcjB5F,QAAM,iBAAU2F,IAAV,CAAe9F,UAdJ;AAejBqF,oBAAkB,iBAAUQ,MAfX;AAgBjBP,gBAAc,iBAAUxF,MAhBP;AAiBjBwD,sBAAoB,iBAAUwC,IAjBb;AAkBjBrH,SAAO,iBAAUqB,MAlBA;AAmBjBiC,SAAO,iBAAUlC,IAnBA;AAoBjB0F,kBAAgB,iBAAUM,MApBT;AAqBjBL,cAAY,iBAAU1F;AArBL,C;AADf8C,Y,CAyBG7C,Y,GAAe;AACpBd,YAAU,iBAAUa,MAAV,CAAiBE;AADP,C;;IAwLlBgG,M;;;;;;;;;;;;;;6LAwGJC,W,GAAc,YAAM;AAClB,aACE,8BAAC,YAAD,EAAkB,OAAKzG,KAAvB,CADF;AAGD,K;;;;;6BAEQ;AACP,aACE,yDAAe,QAAQ,KAAKyG,WAA5B,EAAyC,MAAM,IAA/C,EAAqD,sBAAsB,KAA3E,GADF;AAGD;;;;;;AAlHGD,M,CACGpG,S,GAAY;AACjB;;;;AAIAuD,WAAS,iBAAUtD,IALF;AAMjB;;;AAGAkF,6BAA2B,iBAAUc,MATpB;AAUjB;;;AAGAb,yBAAuB,iBAAUlF,MAbhB;AAcjB;;;;AAIAsD,0BAAwB,iBAAU0C,IAlBjB;AAmBjB;;;AAGA5F,yBAAuB,iBAAU4F,IAtBhB;AAuBjB;;;AAGAb,iBAAe,iBAAUY,MA1BR;AA2BjB;;;AAGAxC,aAAW,iBAAUvD,MA9BJ;AA+BjB;;;AAGAL,YAAU,iBAAUI,IAlCH;AAmCjB;;;AAGAqF,aAAW,iBAAUW,MAtCJ;AAuCjB;;;AAGAV,oBAAkB,iBAAUU,MA1CX;AA2CjB;;;AAGAT,gBAAc,iBAAUtF,MA9CP;AA+CjB;;;;AAIA+E,SAAO,iBAAUiB,IAnDA;AAoDjB;;;;;AAKAhB,kBAAgB,iBAAUiB,IAzDT;AA0DjB;;;AAGA5F,QAAM,iBAAU2F,IAAV,CAAe9F,UA7DJ;AA8DjB;;;AAGAqF,oBAAkB,iBAAUQ,MAjEX;AAkEjB;;;AAGAP,gBAAc,iBAAUxF,MArEP;AAsEjB;;;AAGAwD,sBAAoB,iBAAUwC,IAzEb;AA0EjB;;;AAGArH,SAAO,iBAAUqB,MA7EA;AA8EjB;;;AAGAiC,SAAO,iBAAUlC,IAjFA;AAkFjB;;;AAGA0F,kBAAgB,iBAAUM,MArFT;AAsFjB;;;AAGAL,cAAY,iBAAU1F;AAzFL,C;AADfkG,M,CA6FGjG,Y,GAAe;AACpBd,YAAU,iBAAUa,MAAV,CAAiBE;AADP,C;AA7FlBgG,M,CAiGGE,Y,GAAe;AACpB9C,0BAAwB,IADJ;AAEpBlD,yBAAuB,KAFH;AAGpB2E,SAAO,KAHa;AAIpBvB,sBAAoB;AAJA,C;eAoBT0C,M;;;;;;;;;gCAhdTzH,c;;gCAgEG0B,S;;gCA0EH2C,Y;;gCAiNAoD,M","file":"Dialog.js","sourceRoot":"/Users/tmac_zc/Code/kr-admin","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport ReactDOM from 'react-dom';\nimport EventListener from 'react-event-listener';\nimport keycode from 'keycode';\nimport transitions from '../styles/transitions';\nimport Overlay from '../internal/Overlay';\nimport RenderToLayer from '../internal/RenderToLayer';\nimport Paper from '../Paper';\n\nimport ReactTransitionGroup from 'react-addons-transition-group';\n\nclass TransitionItem extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    style: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    style: {},\n  };\n\n  componentWillUnmount() {\n    clearTimeout(this.enterTimeout);\n    clearTimeout(this.leaveTimeout);\n  }\n\n  componentWillEnter(callback) {\n    this.componentWillAppear(callback);\n  }\n\n  componentWillAppear(callback) {\n    const spacing = this.context.muiTheme.baseTheme.spacing;\n\n    this.setState({\n      style: {\n        opacity: 1,\n        transform: `translate(0, ${spacing.desktopKeylineIncrement}px)`,\n      },\n    });\n\n    this.enterTimeout = setTimeout(callback, 450); // matches transition duration\n  }\n\n  componentWillLeave(callback) {\n    this.setState({\n      style: {\n        opacity: 0,\n        transform: 'translate(0, 0)',\n      },\n    });\n\n    this.leaveTimeout = setTimeout(callback, 450); // matches transition duration\n  }\n\n  render() {\n    const {\n      style,\n      children,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n\n    return (\n      <div {...other} style={prepareStyles(Object.assign({}, this.state.style, style))}>\n        {children}\n      </div>\n    );\n  }\n}\n\nfunction getStyles(props, context) {\n  const {\n    autoScrollBodyContent,\n    open,\n  } = props;\n\n  const {\n    baseTheme: {\n      spacing,\n      palette,\n    },\n    dialog,\n    zIndex,\n  } = context.muiTheme;\n\n  const gutter = spacing.desktopGutter;\n  const borderScroll = `1px solid ${palette.borderColor}`;\n\n  return {\n    root: {\n      position: 'fixed',\n      boxSizing: 'border-box',\n      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)\n      zIndex: zIndex.dialog,\n      top: 0,\n      left: open ? 0 : -10000,\n      width: '100%',\n      height: '100%',\n      transition: open ?\n        transitions.easeOut('0ms', 'left', '0ms') :\n        transitions.easeOut('0ms', 'left', '450ms'),\n    },\n    content: {\n      boxSizing: 'border-box',\n      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)\n      transition: transitions.easeOut(),\n      position: 'relative',\n      width: '75%',\n      maxWidth: spacing.desktopKeylineIncrement * 12,\n      margin: '0 auto',\n      zIndex: zIndex.dialog,\n    },\n    actionsContainer: {\n      boxSizing: 'border-box',\n      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)\n      padding: 8,\n      width: '100%',\n      textAlign: 'right',\n      marginTop: autoScrollBodyContent ? -1 : 0,\n      borderTop: autoScrollBodyContent ? borderScroll : 'none',\n    },\n    overlay: {\n      zIndex: zIndex.dialogOverlay,\n    },\n    title: {\n      margin: 0,\n      padding: `${gutter}px ${gutter}px 20px ${gutter}px`,\n      color: palette.textColor,\n      fontSize: dialog.titleFontSize,\n      lineHeight: '32px',\n      fontWeight: 400,\n      marginBottom: autoScrollBodyContent ? -1 : 0,\n      borderBottom: autoScrollBodyContent ? borderScroll : 'none',\n    },\n    body: {\n      fontSize: dialog.bodyFontSize,\n      color: dialog.bodyColor,\n      padding: `${props.title ? 0 : gutter}px ${gutter}px ${gutter}px`,\n      boxSizing: 'border-box',\n      overflowY: autoScrollBodyContent ? 'auto' : 'hidden',\n    },\n  };\n}\n\nclass DialogInline extends Component {\n  static propTypes = {\n    actions: PropTypes.node,\n    actionsContainerClassName: PropTypes.string,\n    actionsContainerStyle: PropTypes.object,\n    autoDetectWindowHeight: PropTypes.bool,\n    autoScrollBodyContent: PropTypes.bool,\n    bodyClassName: PropTypes.string,\n    bodyStyle: PropTypes.object,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    contentClassName: PropTypes.string,\n    contentStyle: PropTypes.object,\n    modal: PropTypes.bool,\n    onRequestClose: PropTypes.func,\n    open: PropTypes.bool.isRequired,\n    overlayClassName: PropTypes.string,\n    overlayStyle: PropTypes.object,\n    repositionOnUpdate: PropTypes.bool,\n    style: PropTypes.object,\n    title: PropTypes.node,\n    titleClassName: PropTypes.string,\n    titleStyle: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    this.positionDialog();\n  }\n\n  componentDidUpdate() {\n    this.positionDialog();\n  }\n\n  positionDialog() {\n    const {\n      actions,\n      autoDetectWindowHeight,\n      autoScrollBodyContent,\n      bodyStyle,\n      open,\n      repositionOnUpdate,\n      title,\n    } = this.props;\n\n    if (!open) {\n      return;\n    }\n\n    const clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const container = ReactDOM.findDOMNode(this);\n    const dialogWindow = ReactDOM.findDOMNode(this.refs.dialogWindow);\n    const dialogContent = ReactDOM.findDOMNode(this.refs.dialogContent);\n    const minPaddingTop = 16;\n\n    // Reset the height in case the window was resized.\n    dialogWindow.style.height = '';\n    dialogContent.style.height = '';\n\n    const dialogWindowHeight = dialogWindow.offsetHeight;\n    let paddingTop = ((clientHeight - dialogWindowHeight) / 2) - 64;\n    if (paddingTop < minPaddingTop) paddingTop = minPaddingTop;\n\n    // Vertically center the dialog window, but make sure it doesn't\n    // transition to that position.\n    if (repositionOnUpdate || !container.style.paddingTop) {\n      container.style.paddingTop = `${paddingTop}px`;\n    }\n\n    // Force a height if the dialog is taller than clientHeight\n    if (autoDetectWindowHeight || autoScrollBodyContent) {\n      const styles = getStyles(this.props, this.context);\n      styles.body = Object.assign(styles.body, bodyStyle);\n      let maxDialogContentHeight = clientHeight - 2 * 64;\n\n      if (title) maxDialogContentHeight -= dialogContent.previousSibling.offsetHeight;\n\n      if (React.Children.count(actions)) {\n        maxDialogContentHeight -= dialogContent.nextSibling.offsetHeight;\n      }\n\n      dialogContent.style.maxHeight = `${maxDialogContentHeight}px`;\n    }\n  }\n\n  requestClose(buttonClicked) {\n    if (!buttonClicked && this.props.modal) {\n      return;\n    }\n\n    if (this.props.onRequestClose) {\n      this.props.onRequestClose(!!buttonClicked);\n    }\n  }\n\n  handleTouchTapOverlay = () => {\n    this.requestClose(false);\n  };\n\n  handleKeyUp = (event) => {\n    if (keycode(event) === 'esc') {\n      this.requestClose(false);\n    }\n  };\n\n  handleResize = () => {\n    this.positionDialog();\n  };\n\n  render() {\n    const {\n      actions,\n      actionsContainerClassName,\n      actionsContainerStyle,\n      bodyClassName,\n      bodyStyle,\n      children,\n      className,\n      contentClassName,\n      contentStyle,\n      overlayClassName,\n      overlayStyle,\n      open,\n      titleClassName,\n      titleStyle,\n      title,\n      style,\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context);\n\n    styles.root = Object.assign(styles.root, style);\n    styles.content = Object.assign(styles.content, contentStyle);\n    styles.body = Object.assign(styles.body, bodyStyle);\n    styles.actionsContainer = Object.assign(styles.actionsContainer, actionsContainerStyle);\n    styles.overlay = Object.assign(styles.overlay, overlayStyle);\n    styles.title = Object.assign(styles.title, titleStyle);\n\n    const actionsContainer = React.Children.count(actions) > 0 && (\n      <div className={actionsContainerClassName} style={prepareStyles(styles.actionsContainer)}>\n        {React.Children.toArray(actions)}\n      </div>\n    );\n\n    let titleElement = title;\n    if (React.isValidElement(title)) {\n      titleElement = React.cloneElement(title, {\n        className: title.props.className || titleClassName,\n        style: prepareStyles(Object.assign(styles.title, title.props.style)),\n      });\n    } else if (typeof title === 'string') {\n      titleElement = (\n        <h3 className={titleClassName} style={prepareStyles(styles.title)}>\n          {title}\n        </h3>\n      );\n    }\n\n    return (\n      <div className={className} style={prepareStyles(styles.root)}>\n        {open &&\n          <EventListener\n            target=\"window\"\n            onKeyUp={this.handleKeyUp}\n            onResize={this.handleResize}\n          />\n        }\n        <ReactTransitionGroup\n          component=\"div\"\n          ref=\"dialogWindow\"\n          transitionAppear={true}\n          transitionAppearTimeout={450}\n          transitionEnter={true}\n          transitionEnterTimeout={450}\n        >\n          {open &&\n            <TransitionItem\n              className={contentClassName}\n              style={styles.content}\n            >\n              <Paper zDepth={4}>\n                {titleElement}\n                <div\n                  ref=\"dialogContent\"\n                  className={bodyClassName}\n                  style={prepareStyles(styles.body)}\n                >\n                  {children}\n                </div>\n                {actionsContainer}\n              </Paper>\n            </TransitionItem>\n          }\n        </ReactTransitionGroup>\n        <Overlay\n          show={open}\n          className={overlayClassName}\n          style={styles.overlay}\n          onTouchTap={this.handleTouchTapOverlay}\n        />\n      </div>\n    );\n  }\n}\n\nclass Dialog extends Component {\n  static propTypes = {\n    /**\n     * Action buttons to display below the Dialog content (`children`).\n     * This property accepts either a React element, or an array of React elements.\n     */\n    actions: PropTypes.node,\n    /**\n     * The `className` to add to the actions container's root element.\n     */\n    actionsContainerClassName: PropTypes.string,\n    /**\n     * Overrides the inline-styles of the actions container's root element.\n     */\n    actionsContainerStyle: PropTypes.object,\n    /**\n     * If set to true, the height of the `Dialog` will be auto detected. A max height\n     * will be enforced so that the content does not extend beyond the viewport.\n     */\n    autoDetectWindowHeight: PropTypes.bool,\n    /**\n     * If set to true, the body content of the `Dialog` will be scrollable.\n     */\n    autoScrollBodyContent: PropTypes.bool,\n    /**\n     * The `className` to add to the content's root element under the title.\n     */\n    bodyClassName: PropTypes.string,\n    /**\n     * Overrides the inline-styles of the content's root element under the title.\n     */\n    bodyStyle: PropTypes.object,\n    /**\n     * The contents of the `Dialog`.\n     */\n    children: PropTypes.node,\n    /**\n     * The css class name of the root element.\n     */\n    className: PropTypes.string,\n    /**\n     * The `className` to add to the content container.\n     */\n    contentClassName: PropTypes.string,\n    /**\n     * Overrides the inline-styles of the content container.\n     */\n    contentStyle: PropTypes.object,\n    /**\n     * Force the user to use one of the actions in the `Dialog`.\n     * Clicking outside the `Dialog` will not trigger the `onRequestClose`.\n     */\n    modal: PropTypes.bool,\n    /**\n     * Fired when the `Dialog` is requested to be closed by a click outside the `Dialog` or on the buttons.\n     *\n     * @param {bool} buttonClicked Determines whether a button click triggered this request.\n     */\n    onRequestClose: PropTypes.func,\n    /**\n     * Controls whether the Dialog is opened or not.\n     */\n    open: PropTypes.bool.isRequired,\n    /**\n     * The `className` to add to the `Overlay` component that is rendered behind the `Dialog`.\n     */\n    overlayClassName: PropTypes.string,\n    /**\n     * Overrides the inline-styles of the `Overlay` component that is rendered behind the `Dialog`.\n     */\n    overlayStyle: PropTypes.object,\n    /**\n     * Determines whether the `Dialog` should be repositioned when it's contents are updated.\n     */\n    repositionOnUpdate: PropTypes.bool,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * The title to display on the `Dialog`. Could be number, string, element or an array containing these types.\n     */\n    title: PropTypes.node,\n    /**\n     * The `className` to add to the title's root container element.\n     */\n    titleClassName: PropTypes.string,\n    /**\n     * Overrides the inline-styles of the title's root container element.\n     */\n    titleStyle: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  static defaultProps = {\n    autoDetectWindowHeight: true,\n    autoScrollBodyContent: false,\n    modal: false,\n    repositionOnUpdate: true,\n  };\n\n  renderLayer = () => {\n    return (\n      <DialogInline {...this.props} />\n    );\n  };\n\n  render() {\n    return (\n      <RenderToLayer render={this.renderLayer} open={true} useLayerForClickAway={false} />\n    );\n  }\n}\n\nexport default Dialog;\n"]}