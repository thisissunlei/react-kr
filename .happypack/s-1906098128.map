{"version":3,"sources":["src/Components/DatePicker/TextField/EnhancedTextarea.js"],"names":["rowsHeight","getStyles","props","context","state","root","position","textarea","height","width","resize","font","padding","cursor","shadow","overflow","visibility","EnhancedTextarea","handleResize","event","syncHeightWithShadow","undefined","handleChange","target","value","hasOwnProperty","valueLink","requestChange","onChange","setState","rows","nextProps","refs","input","getInputNode","newValue","newHeight","scrollHeight","rowsMax","Math","min","max","onHeightChange","shadowStyle","style","textareaStyle","other","prepareStyles","muiTheme","styles","rootStyles","textareaStyles","shadowStyles","defaultValue","propTypes","any","disabled","bool","func","number","object","string","defaultProps","contextTypes","isRequired"],"mappings":"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","file":"EnhancedTextarea.js","sourceRoot":"/Users/tmac_zc/Code/kr-admin","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport EventListener from 'react-event-listener';\n\nconst rowsHeight = 24;\n\nfunction getStyles(props, context, state) {\n  return {\n    root: {\n      position: 'relative', // because the shadow has position: 'absolute'\n    },\n    textarea: {\n      height: state.height,\n      width: '100%',\n      resize: 'none',\n      font: 'inherit',\n      padding: 0,\n      cursor: 'inherit',\n    },\n    shadow: {\n      resize: 'none',\n      // Overflow also needed to here to remove the extra row\n      // added to textareas in Firefox.\n      overflow: 'hidden',\n      // Visibility needed to hide the extra text area on ipads\n      visibility: 'hidden',\n      position: 'absolute',\n      height: 'initial',\n    },\n  };\n}\n\nclass EnhancedTextarea extends Component {\n  static propTypes = {\n    defaultValue: PropTypes.any,\n    disabled: PropTypes.bool,\n    onChange: PropTypes.func,\n    onHeightChange: PropTypes.func,\n    rows: PropTypes.number,\n    rowsMax: PropTypes.number,\n    shadowStyle: PropTypes.object,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    textareaStyle: PropTypes.object,\n    value: PropTypes.string,\n    valueLink: PropTypes.object,\n  };\n\n  static defaultProps = {\n    rows: 1,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    height: null,\n  };\n\n  componentWillMount() {\n    this.setState({\n      height: this.props.rows * rowsHeight,\n    });\n  }\n\n  componentDidMount() {\n    this.syncHeightWithShadow();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      this.syncHeightWithShadow(nextProps.value);\n    }\n  }\n\n  handleResize = (event) => {\n    this.syncHeightWithShadow(undefined, event);\n  };\n\n  getInputNode() {\n    return this.refs.input;\n  }\n\n  setValue(value) {\n    this.getInputNode().value = value;\n    this.syncHeightWithShadow(value);\n  }\n\n  syncHeightWithShadow(newValue, event) {\n    const shadow = this.refs.shadow;\n\n    if (newValue !== undefined) {\n      shadow.value = newValue;\n    }\n\n    let newHeight = shadow.scrollHeight;\n\n    // Guarding for jsdom, where scrollHeight isn't present.\n    // See https://github.com/tmpvar/jsdom/issues/1013\n    if (newHeight === undefined) return;\n\n    if (this.props.rowsMax >= this.props.rows) {\n      newHeight = Math.min(this.props.rowsMax * rowsHeight, newHeight);\n    }\n\n    newHeight = Math.max(newHeight, rowsHeight);\n\n    if (this.state.height !== newHeight) {\n      this.setState({\n        height: newHeight,\n      });\n\n      if (this.props.onHeightChange) {\n        this.props.onHeightChange(event, newHeight);\n      }\n    }\n  }\n\n  handleChange = (event) => {\n    this.syncHeightWithShadow(event.target.value);\n\n    if (this.props.hasOwnProperty('valueLink')) {\n      this.props.valueLink.requestChange(event.target.value);\n    }\n\n    if (this.props.onChange) {\n      this.props.onChange(event);\n    }\n  };\n\n  render() {\n    const {\n      onChange, // eslint-disable-line no-unused-vars\n      onHeightChange, // eslint-disable-line no-unused-vars\n      rows, // eslint-disable-line no-unused-vars\n      rowsMax, // eslint-disable-line no-unused-vars\n      shadowStyle,\n      style,\n      textareaStyle,\n      valueLink, // eslint-disable-line no-unused-vars\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context, this.state);\n    const rootStyles = Object.assign(styles.root, style);\n    const textareaStyles = Object.assign(styles.textarea, textareaStyle);\n    const shadowStyles = Object.assign({}, textareaStyles, styles.shadow, shadowStyle);\n\n    if (this.props.hasOwnProperty('valueLink')) {\n      other.value = this.props.valueLink.value;\n    }\n\n    return (\n      <div style={prepareStyles(rootStyles)}>\n        <EventListener target=\"window\" onResize={this.handleResize} />\n        <textarea\n          ref=\"shadow\"\n          style={prepareStyles(shadowStyles)}\n          tabIndex=\"-1\"\n          rows={this.props.rows}\n          defaultValue={this.props.defaultValue}\n          readOnly={true}\n          value={this.props.value}\n          valueLink={this.props.valueLink}\n        />\n        <textarea\n          {...other}\n          ref=\"input\"\n          rows={this.props.rows}\n          style={prepareStyles(textareaStyles)}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default EnhancedTextarea;\n"]}