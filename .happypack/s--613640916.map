{"version":3,"sources":["src/Containers/Statistical/Home/PanelComponents/index.js"],"names":["actionCreators","PanelComponents","props","context","shouldComponentUpdate","bind","renderGroupComponent","displayName","defaultProps","panels","templateName","templateNo","latemplateNamebel","propTypes","PropTypes","array","groupId","number","dateT","Date","dateYear","getFullYear","dateMonth","getMonth","dateDay","getDate","todayDate","renderComponent","_this","map","item","index","console","log","key","push","createPanelComponent","id","value","component"],"mappings":";;;;;;;;;AAAA;;;;AACA;;AACA;;AAEA;;IAAYA,c;;AACZ;;;;AACA;;AAEA;;AAkBA;;;;AACA;;;;;;;;;;;;;;AAEA;;IAEqBC,e;;;AAYpB,0BAAYC,KAAZ,EAAkBC,OAAlB,EAA0B;AAAA;;AAAA,iIACnBD,KADmB,EACZC,OADY;;AAAA;;AAEzB,SAAKC,qBAAL,GAA6B,qCAAgBA,qBAAhB,CAAsCC,IAAtC,QAA7B;AAFyB;AAGzB;;;;sCAEmB,CAEnB;;;2BAmDO;;AAEP,UACC;AAAA;AAAA;AACI,iDAAO,OAAM,0BAAb,GADJ;AAEM,SAAKC,oBAAL;AAFN,IADD;AAMA;;;;;;AA9EmBL,e,CAEbM,W,GAAc,iB;AAFDN,e,CAGbO,Y,GAAe;AACrBC,SAAO,CAAC,EAACC,cAAa,IAAd,EAAmBC,YAAW,EAA9B,EAAD,EAAmC,EAACC,mBAAkB,IAAnB,EAAwBD,YAAW,MAAnC,EAAnC;AADc,C;AAHFV,e,CAObY,S,GAAY;AACjBJ,SAAO,gBAAMK,SAAN,CAAgBC,KADN;AAEjBC,UAAQ,gBAAMF,SAAN,CAAgBG;AAFP,C;;;;;MAcnBX,oB,GAAuB,YAAI;AAAA,eAEH,OAAKJ,KAFF;AAAA,MAEnBO,MAFmB,UAEnBA,MAFmB;AAAA,MAEZO,OAFY,UAEZA,OAFY;;;AAIxB,MAAKE,QAAM,IAAIC,IAAJ,EAAX;AACA,MAAIC,WAASF,MAAMG,WAAN,EAAb;AACA,MAAIC,YAAUJ,MAAMK,QAAN,KAAiB,CAA/B;AACA,MAAIC,UAAQN,MAAMO,OAAN,EAAZ;AACE,MAAGD,UAAQ,EAAX,EAAc;AACbA,aAAQ,MAAIA,OAAZ;AACA;AACL,MAAIE,YAAUN,WAAS,GAAT,GAAaE,SAAb,GAAuB,GAAvB,GAA2BE,OAAzC;;AAEE,MAAIG,kBAAkB,EAAtB;AACA,MAAIzB,QAAQ;AACVc,YAAQA,OADE;AAEVU,cAAU;AAFA,GAAZ;;AAKA,MAAIE,cAAJ;AACAnB,SAAOoB,GAAP,CAAW,UAASC,IAAT,EAAcC,KAAd,EAAoB;AAC9BC,WAAQC,GAAR,CAAY,MAAZ,EAAmBH,IAAnB;AACC5B,SAAMgC,GAAN,GAAYH,KAAZ;AACA7B,SAAMwB,SAAN,GAAgBA,SAAhB;AACAC,mBAAgBQ,IAAhB,CAAqBP,MAAMQ,oBAAN,CAA2BN,KAAKO,EAAhC,EAAmCnC,KAAnC,CAArB;AACD,GALD;;AAOA,SAAOyB,eAAP;AACF,E;;MAEDS,oB,GAAuB,UAACE,KAAD,EAAOpC,KAAP,EAAe;;AAEpC,MAAIqC,YAAY,IAAhB;AACA,UAAQD,KAAR;AACC,QAAK,CAAL;AAAO;AACNC,iBAAY,mDAAerC,KAAf,CAAZ;AACA;AACA;AACD,QAAK,CAAL;AAAO;AACNqC,iBAAY,sDAAkBrC,KAAlB,CAAZ;AACA;AACA;AACD;AAAQ;AACPqC,iBAAY,IAAZ;AACA;AAXF;AAaA,SAAOA,SAAP;AACD,E;;;kBApEmBtC,e;;;;;;;;+BAAAA,e","file":"index.js","sourceRoot":"/Users/tmac_zc/Code/kr-admin","sourcesContent":["import React,{Component} from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport * as actionCreators from 'kr-ui/../Redux/Actions';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\nimport {Actions,Store} from 'kr/Redux';\n\nimport {\n\tKrField,\n\tTable,\n\tTableBody,\n\tTableHeader,\n\tTableHeaderColumn,\n\tTableRow,\n\tTableRowColumn,\n\tTableFooter,\n\tButton,\n\tSection,\n\tGrid,\n\tRow,\n\tCol,\n\tDialog,\n\tTitle\n} from 'kr-ui';\n\nimport NotOpenPanel from './NotOpenPanel';\nimport OpenPanel from './OpenPanel';\n\n//import PanelsDic from './PanelsDic';\n\nexport default class PanelComponents  extends Component{\n\n\tstatic displayName = 'PanelComponents';\n\tstatic defaultProps = {\n\t\tpanels:[{templateName:'张三',templateNo:''},{latemplateNamebel:'里斯',templateNo:'dddd'}]\n\t}\n\n\tstatic propTypes = {\n\t\t panels:React.PropTypes.array,\n\t\t groupId:React.PropTypes.number\n\t}\n\n\tconstructor(props,context){\n\t\tsuper(props, context);\n\t\tthis.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\n\t}\n\n\trenderGroupComponent = ()=>{\n\n\t\t\t\tlet {panels,groupId}=this.props;\n\n\t\t\t\tvar  dateT=new Date();\n\t\t\t\tvar dateYear=dateT.getFullYear();\n\t\t\t\tvar dateMonth=dateT.getMonth()+1;\n\t\t\t\tvar dateDay=dateT.getDate();\n\t\t\t\t\t\tif(dateDay<10){\n\t\t\t\t\t\t\tdateDay='0'+dateDay\n\t\t\t\t\t\t}\n\t\tvar todayDate=dateYear+'-'+dateMonth+'-'+dateDay;\n\n\t\t\t\tvar renderComponent = [];\n\t\t\t\tvar props = {\n\t\t\t\t\t\tgroupId:groupId,\n\t\t\t\t\t\ttodayDate:'',\n\t\t\t\t};\n\n\t\t\t\tvar _this = this;\n\t\t\t\tpanels.map(function(item,index){\n\t\t\t\t\tconsole.log('item',item);\n\t\t\t\t\t\tprops.key = index;\n\t\t\t\t\t\tprops.todayDate=todayDate;\n\t\t\t\t\t\trenderComponent.push(_this.createPanelComponent(item.id,props));\n\t\t\t\t});\n\n\t\t\t\treturn renderComponent;\n\t}\n\n\tcreatePanelComponent = (value,props)=>{\n\n\t\t\tvar component = null;\n\t\t\tswitch (value) {\n\t\t\t\tcase 1:{\n\t\t\t\t\tcomponent = <OpenPanel {...props}/>\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 2:{\n\t\t\t\t\tcomponent = <NotOpenPanel {...props}/>\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:{\n\t\t\t\t\tcomponent = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn component;\n\t}\n\n\trender(){\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t    <Title value=\"数据统计\"/>\n\t\t\t    \t{this.renderGroupComponent()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]}