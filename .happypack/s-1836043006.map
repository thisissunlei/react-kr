{"version":3,"sources":["src/Components/DatePicker/internal/ScaleIn.js"],"names":["ScaleIn","props","children","childStyle","enterDelay","maxScale","minScale","style","other","prepareStyles","context","muiTheme","mergedRootStyles","position","overflow","height","newChildren","Children","map","child","key","propTypes","object","node","number","defaultProps","contextTypes","isRequired"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEMA,O;;;;;;;;;;;6BAqBK;AAAA,mBASH,KAAKC,KATF;AAAA,UAELC,QAFK,UAELA,QAFK;AAAA,UAGLC,UAHK,UAGLA,UAHK;AAAA,UAILC,UAJK,UAILA,UAJK;AAAA,UAKLC,QALK,UAKLA,QALK;AAAA,UAMLC,QANK,UAMLA,QANK;AAAA,UAOLC,KAPK,UAOLA,KAPK;AAAA,UAQFC,KARE;;AAAA,UAWAC,aAXA,GAWiB,KAAKC,OAAL,CAAaC,QAX9B,CAWAF,aAXA;;;AAaP,UAAMG,mBAAmB,4BAAc,EAAd,EAAkB;AACzCC,kBAAU,UAD+B;AAEzCC,kBAAU,QAF+B;AAGzCC,gBAAQ;AAHiC,OAAlB,EAItBR,KAJsB,CAAzB;;AAMA,UAAMS,cAAc,gBAAMC,QAAN,CAAeC,GAAf,CAAmBhB,QAAnB,EAA6B,UAACiB,KAAD,EAAW;AAC1D,eACE;AAAA;AAAA;AACE,iBAAKA,MAAMC,GADb;AAEE,wBAAYhB,UAFd;AAGE,sBAAUC,QAHZ;AAIE,sBAAUC,QAJZ;AAKE,mBAAOH;AALT;AAOGgB;AAPH,SADF;AAWD,OAZmB,CAApB;;AAcA,aACE;AAAA;AAAA,qBACMX,KADN;AAEE,iBAAOC,cAAcG,gBAAd,CAFT;AAGE,qBAAU;AAHZ;AAKGI;AALH,OADF;AASD;;;;;;AA/DGhB,O,CACGqB,S,GAAY;AACjBlB,cAAY,iBAAUmB,MADL;AAEjBpB,YAAU,iBAAUqB,IAFH;AAGjBnB,cAAY,iBAAUoB,MAHL;AAIjBnB,YAAU,iBAAUmB,MAJH;AAKjBlB,YAAU,iBAAUkB,MALH;AAMjB;;;AAGAjB,SAAO,iBAAUe;AATA,C;AADftB,O,CAaGyB,Y,GAAe;AACpBrB,cAAY;AADQ,C;AAblBJ,O,CAiBG0B,Y,GAAe;AACpBf,YAAU,iBAAUW,MAAV,CAAiBK;AADP,C;eAiDT3B,O;;;;;;;;;gCAlETA,O","file":"ScaleIn.js","sourceRoot":"/Users/tmac_zc/Code/kr-admin","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport ReactTransitionGroup from 'react-addons-transition-group';\nimport ScaleInChild from './ScaleInChild';\n\nclass ScaleIn extends Component {\n  static propTypes = {\n    childStyle: PropTypes.object,\n    children: PropTypes.node,\n    enterDelay: PropTypes.number,\n    maxScale: PropTypes.number,\n    minScale: PropTypes.number,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    enterDelay: 0,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const {\n      children,\n      childStyle,\n      enterDelay,\n      maxScale,\n      minScale,\n      style,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n\n    const mergedRootStyles = Object.assign({}, {\n      position: 'relative',\n      overflow: 'hidden',\n      height: '100%',\n    }, style);\n\n    const newChildren = React.Children.map(children, (child) => {\n      return (\n        <ScaleInChild\n          key={child.key}\n          enterDelay={enterDelay}\n          maxScale={maxScale}\n          minScale={minScale}\n          style={childStyle}\n        >\n          {child}\n        </ScaleInChild>\n      );\n    });\n\n    return (\n      <ReactTransitionGroup\n        {...other}\n        style={prepareStyles(mergedRootStyles)}\n        component=\"div\"\n      >\n        {newChildren}\n      </ReactTransitionGroup>\n    );\n  }\n}\n\nexport default ScaleIn;\n"]}