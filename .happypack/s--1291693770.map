{"version":3,"sources":["src/Containers/Operation/CustomerManage/CustomerList/SwitchPerson.js"],"names":["actionCreators","SwitchPerson","props","context","onChangePerson","person","dispatch","value","onCancel","bind","onSubmit","params","handleSubmit","customerIds","marginTop","PropTypes","func","form","enableReinitialize","keepDirtyOnReinitialize"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;IAAYA,c;;AACZ;;;;;;;;;;;;IAUMC,Y;;;AAOL,uBAAYC,KAAZ,EAAkBC,OAAlB,EAA0B;AAAA;;AAAA,0HACnBD,KADmB,EACbC,OADa;;AAAA,QAc1BC,cAd0B,GAcX,UAACC,MAAD,EAAU;AACxB,gBAAMC,QAAN,CAAe,uBAAO,cAAP,EAAsB,WAAtB,EAAkCD,OAAOE,KAAzC,CAAf;AACG,GAhBsB;;AAEzB,QAAKC,QAAL,GAAc,MAAKA,QAAL,CAAcC,IAAd,OAAd;AACA,QAAKC,QAAL,GAAc,MAAKA,QAAL,CAAcD,IAAd,OAAd;AAHyB;AAIzB;;;;6BACS;AAAA,OACFD,QADE,GACU,KAAKN,KADf,CACFM,QADE;;AAETA,eAAYA,UAAZ;AACA;;;2BACQG,M,EAAO;AAAA,OACRD,QADQ,GACI,KAAKR,KADT,CACRQ,QADQ;;AAEfA,eAAYA,SAASC,MAAT,CAAZ;AACA;;;2BAMO;AAAA,OAEFC,YAFE,GAEY,KAAKV,KAFjB,CAEFU,YAFE;;;AAIP,UAEE;AAAA;AAAA,MAAK,WAAU,SAAf;AAEa;AAAA;AAAA,OAAM,UAAUA,aAAa,KAAKF,QAAlB,CAAhB;AAEM;AAAA;AAAA,QAAK,WAAU,mBAAf;AAAA;AAAwC;AAAA;AAAA;AAAO,YAAKR,KAAL,CAAWW;AAAlB,OAAxC;AAAA;AAAA,MAFN;AAGT,oDAAU,MAAM,EAAhB,EAAoB,OAAO,EAA3B,EAA+B,MAAK,WAApC,EAAgD,OAAO,EAACC,WAAU,MAAX,EAAvD,EAA2E,WAAU,cAArF,EAAoG,QAAQ,KAA5G,EAAmH,OAAM,0BAAzH,EAAgI,UAAU,KAAKV,cAA/I,EAA+J,aAAY,4CAA3K,GAHS;AAIT;AAAA;AAAA,QAAM,OAAO,EAACU,WAAU,EAAX,EAAb;AACF;AAAA;AAAA;AACC;AAAA;AAAA,UAAK,IAAI,EAAT,EAAa,OAAM,QAAnB;AACC;AAAA;AAAA;AACC;AAAA;AAAA,YAAM,WAAU,eAAhB;AAAgC,wDAAS,OAAM,cAAf,EAAoB,MAAK,QAAzB,EAAmC,YAAY,KAAKJ,QAApD;AAAhC,UADD;AAEC,uDAAS,OAAM,cAAf,EAAoB,MAAK,QAAzB,EAAkC,QAAQ,IAA1C,EAAgD,YAAY,KAAKF,QAAjE;AAFD;AADD;AADD;AADE;AAJS;AAFb,IAFF;AAyBA;;;;;;AAtDIP,Y,CAEEc,S,GAAY;AAClBL,WAAS,gBAAMK,SAAN,CAAgBC,IADP;AAElBR,WAAS,gBAAMO,SAAN,CAAgBC;;AAFP,C;;eAuDL,0BAAU,EAACC,MAAK,cAAN,EAAqBC,oBAAmB,IAAxC,EAA6CC,yBAAwB,IAArE,EAAV,EAAsFlB,YAAtF,C;;;;;;;;;;+BAzDTA,Y","file":"SwitchPerson.js","sourceRoot":"/Users/tmac_zc/Code/kr-admin","sourcesContent":["import React,{Component} from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {reduxForm,formValueSelector,initialize,change} from 'redux-form';\nimport {Actions,Store} from 'kr/Redux';\nimport * as actionCreators from 'kr-ui/../Redux/Actions';\nimport {\n\tButton,\n\tSection,\n\tGrid,\n\tRow,\n\tCol,\n\tKrField,\n\tButtonGroup,\n} from 'kr-ui';\n\nclass SwitchPerson extends Component{\n\t\n\tstatic PropTypes = {\n\t\tonSubmit:React.PropTypes.func,\n\t\tonCancel:React.PropTypes.func,\n\t\t\n\t}\n\tconstructor(props,context){\n\t\tsuper(props,context);\n\t\tthis.onCancel=this.onCancel.bind(this);\n\t\tthis.onSubmit=this.onSubmit.bind(this);\n\t};\n\tonCancel(){\n\t\tconst {onCancel} = this.props;\n\t\tonCancel && onCancel();\n\t};\n\tonSubmit(params){\n\t\tconst {onSubmit} = this.props;\n\t\tonSubmit && onSubmit(params);\n\t}\n\n\tonChangePerson=(person)=>{\n\t\tStore.dispatch(change('switchPerson','receiveId',person.value));\n    }\n\t\n\trender(){\n\n\t\tlet {handleSubmit}=this.props;\n\t\t\n\t\treturn(\n\t\t\t\t\n\t\t\t\t<div className='switchP'>\n\t\t\t\t\t\n                 <form onSubmit={handleSubmit(this.onSubmit)}>\n\t\t\t\t       \n                       <div className='person-switchText'>您即将转移<span>{this.props.customerIds}</span>个客户,操作之后，该客户会转移到对应人员，无法恢复</div>\n\t\t\t\t\t   <KrField  left={63} right={72} name=\"receiveId\" style={{marginTop:'12px'}} component=\"searchLeader\" inline={false} label=\"新负责人\" onChange={this.onChangePerson} placeholder='请输入新负责人'/>\n\t\t\t\t\t   <Grid style={{marginTop:18}}>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col md={12} align=\"center\">\n\t\t\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t\t\t<div  className='ui-btn-center'><Button  label=\"确定\" type=\"submit\"  onTouchTap={this.onSubmit}/></div>\n\t\t\t\t\t\t\t\t\t<Button  label=\"取消\" type=\"button\" cancle={true} onTouchTap={this.onCancel} /> \n\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t   </Grid>\n\n                 </form>\n\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t);\n\t}\n\t\n}\nexport default reduxForm({form:'switchPerson',enableReinitialize:true,keepDirtyOnReinitialize:true})(SwitchPerson);\n\n\n\n\n"]}