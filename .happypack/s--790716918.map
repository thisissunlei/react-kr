{"version":3,"sources":["src/Components/Select/utils/defaultMenuRenderer.js"],"names":["menuRenderer","focusedOption","instancePrefix","labelKey","onFocus","onSelect","optionClassName","optionComponent","optionRenderer","options","valueArray","valueKey","onOptionRef","Option","map","option","i","isSelected","indexOf","isFocused","optionClass","disabled","ref","module","exports"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,SAASA,YAAT,OAaG;AAAA,KAZFC,aAYE,QAZFA,aAYE;AAAA,KAXFC,cAWE,QAXFA,cAWE;AAAA,KAVFC,QAUE,QAVFA,QAUE;AAAA,KATFC,OASE,QATFA,OASE;AAAA,KARFC,QAQE,QARFA,QAQE;AAAA,KAPFC,eAOE,QAPFA,eAOE;AAAA,KANFC,eAME,QANFA,eAME;AAAA,KALFC,cAKE,QALFA,cAKE;AAAA,KAJFC,OAIE,QAJFA,OAIE;AAAA,KAHFC,UAGE,QAHFA,UAGE;AAAA,KAFFC,QAEE,QAFFA,QAEE;AAAA,KADFC,WACE,QADFA,WACE;;AACF,KAAIC,SAASN,eAAb;;AAEA,QAAOE,QAAQK,GAAR,CAAY,UAACC,MAAD,EAASC,CAAT,EAAe;AACjC,MAAIC,aAAaP,cAAcA,WAAWQ,OAAX,CAAmBH,MAAnB,IAA6B,CAAC,CAA7D;AACA,MAAII,YAAYJ,WAAWd,aAA3B;AACA,MAAImB,cAAc,0BAAWd,eAAX,EAA4B;AAC7C,oBAAiB,IAD4B;AAE7C,kBAAeW,UAF8B;AAG7C,iBAAcE,SAH+B;AAI7C,kBAAeJ,OAAOM;AAJuB,GAA5B,CAAlB;;AAOA,SACC;AAAC,SAAD;AAAA;AACC,eAAWD,WADZ;AAEC,oBAAgBlB,cAFjB;AAGC,gBAAYa,OAAOM,QAHpB;AAIC,eAAWF,SAJZ;AAKC,gBAAYF,UALb;AAMC,qBAAeD,CAAf,SAAoBD,OAAOJ,QAAP,CANrB;AAOC,aAASP,OAPV;AAQC,cAAUC,QARX;AASC,YAAQU,MATT;AAUC,iBAAaC,CAVd;AAWC,SAAK,oBAAO;AAAEJ,iBAAYU,KAAZ,EAAiBH,SAAjB;AAA8B;AAX7C;AAaEX,kBAAeO,MAAf,EAAuBC,CAAvB;AAbF,GADD;AAiBA,EA3BM,CAAP;AA4BA;;AAEDO,OAAOC,OAAP,GAAiBxB,YAAjB;;;;;;;;+BA9CSA,Y","file":"defaultMenuRenderer.js","sourceRoot":"/Users/tmac_zc/Code/kr-admin","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\nfunction menuRenderer ({\n\tfocusedOption,\n\tinstancePrefix,\n\tlabelKey,\n\tonFocus,\n\tonSelect,\n\toptionClassName,\n\toptionComponent,\n\toptionRenderer,\n\toptions,\n\tvalueArray,\n\tvalueKey,\n\tonOptionRef\n}) {\n\tlet Option = optionComponent;\n\n\treturn options.map((option, i) => {\n\t\tlet isSelected = valueArray && valueArray.indexOf(option) > -1;\n\t\tlet isFocused = option === focusedOption;\n\t\tlet optionClass = classNames(optionClassName, {\n\t\t\t'Select-option': true,\n\t\t\t'is-selected': isSelected,\n\t\t\t'is-focused': isFocused,\n\t\t\t'is-disabled': option.disabled,\n\t\t});\n\n\t\treturn (\n\t\t\t<Option\n\t\t\t\tclassName={optionClass}\n\t\t\t\tinstancePrefix={instancePrefix}\n\t\t\t\tisDisabled={option.disabled}\n\t\t\t\tisFocused={isFocused}\n\t\t\t\tisSelected={isSelected}\n\t\t\t\tkey={`option-${i}-${option[valueKey]}`}\n\t\t\t\tonFocus={onFocus}\n\t\t\t\tonSelect={onSelect}\n\t\t\t\toption={option}\n\t\t\t\toptionIndex={i}\n\t\t\t\tref={ref => { onOptionRef(ref, isFocused); }}\n\t\t\t>\n\t\t\t\t{optionRenderer(option, i)}\n\t\t\t</Option>\n\t\t);\n\t});\n}\n\nmodule.exports = menuRenderer;\n"]}