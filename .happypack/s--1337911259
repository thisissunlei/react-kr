'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _TableHeaderColumn = require('../TableHeaderColumn');

var _TableHeaderColumn2 = _interopRequireDefault(_TableHeaderColumn);

var _Checkbox = require('../../Checkbox');

var _Checkbox2 = _interopRequireDefault(_Checkbox);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableHeader = function (_React$Component) {
	_inherits(TableHeader, _React$Component);

	function TableHeader(props) {
		_classCallCheck(this, TableHeader);

		var _this = _possibleConstructorReturn(this, (TableHeader.__proto__ || Object.getPrototypeOf(TableHeader)).call(this, props));

		_this.onSort = _this.onSort.bind(_this);

		_this.renderCheckbox = _this.renderCheckbox.bind(_this);
		_this.createTableHeaderColumn = _this.createTableHeaderColumn.bind(_this);

		return _this;
	}

	_createClass(TableHeader, [{
		key: 'onSort',
		value: function onSort(name) {
			var onSort = this.props.onSort;

			if (!name) {
				return;
			}
			onSort && onSort(name);
		}
	}, {
		key: 'renderCheckbox',
		value: function renderCheckbox() {
			var _props = this.props,
			    onSelectAll = _props.onSelectAll,
			    displayCheckbox = _props.displayCheckbox,
			    onCellClick = _props.onCellClick,
			    allRowsSelected = _props.allRowsSelected;


			if (!displayCheckbox) {
				return null;
			}

			//return ( <TableHeaderColumn width={this.props.defaultValue.checkboxWidth}></TableHeaderColumn>);
			return _react2.default.createElement(
				_TableHeaderColumn2.default,
				{ width: this.props.defaultValue.checkboxWidth },
				' ',
				_react2.default.createElement(_Checkbox2.default, { onCheck: onSelectAll, checked: allRowsSelected })
			);
		}
	}, {
		key: 'createTableHeaderColumn',
		value: function createTableHeaderColumn(base, index) {
			return _react2.default.cloneElement(base, {
				key: index,
				onSort: this.onSort
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props2 = this.props,
			    className = _props2.className,
			    children = _props2.children;


			var tHeader = [];
			_react2.default.Children.forEach(children, function (child, index) {
				if (!_react2.default.isValidElement(child)) return;
				var _child$type = child.type,
				    muiName = _child$type.muiName,
				    name = _child$type.name,
				    displayName = _child$type.displayName;


				if (displayName === 'TableHeaderColumn') {
					tHeader.push(_this2.createTableHeaderColumn(child, index));
				}
			});

			return _react2.default.createElement(
				'thead',
				{ className: className },
				_react2.default.createElement(
					'tr',
					null,
					this.renderCheckbox(),
					tHeader
				)
			);
		}
	}]);

	return TableHeader;
}(_react2.default.Component);

TableHeader.displayName = 'TableHeader';
TableHeader.propTypes = {
	className: _react2.default.PropTypes.string,
	children: _react2.default.PropTypes.node,
	onSelectAll: _react2.default.PropTypes.func,
	displayCheckbox: _react2.default.PropTypes.bool,
	defaultValue: _react2.default.PropTypes.object,
	onSort: _react2.default.PropTypes.func,
	allRowsSelected: _react2.default.PropTypes.bool

};
exports.default = TableHeader;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(TableHeader, 'TableHeader', '/Users/liuyihao/Code/kr-admin/src/Components/Table/TableHeader/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Db21wb25lbnRzL1RhYmxlL1RhYmxlSGVhZGVyL2luZGV4LmpzIl0sIm5hbWVzIjpbIlRhYmxlSGVhZGVyIiwicHJvcHMiLCJvblNvcnQiLCJiaW5kIiwicmVuZGVyQ2hlY2tib3giLCJjcmVhdGVUYWJsZUhlYWRlckNvbHVtbiIsIm5hbWUiLCJvblNlbGVjdEFsbCIsImRpc3BsYXlDaGVja2JveCIsIm9uQ2VsbENsaWNrIiwiYWxsUm93c1NlbGVjdGVkIiwiZGVmYXVsdFZhbHVlIiwiY2hlY2tib3hXaWR0aCIsImJhc2UiLCJpbmRleCIsImNsb25lRWxlbWVudCIsImtleSIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwidEhlYWRlciIsIkNoaWxkcmVuIiwiZm9yRWFjaCIsImNoaWxkIiwiaXNWYWxpZEVsZW1lbnQiLCJ0eXBlIiwibXVpTmFtZSIsImRpc3BsYXlOYW1lIiwicHVzaCIsIkNvbXBvbmVudCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsIm5vZGUiLCJmdW5jIiwiYm9vbCIsIm9iamVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7SUFFcUJBLFc7OztBQWdCcEIsc0JBQVlDLEtBQVosRUFBa0I7QUFBQTs7QUFBQSx3SEFDWEEsS0FEVzs7QUFHakIsUUFBS0MsTUFBTCxHQUFjLE1BQUtBLE1BQUwsQ0FBWUMsSUFBWixPQUFkOztBQUVBLFFBQUtDLGNBQUwsR0FBc0IsTUFBS0EsY0FBTCxDQUFvQkQsSUFBcEIsT0FBdEI7QUFDQSxRQUFLRSx1QkFBTCxHQUErQixNQUFLQSx1QkFBTCxDQUE2QkYsSUFBN0IsT0FBL0I7O0FBTmlCO0FBU2pCOzs7O3lCQUdNRyxJLEVBQUs7QUFBQSxPQUNKSixNQURJLEdBQ00sS0FBS0QsS0FEWCxDQUNKQyxNQURJOztBQUVYLE9BQUcsQ0FBQ0ksSUFBSixFQUFTO0FBQ1I7QUFDQTtBQUNESixhQUFVQSxPQUFPSSxJQUFQLENBQVY7QUFDQTs7O21DQUVlO0FBQUEsZ0JBRWlELEtBQUtMLEtBRnREO0FBQUEsT0FFVk0sV0FGVSxVQUVWQSxXQUZVO0FBQUEsT0FFRUMsZUFGRixVQUVFQSxlQUZGO0FBQUEsT0FFa0JDLFdBRmxCLFVBRWtCQSxXQUZsQjtBQUFBLE9BRThCQyxlQUY5QixVQUU4QkEsZUFGOUI7OztBQUlmLE9BQUcsQ0FBQ0YsZUFBSixFQUFvQjtBQUNuQixXQUFPLElBQVA7QUFDQTs7QUFFRDtBQUNBLFVBQVM7QUFBQTtBQUFBLE1BQW1CLE9BQU8sS0FBS1AsS0FBTCxDQUFXVSxZQUFYLENBQXdCQyxhQUFsRDtBQUFBO0FBQWtFLHdEQUFVLFNBQVNMLFdBQW5CLEVBQWdDLFNBQVNHLGVBQXpDO0FBQWxFLElBQVQ7QUFFQTs7OzBDQUd1QkcsSSxFQUFLQyxLLEVBQU07QUFDbEMsVUFBTyxnQkFBTUMsWUFBTixDQUNORixJQURNLEVBRU47QUFDQ0csU0FBSUYsS0FETDtBQUVDWixZQUFPLEtBQUtBO0FBRmIsSUFGTSxDQUFQO0FBT0E7OzsyQkFFUTtBQUFBOztBQUFBLGlCQUVtQixLQUFLRCxLQUZ4QjtBQUFBLE9BRUhnQixTQUZHLFdBRUhBLFNBRkc7QUFBQSxPQUVPQyxRQUZQLFdBRU9BLFFBRlA7OztBQUlSLE9BQUlDLFVBQVUsRUFBZDtBQUNBLG1CQUFNQyxRQUFOLENBQWVDLE9BQWYsQ0FBdUJILFFBQXZCLEVBQWlDLFVBQUNJLEtBQUQsRUFBT1IsS0FBUCxFQUFpQjtBQUNqRCxRQUFJLENBQUMsZ0JBQU1TLGNBQU4sQ0FBcUJELEtBQXJCLENBQUwsRUFBa0M7QUFEZSxzQkFFZEEsTUFBTUUsSUFGUTtBQUFBLFFBRTFDQyxPQUYwQyxlQUUxQ0EsT0FGMEM7QUFBQSxRQUVsQ25CLElBRmtDLGVBRWxDQSxJQUZrQztBQUFBLFFBRTdCb0IsV0FGNkIsZUFFN0JBLFdBRjZCOzs7QUFJakQsUUFBSUEsZ0JBQWdCLG1CQUFwQixFQUF5QztBQUN4Q1AsYUFBUVEsSUFBUixDQUFhLE9BQUt0Qix1QkFBTCxDQUE2QmlCLEtBQTdCLEVBQW1DUixLQUFuQyxDQUFiO0FBQ0E7QUFDRCxJQVBEOztBQVNBLFVBQ0M7QUFBQTtBQUFBLE1BQU8sV0FBV0csU0FBbEI7QUFDQztBQUFBO0FBQUE7QUFDZSxVQUFLYixjQUFMLEVBRGY7QUFFTWU7QUFGTjtBQURELElBREQ7QUFTQTs7OztFQW5GdUMsZ0JBQU1TLFM7O0FBQTFCNUIsVyxDQUViMEIsVyxHQUFjLGE7QUFGRDFCLFcsQ0FJYjZCLFMsR0FBWTtBQUNsQlosWUFBVyxnQkFBTWEsU0FBTixDQUFnQkMsTUFEVDtBQUVsQmIsV0FBVSxnQkFBTVksU0FBTixDQUFnQkUsSUFGUjtBQUdoQnpCLGNBQVksZ0JBQU11QixTQUFOLENBQWdCRyxJQUhaO0FBSWxCekIsa0JBQWdCLGdCQUFNc0IsU0FBTixDQUFnQkksSUFKZDtBQUtsQnZCLGVBQWEsZ0JBQU1tQixTQUFOLENBQWdCSyxNQUxYO0FBTWxCakMsU0FBTyxnQkFBTTRCLFNBQU4sQ0FBZ0JHLElBTkw7QUFPbEJ2QixrQkFBZ0IsZ0JBQU1vQixTQUFOLENBQWdCSTs7QUFQZCxDO2tCQUpDbEMsVzs7Ozs7Ozs7K0JBQUFBLFciLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xpdXlpaGFvL0NvZGUva3ItYWRtaW4iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFRhYmxlSGVhZGVyQ29sdW1uIGZyb20gJy4uL1RhYmxlSGVhZGVyQ29sdW1uJztcbmltcG9ydCBDaGVja2JveCBmcm9tICcuLi8uLi9DaGVja2JveCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRhYmxlSGVhZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuXHRzdGF0aWMgZGlzcGxheU5hbWUgPSAnVGFibGVIZWFkZXInO1xuXG5cdHN0YXRpYyBwcm9wVHlwZXMgPSB7XG5cdFx0Y2xhc3NOYW1lOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLFxuXHRcdGNoaWxkcmVuOiBSZWFjdC5Qcm9wVHlwZXMubm9kZSxcbiAgICBvblNlbGVjdEFsbDpSZWFjdC5Qcm9wVHlwZXMuZnVuYyxcblx0XHRkaXNwbGF5Q2hlY2tib3g6UmVhY3QuUHJvcFR5cGVzLmJvb2wsXG5cdFx0ZGVmYXVsdFZhbHVlOlJlYWN0LlByb3BUeXBlcy5vYmplY3QsXG5cdFx0b25Tb3J0OlJlYWN0LlByb3BUeXBlcy5mdW5jLFxuXHRcdGFsbFJvd3NTZWxlY3RlZDpSZWFjdC5Qcm9wVHlwZXMuYm9vbCxcblxuXHR9XG5cblxuXHRjb25zdHJ1Y3Rvcihwcm9wcyl7XG5cdFx0c3VwZXIocHJvcHMpO1xuXG5cdFx0dGhpcy5vblNvcnQgPSB0aGlzLm9uU29ydC5iaW5kKHRoaXMpO1xuXG5cdFx0dGhpcy5yZW5kZXJDaGVja2JveCA9IHRoaXMucmVuZGVyQ2hlY2tib3guYmluZCh0aGlzKTtcblx0XHR0aGlzLmNyZWF0ZVRhYmxlSGVhZGVyQ29sdW1uID0gdGhpcy5jcmVhdGVUYWJsZUhlYWRlckNvbHVtbi5iaW5kKHRoaXMpO1xuXG5cblx0fVxuXG5cblx0b25Tb3J0KG5hbWUpe1xuXHRcdGNvbnN0IHtvblNvcnR9ID0gdGhpcy5wcm9wcztcblx0XHRpZighbmFtZSl7XG5cdFx0XHRyZXR1cm4gO1xuXHRcdH1cblx0XHRvblNvcnQgJiYgb25Tb3J0KG5hbWUpO1xuXHR9XG5cblx0cmVuZGVyQ2hlY2tib3goKXtcblxuXHRcdGxldCB7b25TZWxlY3RBbGwsZGlzcGxheUNoZWNrYm94LG9uQ2VsbENsaWNrLGFsbFJvd3NTZWxlY3RlZH0gPSB0aGlzLnByb3BzO1xuXG5cdFx0aWYoIWRpc3BsYXlDaGVja2JveCl7XG5cdFx0XHRyZXR1cm4gbnVsbDtcblx0XHR9XG5cblx0XHQvL3JldHVybiAoIDxUYWJsZUhlYWRlckNvbHVtbiB3aWR0aD17dGhpcy5wcm9wcy5kZWZhdWx0VmFsdWUuY2hlY2tib3hXaWR0aH0+PC9UYWJsZUhlYWRlckNvbHVtbj4pO1xuXHRcdHJldHVybiAoIDxUYWJsZUhlYWRlckNvbHVtbiB3aWR0aD17dGhpcy5wcm9wcy5kZWZhdWx0VmFsdWUuY2hlY2tib3hXaWR0aH0+IDxDaGVja2JveCBvbkNoZWNrPXtvblNlbGVjdEFsbH0gY2hlY2tlZD17YWxsUm93c1NlbGVjdGVkfSAvPjwvVGFibGVIZWFkZXJDb2x1bW4+KTtcblxuXHR9XG5cblxuXHRjcmVhdGVUYWJsZUhlYWRlckNvbHVtbihiYXNlLGluZGV4KXtcblx0XHRyZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KFxuXHRcdFx0YmFzZSxcblx0XHRcdHtcblx0XHRcdFx0a2V5OmluZGV4LFxuXHRcdFx0XHRvblNvcnQ6dGhpcy5vblNvcnRcblx0XHRcdH1cblx0XHQpO1xuXHR9XG5cblx0cmVuZGVyKCkge1xuXG5cdFx0bGV0IHtjbGFzc05hbWUsY2hpbGRyZW59ID0gdGhpcy5wcm9wcztcblxuXHRcdGxldCB0SGVhZGVyID0gW107XG5cdFx0UmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChjaGlsZHJlbiwgKGNoaWxkLGluZGV4KSA9PiB7XG5cdFx0XHRpZiAoIVJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSkgcmV0dXJuO1xuXHRcdFx0Y29uc3Qge211aU5hbWUsbmFtZSxkaXNwbGF5TmFtZX0gPSBjaGlsZC50eXBlO1xuXG5cdFx0XHRpZiAoZGlzcGxheU5hbWUgPT09ICdUYWJsZUhlYWRlckNvbHVtbicpIHtcblx0XHRcdFx0dEhlYWRlci5wdXNoKHRoaXMuY3JlYXRlVGFibGVIZWFkZXJDb2x1bW4oY2hpbGQsaW5kZXgpKSA7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gKFxuXHRcdFx0PHRoZWFkIGNsYXNzTmFtZT17Y2xhc3NOYW1lfSA+XG5cdFx0XHRcdDx0cj5cbiAgICAgICAgICAgICAgICAgIHt0aGlzLnJlbmRlckNoZWNrYm94KCl9XG5cdFx0XHQgICAgICB7dEhlYWRlcn1cblx0XHRcdFx0PC90cj5cblx0XHRcdDwvdGhlYWQ+XG5cdFx0KTtcblxuXHR9XG59XG4iXX0=