'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.common = common;

var _simpleAssign = require('simple-assign');

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _types = require('./types');

var Types = _interopRequireWildcard(_types);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var initState = {

	fnaCorporationList: {
		items: [],
		page: '',
		pageSize: ''
	}
};
function common() {
	var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;
	var action = arguments[1];


	switch (action.type) {

		case Types.LOAD_COMMON_REQUEST:
			{

				return _extends({}, state);
			}

		case Types.LOAD_COMMON_SUCCESS:
			{

				state[action.name] = action.response;
				return (0, _simpleAssign2.default)({}, state);
			}

		case Types.LOAD_COMMON_FAILURE:
			{
				return _extends({}, state);
			}

		default:
			{
				return state;
			}

	}
}