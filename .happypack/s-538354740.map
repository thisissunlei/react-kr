{"version":3,"sources":["src/Components/Lib/RippleContainer/index.js"],"names":["rippleUniqueId","RippleContainerStyles","normalStyle","height","left","position","top","width","rippleStyle","display","background","borderRadius","transform","transition","rippleAnimationStyle","rippleFadeoutStyle","opacity","props","state","ripples","findDOMNode","addEventListener","endRipple","bind","e","domNode","boundingRect","getBoundingClientRect","offsetHeight","offsetWidth","x","clientX","y","clientY","call","ripple","id","push","setState","setTimeout","startRipple","onMouseLeave","onClick","preventDefault","target","parentNode","originalEvent","map","fadeOut","transitioning","transitionComplete","length","propertyName","shift","styles","animateStyle","l","index","rippleStyles","endStyle","item","onMouseDown","onMouseUp","renderRipples","Component","displayName","propTypes","func","object"],"mappings":"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","file":"index.js","sourceRoot":"/Users/tmac_zc/Code/kr-admin","sourcesContent":["import React, { PropTypes } from 'react';\n\nimport ReactDOM from 'react-dom';\n\n\nimport { isTouchDevice, isTransform, noop, slice } from '../Utils';\n\nvar rippleUniqueId = 0;\nimport { transitionEnd } from '../Utils';\n\nconst RippleContainerStyles = {\n  normalStyle: {\n    height: '100%',\n    left: 0,\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n\n  rippleStyle: {\n    display: 'block',\n    position: 'absolute',\n    background: 'rgba(0, 0, 0, 0.04)',\n    borderRadius: '50%',\n    transform: 'scale(0)',\n    transition: 'transform .25s linear, opacity .25s linear .2s'\n  },\n\n  rippleAnimationStyle: {\n    transform: 'scale(2)'\n  },\n\n  rippleFadeoutStyle: {\n    opacity: '0'\n  }\n};\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ripples: []\n    };\n  }\n\n  static displayName = 'RippleContainer'\n  static propTypes = {\n    onClick: PropTypes.func,\n    styles: PropTypes.object\n  }\n\n  componentDidMount() {\n    if (!transitionEnd) {\n      return;\n    }\n    ReactDOM.findDOMNode(this)\n      .addEventListener(transitionEnd, this.endRipple.bind(this));\n  }\n\n  onMouseDown(e) {\n    const domNode = ReactDOM.findDOMNode(this);\n    const boundingRect = domNode.getBoundingClientRect();\n    let height = domNode.offsetHeight;\n    let width = domNode.offsetWidth;\n    if (width > height) {\n      height = width;\n    } else {\n      width = height;\n    }\n    const x = e.clientX - boundingRect.left - width / 2;\n    const y = e.clientY - boundingRect.top - height / 2;\n\n    const ripples = slice.call(this.state.ripples);\n    let ripple = {\n      id: rippleUniqueId++,\n      height: height,\n      width: width,\n      x: x,\n      y: y\n    };\n    ripples.push(ripple);\n\n    this.setState({ ripples: ripples });\n\n    setTimeout(this.startRipple.bind(this), 0);\n  }\n\n  onMouseUp(e) {\n    this.onMouseLeave();\n    const { onClick } = this.props;\n    if (onClick) {\n      e.preventDefault();\n      onClick({\n        target: ReactDOM.findDOMNode(this).parentNode,\n        originalEvent: e\n      });\n    }\n  }\n\n  onMouseLeave() {\n    // fade out\n    const ripples = slice.call(this.state.ripples)\n      .map(ripple => {\n        ripple.fadeOut = true;\n        ripple.transitioning = false;\n        ripple.transitionComplete = true;\n        return ripple;\n      });\n    this.setState({ ripples: ripples });\n\n  }\n\n  startRipple() {\n    let ripples = slice.call(this.state.ripples);\n    ripples[ripples.length - 1].transitioning = true;\n    this.setState({ ripples: ripples });\n  }\n\n  endRipple(e) {\n    let ripples = slice.call(this.state.ripples);\n    if (isTransform(e.propertyName)) {\n      ripples[0].transitioning = false;\n      ripples[0].transitionComplete = true;\n      this.setState({ ripples: ripples });\n\n    } else if (e.propertyName === 'opacity') {\n      ripples.shift();\n      this.setState({ ripples: ripples });\n    }\n  }\n\n  renderRipples(ripples, styles, animateStyle) {\n    const l = ripples.length;\n    return ripples.map((ripple, index) => {\n      const rippleStyles = [styles];\n      if (ripple.transitioning || ripple.transitionComplete) {\n        rippleStyles.push(animateStyle);\n      }\n\n      if (index < (l - 1) || (ripple.transitionComplete && ripple.fadeOut)) {\n        rippleStyles.push({ opacity: '0' });\n      }\n\n      rippleStyles.push({\n        height: ripple.height,\n        left: ripple.x,\n        top: ripple.y,\n        width: ripple.width\n      });\n\n      let endStyle = {};\n      rippleStyles.map(function(item,index){\n          endStyle = Object.assign({},endStyle,item);\n      });\n\n\n      return (\n        <div\n          key={ ripple.id }\n          ref={ 'ripple_' + ripple.id }\n          style={endStyle} />\n      );\n    });\n  }\n\n  render() {\n    const {\n      styles\n    } = this.props;\n\n    const {\n      ripples\n    } = this.state;\n\n    const {\n      normalStyle,\n      rippleStyle,\n      rippleAnimationStyle\n    } = RippleContainerStyles;\n\n    let endStyle = {};\n\n     endStyle = Object.assign({},normalStyle,styles);\n\n    return (\n      <div\n        onMouseDown={ !isTouchDevice ? this.onMouseDown.bind(this) : noop }\n        onMouseLeave={ !isTouchDevice ? this.onMouseLeave.bind(this) : noop }\n        onMouseUp={ !isTouchDevice ? this.onMouseUp.bind(this) : noop }\n\n        onTouchCancel={ isTouchDevice ? this.onMouseLeave.bind(this) : noop }\n        onTouchEnd={ isTouchDevice ? this.onMouseUp.bind(this) : noop }\n        onTouchStart={ isTouchDevice ? this.onMouseDown.bind(this) : noop }\n        style={endStyle}>\n        { this.renderRipples(ripples, rippleStyle, rippleAnimationStyle) }\n      </div>\n    );\n  }\n}\n"]}