'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.loadPlan = loadPlan;
exports.createPlan = createPlan;
exports.setNowDate = setNowDate;

var _Utils = require('../../Utils');

var _types = require('./types');

var Types = _interopRequireWildcard(_types);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function loadPlan(companyId) {

	return {
		types: [Types.LOAD_PLAN_REQUEST, Types.LOAD_PLAN_SUCCESS, Types.LOAD_PLAN_FAILURE],
		//shouldCallAPI:(state)=>state.companys
		callAPI: function callAPI() {
			return _Utils.fetch.get('demo');
		},
		payload: {}
	};
}

function createPlan(request) {
	return {
		types: [Types.CREATE_PLAN_REQUEST, Types.CREATE_PLAN_SUCCESS, Types.CREATE_PLAN_FAILURE],
		//shouldCallAPI:(state)=>state.companys
		callAPI: function callAPI() {
			return _Utils.fetch.get('demo');
		},
		payload: _extends({}, request)
	};
}

function setNowDate(nowDate) {
	return {
		type: Types.SET_NOW_DATE,
		response: nowDate
	};
}