'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Redux = require('kr/Redux');

var _reduxForm = require('redux-form');

var _krUi = require('kr-ui');

var _dateformat = require('dateformat');

var _dateformat2 = _interopRequireDefault(_dateformat);

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ImportCard = function (_Component) {
	_inherits(ImportCard, _Component);

	function ImportCard(props) {
		_classCallCheck(this, ImportCard);

		var _this2 = _possibleConstructorReturn(this, (ImportCard.__proto__ || Object.getPrototypeOf(ImportCard)).call(this, props));

		_this2.onCancel = function () {
			var onCancel = _this2.props.onCancel;

			onCancel && onCancel();
		};

		_this2.checkName = function (person) {
			console.log(person);
			var oldUser = _this2.state.oldUser;

			if (oldUser && person.value && person.value == oldUser) {
				_krUi.Message.warntimeout('原领用人和领用人不能为同一人', 'error');
			}
		};

		_this2.onSubmit = function (values) {
			console.log('values', values);
			var params = {
				fromId: values.originUser,
				toId: values.nowUser
			};
			if (values.nowUser && values.originUser && values.nowUser == values.originUser) {
				_krUi.Message.warntimeout('原领用人和领用人不能为同一人', 'error');
				console.log('原领用人和领用人不能为同一人');
				return;
			}

			var _this = _this2;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('transferMemberCard', params)).then(function (response) {
				var onSubmit = _this.props.onSubmit;

				onSubmit && onSubmit(values);
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
		};

		_this2.changeName = function (values) {
			console.log(values);
		};

		_this2.selectOldUser = function (value) {
			var _this = _this2;
			_Redux.Store.dispatch((0, _reduxForm.change)('ImportCardForm', 'originUser', value));
			_Redux.Store.dispatch(_Redux.Actions.callAPI('memberCardNum', { receiveId: value })).then(function (response) {
				_this.setState({
					count: response,
					oldUser: value
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
		};

		_this2.state = {
			beginCard: 0,
			endCard: 0,
			count: '0',
			communityText: '',
			companyText: '',
			options: [],
			selectSourceOption: [],
			searchForm: false,
			oldUser: '',
			searchParams: {}
		};

		return _this2;
	}

	_createClass(ImportCard, [{
		key: 'componentWillMount',
		value: function componentWillMount() {
			// this.getMenberList();
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    error = _props.error,
			    handleSubmit = _props.handleSubmit,
			    pristine = _props.pristine,
			    reset = _props.reset,
			    content = _props.content,
			    filter = _props.filter;

			var communityText = '';
			var count = this.state.count;

			var nameList = [{ value: 1, label: 'aa' }, { value: 2, label: 'bb' }, { value: 3, label: 'ab' }, { value: 5, label: 'cd' }];
			return _react2.default.createElement(
				'form',
				{ onSubmit: handleSubmit(this.onSubmit), style: { marginTop: '37px' } },
				_react2.default.createElement(_krUi.KrField, { name: 'originUser', component: 'SearchList', label: '\u539F\u9886\u7528\u4EBA', onChange: this.changeName, onSubmit: this.selectOldUser }),
				_react2.default.createElement(_krUi.KrField, { name: 'nowUser', component: 'searchPersonel', label: '\u9886\u7528\u4EBA', onChange: this.checkName }),
				_react2.default.createElement(_krUi.KrField, { name: 'count', component: 'labelText', label: '\u8F6C\u79FB\u6570\u91CF', value: count }),
				_react2.default.createElement(
					_krUi.Grid,
					{ style: { margin: "20px 0 3px -10px" } },
					_react2.default.createElement(
						_krUi.Row,
						null,
						_react2.default.createElement(
							_krUi.ListGroup,
							null,
							_react2.default.createElement(
								_krUi.ListGroupItem,
								{ style: { width: '165px', textAlign: 'right', padding: 0, paddingRight: 15 } },
								_react2.default.createElement(_krUi.Button, { label: '\u786E\u5B9A', type: 'submit' })
							),
							_react2.default.createElement(
								_krUi.ListGroupItem,
								{ style: { width: '150px', textAlign: 'left', padding: 0, paddingLeft: 15 } },
								_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', type: 'button', cancle: true, onTouchTap: this.onCancel })
							)
						)
					)
				)
			);
		}
	}]);

	return ImportCard;
}(_react.Component);

var validate = function validate(values) {

	var errors = {};

	if (!values.originUser) {
		errors.originUser = '请选择原领用人';
	}
	if (!values.nowUser) {
		errors.nowUser = '请选择领用人';
	}

	return errors;
};

var _default = ImportCard = (0, _reduxForm.reduxForm)({
	form: 'ImportCardForm',
	validate: validate,
	enableReinitialize: true,
	keepDirtyOnReinitialize: true
})(ImportCard);

exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(ImportCard, 'ImportCard', '/Users/liuyihao/Code/kr-admin/src/Containers/Member/MemberManage/Card/ChangeCard.js');

	__REACT_HOT_LOADER__.register(validate, 'validate', '/Users/liuyihao/Code/kr-admin/src/Containers/Member/MemberManage/Card/ChangeCard.js');

	__REACT_HOT_LOADER__.register(_default, 'default', '/Users/liuyihao/Code/kr-admin/src/Containers/Member/MemberManage/Card/ChangeCard.js');
}();

;
//# sourceMappingURL=data:application/json;base64,