'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _simpleAssign = require('simple-assign');

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _redux = require('redux');

var _krUi = require('kr-ui');

var _Redux = require('kr/Redux');

var _dateformat = require('dateformat');

var _dateformat2 = _interopRequireDefault(_dateformat);

var _reduxForm = require('redux-form');

var _reactRouter = require('react-router');

var _BasicInfo = require('./BasicInfo');

var _BasicInfo2 = _interopRequireDefault(_BasicInfo);

var _SearchParam = require('./SearchParam');

var _SearchParam2 = _interopRequireDefault(_SearchParam);

var _SearchForm = require('./SearchForm');

var _SearchForm2 = _interopRequireDefault(_SearchForm);

var _ReceivedBtnForm = require('./ReceivedBtnForm');

var _ReceivedBtnForm2 = _interopRequireDefault(_ReceivedBtnForm);

var _QuitBtnForm = require('./QuitBtnForm');

var _QuitBtnForm2 = _interopRequireDefault(_QuitBtnForm);

var _SwitchBtnForm = require('./SwitchBtnForm');

var _SwitchBtnForm2 = _interopRequireDefault(_SwitchBtnForm);

var _BusinessBtnForm = require('./BusinessBtnForm');

var _BusinessBtnForm2 = _interopRequireDefault(_BusinessBtnForm);

var _AccountBtnForm = require('./AccountBtnForm');

var _AccountBtnForm2 = _interopRequireDefault(_AccountBtnForm);

var _SupplementBtnForm = require('./SupplementBtnForm');

var _SupplementBtnForm2 = _interopRequireDefault(_SupplementBtnForm);

var _ShiftBtnForm = require('./ShiftBtnForm');

var _ShiftBtnForm2 = _interopRequireDefault(_ShiftBtnForm);

var _ReceiveDetailTop = require('./ReceiveDetailTop');

var _ReceiveDetailTop2 = _interopRequireDefault(_ReceiveDetailTop);

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//获取单条的金额
var fiMoney = '';
//得到单条数据
var fiItem = {};

var ViewForm = function (_Component) {
	_inherits(ViewForm, _Component);

	function ViewForm(props, context) {
		_classCallCheck(this, ViewForm);

		return _possibleConstructorReturn(this, (ViewForm.__proto__ || Object.getPrototypeOf(ViewForm)).call(this, props, context));
	}

	_createClass(ViewForm, [{
		key: 'render',
		value: function render() {
			var items = this.props.detail;

			if (!items.fileList) {
				items.fileList = [];
			}

			return _react2.default.createElement(
				'div',
				{ className: 'm-watch-detail' },
				_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, component: 'labelText', label: '\u652F\u4ED8\u65B9\u5F0F', value: items.accountName, inline: false, defaultValue: '\u65E0' }),
				_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, label: '\u4ED8\u6B3E\u65E5\u671F', component: 'labelText', inline: false, value: items.occuryear, defaultValue: '\u65E0', type: 'date' }),
				_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, label: '\u64CD\u4F5C\u65F6\u95F4', component: 'labelText', value: items.operatedate, format: 'yyyy-mm-dd hh:mm:ss', type: 'date', inline: false, defaultValue: '\u65E0' }),
				_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, component: 'labelText', label: '\u4EA4\u6613\u7F16\u53F7', value: items.tradingCode, inline: false, defaultValue: '\u65E0' }),
				_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, component: 'labelText', label: '\u64CD\u4F5C\u4EBA', value: items.optUserName, inline: false, defaultValue: '\u65E0' }),
				_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, component: 'labelText', label: '\u91D1\u989D\uFF08\u5143\uFF09', value: items.finaflowAmount, inline: false, defaultValue: '\u65E0' }),
				_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, component: 'labelText', label: '\u5907\u6CE8', value: items.finaflowdesc, inline: false, defaultValue: '\u65E0' }),
				_react2.default.createElement(
					_krUi.KrField,
					{ grid: 1 / 2, component: 'group', label: '\u4E0A\u4F20\u9644\u4EF6', inline: false, defaultValue: '\u65E0' },
					items.fileList.map(function (item, index) {
						return _react2.default.createElement(_krUi.Button, { label: item.fileName, type: 'link', href: item.fileUrl, key: index });
					})
				)
			);
		}
	}]);

	return ViewForm;
}(_react.Component);

var AttributeSetting = function (_Component2) {
	_inherits(AttributeSetting, _Component2);

	_createClass(AttributeSetting, [{
		key: 'getChildContext',
		value: function getChildContext() {
			return {
				refresh: this.refresh
			};
		}
	}]);

	function AttributeSetting(props, context) {
		_classCallCheck(this, AttributeSetting);

		var _this3 = _possibleConstructorReturn(this, (AttributeSetting.__proto__ || Object.getPrototypeOf(AttributeSetting)).call(this, props, context));

		_this3.getMoneyALLTrue = function () {
			var _this = _this3;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('getFlowRemainMoney', {
				flowId: fiItem.id
			})).then(function (response) {
				_this.setState({
					fiMoney: response
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
		};

		_this3.openShiftBtn = function () {
			var _this = _this3;
			var items = _this3.state.selectedList;
			items.map(function (item, index) {
				if (typeof item.finaflowAmount == 'number') {
					fiMoney = item.finaflowAmount;
					fiItem = item;
				}
			});
			if (_this3.state.listValues.length == 0) {
				_krUi.Message.error('请选择一条数据进行转移');
			} else if (_this3.state.listValues.length > 1) {
				_krUi.Message.error('只能选择一条数据');
			} else if (fiMoney >= 0) {
				_krUi.Message.error('金额必须为负且存在可用金额');
			} else {
				_this3.setState({
					openShift: !_this3.state.openShift
				});
				_Redux.Store.dispatch(_Redux.Actions.callAPI('getTransferData', {
					flowId: fiItem.id,
					mainbillId: _this.props.params.orderId
				})).then(function (response) {
					_this.setState({
						shiftData: response.propData,
						fiMoney: response.remainMoney
					});
				}).catch(function (err) {
					_krUi.Message.error(err.message);
				});
			}
		};

		_this3.closeShiftBtn = function () {
			_this3.setState({
				openShift: !_this3.state.openShift
			});
		};

		_this3.onShiftBtnSubmit = function (params) {
			var shiftData = _this3.state.shiftData;

			params = (0, _simpleAssign2.default)({}, params);
			params.propJasonStr = {};
			shiftData.map(function (item, index) {
				var key = item.id;
				if (params.hasOwnProperty('fix' + key) && params['fix' + key]) {
					params.propJasonStr[key] = params['fix' + key];
					delete params['fix' + key];
				}
			});
			params.propJasonStr = JSON.stringify(params.propJasonStr);

			if (params.propJasonStr == '{}') {
				_krUi.Message.error('至少填写一项金额');
				return;
			}

			var _this = _this3;
			params.operatedate = (0, _dateformat2.default)(params.operatedate, "yyyy-mm-dd hh:MM:ss");
			_Redux.Store.dispatch(_Redux.Actions.callAPI('transferPayment', {}, params)).then(function () {
				_this.refresh();
				_this.setState({
					openShift: !_this.state.openShift,
					isLoading: true,
					listValues: ''
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
		};

		_this3.historyIncomed = function () {
			var isRunningIncome = _this3.state.isRunningIncome;

			if (isRunningIncome == 0) {

				var _this = _this3;
				var params = _this3.props.params;

				_this.setState({
					isRunningIncome: 1
				});
				_Redux.Store.dispatch(_Redux.Actions.callAPI('runStationIncome', {
					mainbillId: params.orderId
				})).then(function (response) {
					setTimeout(function () {
						_this.setState({
							isRunningIncome: 2,
							colorClassName: 'historyIncomeGray'
						});
					}, 1000);
				}).catch(function (err) {
					_krUi.Message.error(err.message);
					_this.setState({

						isRunningIncome: 0

					});
				});
			}
		};

		_this3.snackTipClose = function () {

			var _this = _this3;
			var params = _this3.props.params;

			_Redux.Store.dispatch(_Redux.Actions.callAPI('removeRunningTag', {}, {
				mainbillId: params.orderId
			})).then(function (response) {
				//_this.refresh();
				window.location.reload();
				_this.setState({
					isRunningIncome: 0,
					colorClassName: 'historyIncome'
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
		};

		_this3.initializeSnack = function () {
			var open = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
			var title = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '正在补历史收入...';
			var titleAfter = arguments[2];
			var color = arguments[3];


			var style = {
				'background': color,
				'position': 'fixed',
				'top': '10px',
				'left': 0,
				'right': 0
			};

			return _react2.default.createElement(_krUi.SnackTip, { style: style, open: open, title: title, titleAfter: titleAfter, onClose: _this3.snackTipClose });
		};

		_this3.renderSnack = function () {
			var isRunningIncome = _this3.state.isRunningIncome;

			if (isRunningIncome == 1) {
				return _this3.initializeSnack(true, '正在补历史收入...', '', '#69bbf0');
			} else if (isRunningIncome == 0) {
				return _this3.initializeSnack(false, '未完成');
			} else if (isRunningIncome == 2) {

				return _this3.initializeSnack(true, '补历史收入已完成!', '确认', '#75c7bc');
			}
		};

		_this3.renderReceived = function () {
			return _react2.default.createElement(
				_krUi.Table,
				{ style: { marginTop: 60 }, ajax: true, loading: _this3.state.isLoading, onSelect: _this3.onSelect, onLoaded: _this3.onLoaded, ajaxUrlName: 'getAccountNewFlow', ajaxParams: _this3.state.params, onOperation: _this3.onOperation },
				_react2.default.createElement(
					_krUi.TableHeader,
					null,
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u4EA4\u6613\u7F16\u53F7'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u4EA4\u6613\u65E5\u671F'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u652F\u4ED8\u65B9\u5F0F'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u7C7B\u522B'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u6B3E\u9879'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u91D1\u989D'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u5907\u6CE8'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u64CD\u4F5C'
					)
				),
				_react2.default.createElement(
					_krUi.TableBody,
					null,
					_react2.default.createElement(
						_krUi.TableRow,
						null,
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'tradingCode', style: { width: 160, overflow: "visible" }, component: function component(value, oldValue) {
								var TooltipStyle = "";
								if (value == '') {
									value = '无';
								}
								if (value.length == "") {
									TooltipStyle = "none";
								} else {
									TooltipStyle = "block";
								}
								return _react2.default.createElement(
									'div',
									{ style: { display: TooltipStyle, paddingTop: 5 }, className: 'financeDetail-hover' },
									_react2.default.createElement(
										'span',
										{ className: 'tableOver', style: { maxWidth: 160, display: "inline-block" } },
										value
									),
									_react2.default.createElement(
										_krUi.Tooltip,
										{ offsetTop: 5, place: 'top' },
										value
									)
								);
							} }),
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'occuryear', type: 'date', format: 'yyyy-mm-dd' }),
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'accountName' }),
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'typeName' }),
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'propertyName' }),
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'finaflowAmount' }),
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'finaflowdesc', style: { width: 160, overflow: "visible" }, component: function component(value, oldValue) {
								var TooltipStyle = "";
								if (value.length == "") {
									TooltipStyle = "none";
								} else {
									TooltipStyle = "block";
								}
								return _react2.default.createElement(
									'div',
									{ style: { display: TooltipStyle, paddingTop: 5 }, className: 'financeDetail-hover' },
									_react2.default.createElement(
										'span',
										{ className: 'tableOver', style: { maxWidth: 160, display: "inline-block" } },
										value
									),
									_react2.default.createElement(
										_krUi.Tooltip,
										{ offsetTop: 5, place: 'top' },
										_react2.default.createElement(
											'div',
											{ style: { width: "260px", whiteSpace: "normal", lineHeight: "22px" } },
											value
										)
									)
								);
							} }),
						_react2.default.createElement(
							_krUi.TableRowColumn,
							null,
							_react2.default.createElement(_krUi.Button, { label: '\u67E5\u770B', type: 'operation', operation: 'view' })
						)
					)
				),
				_react2.default.createElement(_krUi.TableFooter, null)
			);
		};

		_this3.renderIncomed = function () {
			return _react2.default.createElement(
				_krUi.Table,
				{ style: { marginTop: 60 }, ajax: true, loading: _this3.state.isLoading, onSelect: _this3.onSelect, onLoaded: _this3.onLoaded, ajaxUrlName: 'getAccountNewFlow', ajaxParams: _this3.state.params, onOperation: _this3.onOperation },
				_react2.default.createElement(
					_krUi.TableHeader,
					null,
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u4EA4\u6613\u7F16\u53F7'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u4EA4\u6613\u65E5\u671F'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u652F\u4ED8\u65B9\u5F0F'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u7C7B\u522B'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u6B3E\u9879'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u91D1\u989D'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u5DE5\u4F4D'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u6708\u79DF\u91D1'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u5907\u6CE8'
					),
					_react2.default.createElement(
						_krUi.TableHeaderColumn,
						null,
						'\u64CD\u4F5C'
					)
				),
				_react2.default.createElement(
					_krUi.TableBody,
					null,
					_react2.default.createElement(
						_krUi.TableRow,
						null,
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'tradingCode', style: { width: 160, overflow: "visible" }, component: function component(value, oldValue) {
								var TooltipStyle = "";
								if (value == '') {
									value = '无';
								}
								if (value.length == "") {
									TooltipStyle = "none";
								} else {
									TooltipStyle = "block";
								}
								return _react2.default.createElement(
									'div',
									{ style: { display: TooltipStyle, paddingTop: 5 }, className: 'financeDetail-hover' },
									_react2.default.createElement(
										'span',
										{ className: 'tableOver', style: { maxWidth: 160, display: "inline-block" } },
										value
									),
									_react2.default.createElement(
										_krUi.Tooltip,
										{ offsetTop: 5, place: 'top' },
										value
									)
								);
							} }),
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'occuryear', type: 'date', format: 'yyyy-mm-dd' }),
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'accountName' }),
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'typeName' }),
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'propertyName' }),
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'finaflowAmount' }),
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'stationNum' }),
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'monthRent' }),
						_react2.default.createElement(_krUi.TableRowColumn, { name: 'finaflowdesc', style: { width: 160, overflow: "visible" }, component: function component(value, oldValue) {
								var TooltipStyle = "";
								if (value.length == "") {
									TooltipStyle = "none";
								} else {
									TooltipStyle = "block";
								}
								return _react2.default.createElement(
									'div',
									{ style: { display: TooltipStyle, paddingTop: 5 }, className: 'financeDetail-hover' },
									_react2.default.createElement(
										'span',
										{ className: 'tableOver', style: { maxWidth: 160, display: "inline-block" } },
										value
									),
									_react2.default.createElement(
										_krUi.Tooltip,
										{ offsetTop: 5, place: 'top' },
										_react2.default.createElement(
											'div',
											{ style: { width: "260px", whiteSpace: "normal", lineHeight: "22px" } },
											value
										)
									)
								);
							} }),
						_react2.default.createElement(
							_krUi.TableRowColumn,
							null,
							_react2.default.createElement(_krUi.Button, { label: '\u67E5\u770B', type: 'operation', operation: 'view' })
						)
					)
				),
				_react2.default.createElement(_krUi.TableFooter, null)
			);
		};

		_this3.typeSelectRender = function () {
			var params = _this3.state.params;


			var parentBtn = params.accountType;
			var childBtn = params.childType;
			if (parentBtn == 'INCOME' && childBtn == 'gongweishouru' || parentBtn == 'INCOME' && childBtn == 'basic') {
				return _this3.renderIncomed();
			} else {
				return _this3.renderReceived();
			}
		};

		_this3.iconClose = function () {
			_this3.setState({
				openRight: !_this3.state.openRight,
				liveMoneyValue: 0
			});
			_this3.receivedBtnFormChangeValues = {};
		};

		_this3.contractContinue = function (type, detailid) {
			var basicInfo = _this3.state.basicInfo;
			var params = _this3.props.params;

			var orderType;
			if (type == 1) {
				orderType = 'admit';
			} else if (type == 2) {
				orderType = 'join';
			} else if (type == 3) {
				orderType = 'increase';
			} else if (type == 4) {
				orderType = 'renew';
			} else if (type == 5) {
				orderType = 'reduce';
			} else if (type == 6) {
				orderType = 'exit';
			}
			var url = './#/operation/customerManage/' + basicInfo.customerid + '/order/' + params.orderId + '/agreement/' + orderType + '/' + detailid + '/detail';
			window.open(url);
		};

		_this3.calcBalance = function (input, name, nameList) {
			input.value = Math.round(input.value * 100);
			_this3.receivedBtnFormChangeValues[input.name] = input.value;
			var receivedBtnFormChangeValues = _this3.receivedBtnFormChangeValues;
			var totalPayment = receivedBtnFormChangeValues.totalPayment;

			var liveMoneyValue = totalPayment ? totalPayment : 0;

			if (input.value === 0) {
				var name1 = name + '1',
				    name2 = name + '3';
				receivedBtnFormChangeValues[name1] = 0;
				receivedBtnFormChangeValues[name2] = 0;
				if (nameList && nameList.length > 0) {
					nameList.map(function (item, index) {
						receivedBtnFormChangeValues[item] = 0;
					});
				}
			}

			for (var item in receivedBtnFormChangeValues) {
				if (receivedBtnFormChangeValues.hasOwnProperty(item) && item != 'totalPayment') {
					liveMoneyValue -= receivedBtnFormChangeValues[item];
				}
			}

			liveMoneyValue = liveMoneyValue / 100;

			_this3.setState({
				liveMoneyValue: liveMoneyValue
			});
		};

		_this3.onSearch = _this3.onSearch.bind(_this3);
		_this3.onSubmit = _this3.onSubmit.bind(_this3);
		_this3.onAddReceivedSubmit = _this3.onAddReceivedSubmit.bind(_this3);
		_this3.onQuitSubmit = _this3.onQuitSubmit.bind(_this3);
		_this3.onSwitchSubmit = _this3.onSwitchSubmit.bind(_this3);
		_this3.onBusinessSubmit = _this3.onBusinessSubmit.bind(_this3);
		_this3.onConfrimSubmit = _this3.onConfrimSubmit.bind(_this3);
		_this3.onSupplementSubmit = _this3.onSupplementSubmit.bind(_this3);
		_this3.onOperation = _this3.onOperation.bind(_this3);
		_this3.onLoaded = _this3.onLoaded.bind(_this3);
		_this3.onSelect = _this3.onSelect.bind(_this3);

		_this3.openSearchDialog = _this3.openSearchDialog.bind(_this3);
		_this3.openReceivedBtn = _this3.openReceivedBtn.bind(_this3);
		_this3.openQuitBtn = _this3.openQuitBtn.bind(_this3);
		_this3.openSwitchBtn = _this3.openSwitchBtn.bind(_this3);
		_this3.openBusinessBtn = _this3.openBusinessBtn.bind(_this3);
		_this3.openAccountBtn = _this3.openAccountBtn.bind(_this3);
		_this3.openSupplementBtn = _this3.openSupplementBtn.bind(_this3);
		_this3.openViewDialog = _this3.openViewDialog.bind(_this3);

		_this3.closeSearchDialog = _this3.closeSearchDialog.bind(_this3);
		_this3.closeReceivedDialog = _this3.closeReceivedDialog.bind(_this3);
		_this3.closeSwitchBtn = _this3.closeSwitchBtn.bind(_this3);
		_this3.closeQuitBtn = _this3.closeQuitBtn.bind(_this3);
		_this3.closeBusinessBtn = _this3.closeBusinessBtn.bind(_this3);
		_this3.closeAddaccount = _this3.closeAddaccount.bind(_this3);
		_this3.closeViewDialog = _this3.closeViewDialog.bind(_this3);

		_this3.initBasicInfo = _this3.initBasicInfo.bind(_this3);
		_this3.searchUpperFun = _this3.searchUpperFun.bind(_this3);

		_this3.refresh = _this3.refresh.bind(_this3);

		_this3.state = {
			params: {
				accountType: 'PAYMENT',
				childType: 'basic',
				propInfo: 'SETTLED',
				orderId: _this3.props.params.orderId,
				page: 1,
				pageSize: 30,
				index: ''
			},
			itemDetail: {},
			//为了判断和获取选中的条的id
			fiMoney: '',
			fiItem: '',
			//这几个是上下的数据
			basicInfo: {},
			detailPayment: [],
			detailIncome: [],
			detailBalance: '',
			//高级查询
			codeList: [],
			typeList: [],
			receivedList: [],

			//这三个是为了挑出选定的那个复选框
			list: [],
			selectedList: [],
			listValues: [],

			payWayList: [],
			accountDetail: [],
			contractList: [],
			stationPayment: {},

			//回款合同
			contractReceive: [],
			//回款合同顶部
			contractTopReceive: [],

			//转移
			shiftData: [],

			openSearch: false,
			openReceivedBtn: false,
			openQuitBtn: false,
			openSwitchBtn: false,
			openBusinessBtn: false,
			openAddaccountBtn: false,
			openSupplementBtn: false,
			openShift: false,
			isLoading: true,
			isInitLoading: true,
			openView: false,
			openRight: false,
			openContract: false,
			colorClassName: '',
			isRunningIncome: 0,
			//回款总金额和余额变化
			liveMoneyValue: 0
		};
		//回款计算余额所需字段值
		_this3.receivedBtnFormChangeValues = {};
		return _this3;
	}

	_createClass(AttributeSetting, [{
		key: 'refresh',
		value: function refresh() {
			//console.log('00000')
			var _this = this;
			this.setState({
				isInitLoading: true
			}, function () {
				window.setTimeout(function () {
					_this.initBasicInfo();
				}, 1000);
			});
		}

		//打开遮罩层区域

	}, {
		key: 'openSearchDialog',
		value: function openSearchDialog() {
			this.searchUpperFun();
			this.setState({
				openSearch: !this.state.openSearch
			});
		}
	}, {
		key: 'openReceivedBtn',
		value: function openReceivedBtn() {

			this.receivedBtnFormChangeValues = {};
			_Redux.Store.dispatch((0, _reduxForm.initialize)('receivedBtnForm', {}));
			var _this = this;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('getPaymentActData', {
				mainbillId: _this.props.params.orderId
			})).then(function (response) {
				var payWayList = [];
				var contractReceive = [];
				response.payWay.map(function (item, index) {
					var list = {};
					list.value = item.id;
					list.label = item.accountname;
					payWayList.push(list);
				});
				response.contract.map(function (item, index) {
					var lists = {};
					lists.label = item.contactName + '-' + item.contractcode;
					lists.value = item.contactType;
					lists.contractId = item.detailid;
					contractReceive.push(lists);
				});

				var noContract = {
					'value': '000',
					'label': '无合同'
				};
				contractReceive.push(noContract);
				_this.setState({
					payWayList: payWayList,
					accountDetail: response.propData,
					contractTopReceive: response.contract,
					contractReceive: contractReceive
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
			this.setState({
				openRight: !this.state.openRight
			});
		}
	}, {
		key: 'openQuitBtn',
		value: function openQuitBtn() {
			var items = this.state.selectedList;
			var _this = this;
			items.map(function (item, index) {
				if (typeof item.finaflowAmount == 'number') {
					fiMoney = item.finaflowAmount;
					fiItem = item;
				}
			});
			if (this.state.listValues.length == 0) {
				_krUi.Message.error('请选择一条回款数据进行退款');
			} else if (this.state.listValues.length > 1) {
				_krUi.Message.error('只能选择一条数据');
			} else if (fiMoney >= 0) {
				_krUi.Message.error('金额必须为负且存在可用金额');
			} else {
				this.getMoneyALLTrue();
				this.setState({
					openQuitBtn: !this.state.openQuitBtn
				});
			}
		}
	}, {
		key: 'openSwitchBtn',
		value: function openSwitchBtn() {

			var items = this.state.selectedList;
			var _this = this;
			items.map(function (item, index) {
				if (typeof item.finaflowAmount == 'number') {
					fiMoney = item.finaflowAmount;
					fiItem = item;
				}
			});

			if (this.state.listValues.length == 0) {
				_krUi.Message.error('请选择一条回款数据进行转押金');
			} else if (this.state.listValues.length > 1) {
				_krUi.Message.error('只能选择一条数据');
			} else if (fiMoney >= 0) {
				_krUi.Message.error('金额必须为负且存在可用金额');
			} else {
				this.setState({
					openSwitchBtn: !this.state.openSwitchBtn
				});
				this.getMoneyALLTrue();
				//console.log('2222',fiItem.id);
				_Redux.Store.dispatch(_Redux.Actions.callAPI('findContractListById', {
					mainbillId: _this.props.params.orderId
				})).then(function (response) {
					var receivedList = [];
					response.map(function (item, index) {
						var list = {};
						list.value = item.id;
						list.label = item.contractcode;
						receivedList.push(list);
					});
					_this.setState({
						receivedList: receivedList
					});
				}).catch(function (err) {
					_krUi.Message.error(err.message);
				});
			}
		}
	}, {
		key: 'openBusinessBtn',
		value: function openBusinessBtn() {
			var items = this.state.selectedList;
			var _this = this;
			items.map(function (item, index) {
				if (typeof item.finaflowAmount == 'number') {
					fiMoney = item.finaflowAmount;
					fiItem = item;
				}
			});
			if (this.state.listValues.length == 0) {
				_krUi.Message.error('请选择一条回款数据进行转营收');
			} else if (this.state.listValues.length > 1) {
				_krUi.Message.error('只能选择一条数据');
			} else if (fiMoney >= 0) {
				_krUi.Message.error('金额必须为负且存在可用金额');
			} else {
				this.getMoneyALLTrue();
				this.setState({
					openBusinessBtn: !this.state.openBusinessBtn
				});
			}
		}
	}, {
		key: 'openAccountBtn',
		value: function openAccountBtn() {
			var _this = this;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('getOnNewAccountData', {
				mainbillId: _this.props.params.orderId
			})).then(function (response) {
				var payWayList = [];
				var contractList = [];
				var stationPayment = {};
				response.payWay.map(function (item, index) {
					var list = {};
					list.value = item.id;
					list.label = item.accountname;
					payWayList.push(list);
				});
				if (response.contractList) {
					response.contractList.map(function (item, index) {
						var list = {};
						list.value = item.id;
						list.label = item.contractcode;
						contractList.push(list);
					});
				} else if (!response.contractList) {
					contractList = '无';
				}
				if (response.stationPayment) {
					stationPayment = response.stationPayment;
				} else if (!response.stationPayment) {
					stationPayment = '无';
				}
				_this.setState({
					payWayList: payWayList,
					accountDetail: response.propData,
					contractList: contractList,
					stationPayment: stationPayment
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
			this.setState({
				openAddaccountBtn: !this.state.openAddaccountBtn
			});
		}
	}, {
		key: 'openSupplementBtn',
		value: function openSupplementBtn() {
			this.setState({
				openSupplementBtn: !this.state.openSupplementBtn
			});
		}
	}, {
		key: 'openViewDialog',
		value: function openViewDialog(itemDetail) {
			var _this = this;
			var id = itemDetail.id;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('getAccountFlowDetail', {
				id: id
			})).then(function (response) {
				_this.setState({
					itemDetail: response
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
			this.setState({
				openView: !this.state.openView
			});
		}
	}, {
		key: 'closeReceivedDialog',


		//关闭遮罩层区域
		value: function closeReceivedDialog() {
			this.setState({
				openReceivedBtn: !this.state.openReceivedBtn
			});
		}
	}, {
		key: 'closeSearchDialog',
		value: function closeSearchDialog() {
			this.setState({
				openSearch: !this.state.openSearch
			});
		}
	}, {
		key: 'closeSwitchBtn',
		value: function closeSwitchBtn() {
			this.setState({
				openSwitchBtn: !this.state.openSwitchBtn
			});
		}
	}, {
		key: 'closeBusinessBtn',
		value: function closeBusinessBtn() {
			this.setState({
				openBusinessBtn: !this.state.openBusinessBtn
			});
		}
	}, {
		key: 'closeQuitBtn',
		value: function closeQuitBtn() {
			this.setState({
				openQuitBtn: !this.state.openQuitBtn
			});
		}
	}, {
		key: 'closeAddaccount',
		value: function closeAddaccount() {
			this.setState({
				openAddaccountBtn: !this.state.openAddaccountBtn
			});
		}
	}, {
		key: 'closeViewDialog',
		value: function closeViewDialog() {
			this.setState({
				openView: !this.state.openView
			});
		}
	}, {
		key: 'onSearch',


		//确定提交区域
		//切换
		value: function onSearch(params) {
			var listValues = '';
			if (params.index == this.state.params.index && params.accountType == this.state.params.accountType) {
				listValues = this.state.listValues;
			} else {
				listValues = '';
			}
			this.setState({
				params: params,
				listValues: listValues
			});
		}
		//高级查询

	}, {
		key: 'onSubmit',
		value: function onSubmit(params) {
			params = (0, _simpleAssign2.default)({}, this.state.params, params);
			params.time = +new Date();
			if (params.startTime != '' && params.endTime != '' && params.endTime < params.startTime) {
				_krUi.Message.error('开始时间不能大于结束时间');
				return;
			}
			if (params.startTime == '' && params.endTime != '') {
				params.startTime = params.endTime;
			}
			if (params.startTime != '' && params.endTime == '') {
				params.endTime = params.startTime;
			}
			this.setState({
				params: params,
				openSearch: !this.state.openSearch
			});
		}
	}, {
		key: 'onSelect',
		value: function onSelect(values) {
			//此处反着？
			var _state = this.state,
			    list = _state.list,
			    selectedList = _state.selectedList;

			selectedList = list.map(function (item, index) {
				if (values.indexOf(index)) {
					return false;
				}
				return item;
			});
			this.setState({
				selectedList: selectedList,
				listValues: values
			});
		}
	}, {
		key: 'onLoaded',
		value: function onLoaded(response) {
			var list = response.items;
			this.setState({
				list: list
			});
		}
		//回款提交

	}, {
		key: 'onAddReceivedSubmit',
		value: function onAddReceivedSubmit(params) {
			var _state2 = this.state,
			    accountDetail = _state2.accountDetail,
			    contractTopReceive = _state2.contractTopReceive;

			params = (0, _simpleAssign2.default)({}, params);
			params.mainbillId = this.props.params.orderId;

			var intentStr = {};
			var joinStr = {};
			var increaseStr = {};
			var adminStr = {};
			contractTopReceive.map(function (item, index) {
				var key = item.detailid;
				var accountType = item.contactType;
				if (accountType == 2) {
					var conJasonStre = {};
					if (params['fix' + key + '1'] && !params['fix' + key + '3']) {
						conJasonStre['1'] = params['fix' + key + '1'];
						joinStr[key] = conJasonStre;
						delete params['fix' + key + '1'];
					} else if (params['fix' + key + '3'] && !params['fix' + key + '1']) {
						conJasonStre['3'] = params['fix' + key + '3'];
						joinStr[key] = conJasonStre;
						delete params['fix' + key + '3'];
					} else if (params['fix' + key + '3'] && params['fix' + key + '1']) {
						conJasonStre['3'] = params['fix' + key + '3'];
						conJasonStre['1'] = params['fix' + key + '1'];
						joinStr[key] = conJasonStre;
						delete params['fix' + key + '3'];
						delete params['fix' + key + '1'];
					}
				}
				if (accountType == 3) {
					var conJasonStre = {};
					if (params['fix' + key + '1'] && !params['fix' + key + '3']) {
						conJasonStre['1'] = params['fix' + key + '1'];
						increaseStr[key] = conJasonStre;
						delete params['fix' + key + '1'];
					} else if (params['fix' + key + '3'] && !params['fix' + key + '1']) {
						conJasonStre['3'] = params['fix' + key + '3'];
						increaseStr[key] = conJasonStre;
						delete params['fix' + key + '3'];
					} else if (params['fix' + key + '3'] && params['fix' + key + '1']) {
						conJasonStre['3'] = params['fix' + key + '3'];
						conJasonStre['1'] = params['fix' + key + '1'];
						increaseStr[key] = conJasonStre;
						delete params['fix' + key + '3'];
						delete params['fix' + key + '1'];
					}
				}
				if (accountType == 4) {
					var conJasonStre = {};
					if (params['fix' + key + '1'] && !params['fix' + key + '3']) {
						conJasonStre['1'] = params['fix' + key + '1'];
						adminStr[key] = conJasonStre;
						delete params['fix' + key + '1'];
					} else if (params['fix' + key + '3'] && !params['fix' + key + '1']) {
						conJasonStre['3'] = params['fix' + key + '3'];
						adminStr[key] = conJasonStre;
						delete params['fix' + key + '3'];
					} else if (params['fix' + key + '3'] && params['fix' + key + '1']) {
						conJasonStre['3'] = params['fix' + key + '3'];
						conJasonStre['1'] = params['fix' + key + '1'];
						adminStr[key] = conJasonStre;
						delete params['fix' + key + '3'];
						delete params['fix' + key + '1'];
					}
				}
				if (accountType == 1) {
					var conJasonStre = {};
					if (params['fix' + key + '2']) {
						conJasonStre['2'] = params['fix' + key + '2'];
						intentStr[key] = conJasonStre;
						delete params['fix' + key + '2'];
					}
				}
			});

			var _params = params,
			    totalPayment = _params.totalPayment;

			var liveMoneyValue = this.state.liveMoneyValue;

			params.conJasonStr = {
				intentStr: intentStr,
				joinStr: joinStr,
				increaseStr: increaseStr,
				adminStr: adminStr
			};
			params.conJasonStr = (0, _simpleAssign2.default)({}, intentStr, joinStr, increaseStr, adminStr);

			params = (0, _simpleAssign2.default)({}, params);
			params.propJasonStr = {};
			accountDetail.map(function (item, index) {
				var key = item.id;
				if (params.hasOwnProperty(key) && params[key]) {
					params.propJasonStr[key] = params[key];
					delete params[key];
				}
			});
			params.operatedate = (0, _dateformat2.default)(params.operatedate, "yyyy-mm-dd hh:MM:ss");
			params.propJasonStr = JSON.stringify(params.propJasonStr);
			params.conJasonStr = JSON.stringify(params.conJasonStr);

			console.log('params.contract', params.contract);
			console.log('params.propJasonStr', params.propJasonStr);
			console.log('liveMoneyValue', liveMoneyValue);

			if (!params.contract) {
				_krUi.Message.error('请选择对应合同');
				return;
			}
			if (params.propJasonStr == '{}' && params.conJasonStr == '{}') {
				_krUi.Message.error('回款不能为空');
				return;
			}
			if (liveMoneyValue < 0) {
				_krUi.Message.error('拆分金额大于回款总额');
				return;
			}
			if (liveMoneyValue > 0) {
				_krUi.Message.error('回款总额有剩余');
				return;
			}

			var _this = this;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('returnMoneyNew', {}, params)).then(function (response) {
				_this.refresh();
				_this.setState({
					openRight: !_this.state.openRight,
					isLoading: true
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
		}
	}, {
		key: 'onQuitSubmit',
		value: function onQuitSubmit(params) {
			var _this = this;
			params = (0, _simpleAssign2.default)({}, params);
			params.operatedate = (0, _dateformat2.default)(params.operatedate, "yyyy-mm-dd hh:MM:ss");
			_Redux.Store.dispatch(_Redux.Actions.callAPI('payBack', {}, params)).then(function (response) {
				_this.refresh();
				_this.setState({
					openQuitBtn: !_this.state.openQuitBtn,
					isLoading: true,
					listValues: ''
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
		}
	}, {
		key: 'onSwitchSubmit',
		value: function onSwitchSubmit(params) {
			var _this = this;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('transToDeposit', {}, params)).then(function (response) {
				_this.refresh();
				_this.setState({
					openSwitchBtn: !_this.state.openSwitchBtn,
					isLoading: true,
					listValues: ''
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
		}
	}, {
		key: 'onBusinessSubmit',
		value: function onBusinessSubmit(params) {
			var _this = this;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('transToOperateIncome', {}, params)).then(function (response) {
				_this.refresh();
				_this.setState({
					openBusinessBtn: !_this.state.openBusinessBtn,
					isLoading: true,
					listValues: ''
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
		}
	}, {
		key: 'onConfrimSubmit',
		value: function onConfrimSubmit(params) {
			var _state3 = this.state,
			    stationPayment = _state3.stationPayment,
			    accountDetail = _state3.accountDetail;

			var contractId = stationPayment.id;
			params = (0, _simpleAssign2.default)({}, params);
			params.propJasonStr = {};
			accountDetail.map(function (item, index) {
				var key = item.id;
				if (params.hasOwnProperty('fix' + key) && params['fix' + key]) {
					params.propJasonStr[key] = params['fix' + key];
					delete params['fix' + key];
				}
			});
			params.propJasonStr[contractId] = params.stationPaymentName;
			//delete params.stationPaymentName;
			params.propJasonStr = JSON.stringify(params.propJasonStr);

			if (params.propJasonStr == '{}') {
				_krUi.Message.error('至少填写一项金额');
				return;
			}

			var _this = this;
			params.operatedate = (0, _dateformat2.default)(params.operatedate, "yyyy-mm-dd hh:MM:ss");
			_Redux.Store.dispatch(_Redux.Actions.callAPI('onNewAccountg', {}, params)).then(function () {
				_this.refresh();
				_this.setState({
					openAddaccountBtn: !_this.state.openAddaccountBtn,
					isLoading: true
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
		}
	}, {
		key: 'onSupplementSubmit',
		value: function onSupplementSubmit() {
			var _this = this;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('addIncome', {
				mainbillid: _this.props.params.orderId
			})).then(function (response) {
				_this.refresh();
				_this.setState({
					openSupplementBtn: !_this.state.openSupplementBtn,
					isLoading: true
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
		}
		//操作相关

	}, {
		key: 'onOperation',
		value: function onOperation(type, itemDetail) {
			if (type == 'view') {
				this.openViewDialog(itemDetail);
			}
		}
	}, {
		key: 'initBasicInfo',


		//
		value: function initBasicInfo() {
			var _this = this;
			var params = this.props.params;

			_Redux.Store.dispatch(_Redux.Actions.callAPI('getAccountFlow', {
				mainbillid: params.orderId
			})).then(function (response) {
				_this.setState({
					basicInfo: response.topdata,
					detailPayment: response.paymentdata,
					detailIncome: response.incomedata,
					detailBalance: response.balance,
					isInitLoading: false,
					isRunningIncome: response.isIncomeRunning,
					colorClassName: response.isIncomeRunning == 2 ? 'historyIncomeGray' : 'historyIncome'
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
		}
	}, {
		key: 'searchUpperFun',
		value: function searchUpperFun() {

			var _this = this;
			var params = this.state.params;


			params.endTime = '';
			params.startTime = '';
			params.tradingCode = '';
			params.propertyId = '';
			params.accountId = '';

			_Redux.Store.dispatch(_Redux.Actions.callAPI('findAccountAndPropList', {
				accountType: params.accountType
			})).then(function (response) {
				var codeList = [];
				var typeList = [];
				response.account.map(function (item, index) {
					var list = {};
					list.value = item.id;
					list.label = item.accountname;
					codeList.push(list);
				});

				response.property.map(function (item, index) {
					var list = {};
					list.value = item.id;
					list.label = item.propname;
					typeList.push(list);
				});
				_this.setState({
					codeList: codeList,
					typeList: typeList
				});
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			this.initBasicInfo();
			_Redux.Store.dispatch(_Redux.Actions.switchSidebarNav(false));
		}
	}, {
		key: 'render',
		value: function render() {
			var _state4 = this.state,
			    params = _state4.params,
			    isInitLoading = _state4.isInitLoading,
			    colorClassName = _state4.colorClassName,
			    fiMoney = _state4.fiMoney,
			    shiftData = _state4.shiftData,
			    stationPayment = _state4.stationPayment;


			if (isInitLoading) {
				return _react2.default.createElement(_krUi.Loading, null);
			}

			//判断按钮出现与隐藏
			var childBtn = params.childType;
			var parentBtn = params.accountType;
			var propInfo = params.propInfo;
			//回款传订单id
			var initialValues = {
				mainbillid: params.orderId
			};
			//退款等要操作的id
			var initialValuesId = {
				id: fiItem.id,
				fiMoney: fiMoney
			};
			//高级查询
			var searchValue = {
				accountType: params.accountType,
				orderId: params.orderId
			};

			var buttonArr = [];
			if (parentBtn == 'PAYMENT' && childBtn == 'basic') {
				buttonArr.push(_react2.default.createElement(
					_krUi.ButtonGroup,
					null,
					_react2.default.createElement(_krUi.Button, { label: '\u56DE\u6B3E', type: 'button', joinEditForm: true, onTouchTap: this.openReceivedBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u9000\u6B3E', type: 'button', joinEditForm: true, onTouchTap: this.openQuitBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u8F6C\u79FB', type: 'button', onTouchTap: this.openShiftBtn })
				));
			}
			if (parentBtn == 'PAYMENT' && childBtn == 'dingjin') {
				buttonArr.push(_react2.default.createElement(
					_krUi.ButtonGroup,
					null,
					_react2.default.createElement(_krUi.Button, { label: '\u56DE\u6B3E', type: 'button', joinEditForm: true, onTouchTap: this.openReceivedBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u8F6C\u62BC\u91D1', type: 'button', joinEditForm: true, onTouchTap: this.openSwitchBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u8F6C\u8425\u6536', type: 'button', joinEditForm: true, onTouchTap: this.openBusinessBtn })
				));
			}
			if (parentBtn == 'PAYMENT' && childBtn == 'yajin') {
				buttonArr.push(_react2.default.createElement(
					_krUi.ButtonGroup,
					null,
					_react2.default.createElement(_krUi.Button, { label: '\u56DE\u6B3E', type: 'button', joinEditForm: true, onTouchTap: this.openReceivedBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u8F6C\u8425\u6536', type: 'button', joinEditForm: true, onTouchTap: this.openBusinessBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u9000\u6B3E', type: 'button', joinEditForm: true, onTouchTap: this.openQuitBtn })
				));
			}
			if (parentBtn == 'PAYMENT' && childBtn == 'gongweihuikuan') {
				buttonArr.push(_react2.default.createElement(
					_krUi.ButtonGroup,
					null,
					_react2.default.createElement(_krUi.Button, { label: '\u56DE\u6B3E', type: 'button', joinEditForm: true, onTouchTap: this.openReceivedBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u8F6C\u8425\u6536', type: 'button', joinEditForm: true, onTouchTap: this.openBusinessBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u9000\u6B3E', type: 'button', joinEditForm: true, onTouchTap: this.openQuitBtn })
				));
			}
			if (parentBtn == 'PAYMENT' && childBtn == 'qitahuikuan') {
				buttonArr.push(_react2.default.createElement(
					_krUi.ButtonGroup,
					null,
					_react2.default.createElement(_krUi.Button, { label: '\u56DE\u6B3E', type: 'button', joinEditForm: true, onTouchTap: this.openReceivedBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u8F6C\u8425\u6536', type: 'button', joinEditForm: true, onTouchTap: this.openBusinessBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u9000\u6B3E', type: 'button', joinEditForm: true, onTouchTap: this.openQuitBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u8F6C\u79FB', type: 'button', onTouchTap: this.openShiftBtn })
				));
			}
			if (parentBtn == 'PAYMENT' && childBtn == 'yingshouhuikuan') {
				buttonArr.push(_react2.default.createElement(
					_krUi.ButtonGroup,
					null,
					_react2.default.createElement(_krUi.Button, { label: '\u56DE\u6B3E', type: 'button', joinEditForm: true, onTouchTap: this.openReceivedBtn })
				));
			}
			if (parentBtn == 'PAYMENT' && childBtn == 'shenghuoxiaofeihuikuan') {
				buttonArr.push(_react2.default.createElement(
					_krUi.ButtonGroup,
					null,
					_react2.default.createElement(_krUi.Button, { label: '\u56DE\u6B3E', type: 'button', joinEditForm: true, onTouchTap: this.openReceivedBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u9000\u6B3E', type: 'button', joinEditForm: true, onTouchTap: this.openQuitBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u8F6C\u79FB', type: 'button', onTouchTap: this.openShiftBtn })
				));
			}
			if (parentBtn == 'INCOME' && childBtn == 'basic') {
				buttonArr.push(_react2.default.createElement(
					_krUi.ButtonGroup,
					null,
					_react2.default.createElement(_krUi.Button, { label: '\u6302\u8D26', type: 'button', joinEditForm: true, onTouchTap: this.openAccountBtn })
				));
			}
			if (parentBtn == 'INCOME' && childBtn == 'gongweishouru') {
				buttonArr.push(_react2.default.createElement(
					_krUi.ButtonGroup,
					null,
					_react2.default.createElement(_krUi.Button, { label: '\u6302\u8D26', type: 'button', joinEditForm: true, onTouchTap: this.openAccountBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u8865\u6536\u5165', type: 'button', joinEditForm: true, onTouchTap: this.openSupplementBtn })
				));
			}
			if (parentBtn == 'INCOME' && childBtn == 'qitashouru') {
				buttonArr.push(_react2.default.createElement(
					_krUi.ButtonGroup,
					null,
					_react2.default.createElement(_krUi.Button, { label: '\u6302\u8D26', type: 'button', joinEditForm: true, onTouchTap: this.openAccountBtn })
				));
			}
			if (parentBtn == 'INCOME' && childBtn == 'yingyewaishouru') {
				buttonArr.push(_react2.default.createElement(
					_krUi.ButtonGroup,
					null,
					_react2.default.createElement(_krUi.Button, { label: '\u6302\u8D26', type: 'button', joinEditForm: true, onTouchTap: this.openAccountBtn })
				));
			}
			if (parentBtn == 'INCOME' && childBtn == 'shenghuoxiaofeishouru') {
				buttonArr.push(_react2.default.createElement(
					_krUi.ButtonGroup,
					null,
					_react2.default.createElement(_krUi.Button, { label: '\u6302\u8D26', type: 'button', joinEditForm: true, onTouchTap: this.openAccountBtn })
				));
			}
			if (parentBtn == 'PAYMENT' && propInfo == 'NEW') {
				buttonArr.push(_react2.default.createElement(
					_krUi.ButtonGroup,
					null,
					_react2.default.createElement(_krUi.Button, { label: '\u56DE\u6B3E', type: 'button', joinEditForm: true, onTouchTap: this.openReceivedBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u9000\u6B3E', type: 'button', joinEditForm: true, onTouchTap: this.openQuitBtn }),
					_react2.default.createElement(_krUi.Button, { label: '\u8F6C\u79FB', type: 'button', onTouchTap: this.openShiftBtn })
				));
			}
			if (parentBtn == 'INCOME' && propInfo == 'NEW') {
				buttonArr.push(_react2.default.createElement(
					_krUi.ButtonGroup,
					null,
					_react2.default.createElement(_krUi.Button, { label: '\u6302\u8D26', type: 'button', joinEditForm: true, onTouchTap: this.openAccountBtn })
				));
			}

			var close = [_react2.default.createElement(_krUi.Button, {
				label: '\u5173\u95ED',
				joinEditForm: true,
				style: { marginLeft: 10 },
				onTouchTap: this.closeViewDialog
			})];

			return _react2.default.createElement(
				'div',
				{ className: 'm-orderBillDetail' },
				this.renderSnack(),
				_react2.default.createElement(_krUi.Title, { value: '\u8BA2\u5355\u660E\u7EC6\u8D26_\u8D22\u52A1\u7BA1\u7406' }),
				_react2.default.createElement(
					_krUi.Section,
					{ title: '\u8BA2\u5355\u660E\u7EC6\u8D26', description: '', style: { marginBottom: -5, minHeight: 910 } },
					_react2.default.createElement(_krUi.DotTitle, { title: '\u8BA2\u5355\u63CF\u8FF0', style: { marginTop: '6', marginBottom: '40' } }),
					_react2.default.createElement(_BasicInfo2.default, { detail: this.state.basicInfo }),
					_react2.default.createElement(_krUi.DotTitle, { title: '\u8BA2\u5355\u660E\u7EC6\u8D26', style: { marginTop: '28', marginBottom: '62' } }),
					_react2.default.createElement(
						'div',
						{ className: 'ui-detail-bottom' },
						_react2.default.createElement(
							_krUi.Row,
							{ style: { marginTop: 10 } },
							_react2.default.createElement(
								'div',
								{ className: 'detail-left' },
								_react2.default.createElement(_SearchParam2.default, { onSearch: this.onSearch, params: this.state.params, detailPayment: this.state.detailPayment, detailIncome: this.state.detailIncome, detailBalance: this.state.detailBalance })
							),
							_react2.default.createElement(
								'div',
								{ className: 'detail-right' },
								_react2.default.createElement(
									'div',
									null,
									_react2.default.createElement(
										_krUi.Col,
										{ align: 'left', md: 9, className: 'btn-left' },
										buttonArr
									),
									_react2.default.createElement(
										_krUi.Col,
										{ align: 'right', md: 3, style: { 'position': 'relative' } },
										_react2.default.createElement(_krUi.Button, { type: 'search', searchClick: this.openSearchDialog }),
										_react2.default.createElement(
											'span',
											{ className: colorClassName, onClick: this.historyIncomed },
											_react2.default.createElement(
												_krUi.Tooltip,
												{ offsetTop: 8, place: 'top' },
												'\u91CD\u8DD1\u5386\u53F2\u6536\u5165'
											)
										)
									)
								),
								this.typeSelectRender()
							)
						)
					)
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u9AD8\u7EA7\u67E5\u8BE2',
						open: this.state.openSearch,
						onClose: this.closeSearchDialog,
						contentStyle: { width: '686' }
					},
					_react2.default.createElement(_SearchForm2.default, { onCancel: this.closeSearchDialog, initialValues: searchValue, codeList: this.state.codeList, typeList: this.state.typeList, onSubmit: this.onSubmit })
				),
				_react2.default.createElement(
					_krUi.Drawer,
					{
						open: this.state.openRight,
						width: 650,
						openSecondary: true,
						className: 'm-finance-drawer',
						containerStyle: { top: 60, paddingBottom: 228, zIndex: 20 }
					},
					_react2.default.createElement(
						'div',
						null,
						_react2.default.createElement(_ReceiveDetailTop2.default, { iconClose: this.iconClose, contractTopReceive: this.state.contractTopReceive, liveMoneyValue: this.state.liveMoneyValue, contractContinue: this.contractContinue }),
						_react2.default.createElement(_ReceivedBtnForm2.default, {
							open: this.state.openRight,
							onSubmit: this.onAddReceivedSubmit,
							onCancel: this.iconClose,
							optionList: this.state.payWayList,
							accountDetail: this.state.accountDetail,
							contractReceive: this.state.contractReceive,
							calcBalance: this.calcBalance
						})
					)
				),
				this.state.openRight && _react2.default.createElement('div', { className: 'trasparent', onClick: this.iconClose }),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u9000\u6B3E',
						open: this.state.openQuitBtn,
						onClose: this.closeQuitBtn,
						contentStyle: { width: '688' }
					},
					_react2.default.createElement(_QuitBtnForm2.default, { onSubmit: this.onQuitSubmit, onCancel: this.closeQuitBtn, fiMoney: fiMoney, initialValuesId: initialValuesId })
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u6DFB\u52A0\u8F6C\u79FB',
						open: this.state.openShift,
						onClose: this.closeShiftBtn,
						contentStyle: { width: '688' }
					},
					_react2.default.createElement(_ShiftBtnForm2.default, { onSubmit: this.onShiftBtnSubmit, onCancel: this.closeShiftBtn, initialValuesId: initialValuesId, shiftData: shiftData })
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u8F6C\u62BC\u91D1',
						open: this.state.openSwitchBtn,
						onClose: this.closeSwitchBtn,
						contentStyle: { width: '688' }
					},
					_react2.default.createElement(_SwitchBtnForm2.default, { onSubmit: this.onSwitchSubmit, onCancel: this.closeSwitchBtn, optionList: this.state.receivedList, fiMoney: fiMoney, initialValuesId: initialValuesId })
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u8F6C\u8425\u6536',
						open: this.state.openBusinessBtn,
						onClose: this.closeBusinessBtn,
						contentStyle: { width: '688' }
					},
					_react2.default.createElement(_BusinessBtnForm2.default, { onSubmit: this.onBusinessSubmit, onCancel: this.closeBusinessBtn, fiMoney: fiMoney, initialValuesId: initialValuesId })
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u6302\u8D26',
						open: this.state.openAddaccountBtn,
						onClose: this.closeAddaccount,
						contentStyle: { width: '688' }
					},
					_react2.default.createElement(_AccountBtnForm2.default, { onSubmit: this.onConfrimSubmit, onCancel: this.closeAddaccount, optionList: this.state.payWayList, accountDetail: this.state.accountDetail, contractList: this.state.contractList, stationPayment: stationPayment })
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u8865\u6536\u5165',
						open: this.state.openSupplementBtn,
						onClose: this.openSupplementBtn,
						contentStyle: { width: '445', height: '236' }
					},
					_react2.default.createElement(_SupplementBtnForm2.default, { onSubmit: this.onSupplementSubmit, mainbillid: '{params.orderId}', onCancel: this.openSupplementBtn })
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u67E5\u770B',
						open: this.state.openView,
						onClose: this.closeViewDialog
					},
					_react2.default.createElement(ViewForm, { detail: this.state.itemDetail })
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u5408\u540C\u8BE6\u60C5',
						open: this.state.openContract,
						onClose: this.contractContinue,
						contentStyle: { width: '443', height: '236' }
					},
					_react2.default.createElement(
						'div',
						{ className: 'm-continueGo' },
						'\u6B63\u5728\u5F00\u53D1\u4E2D\uFF0C\u656C\u8BF7\u671F\u5F85...'
					)
				)
			);
		}
	}]);

	return AttributeSetting;
}(_react.Component);

AttributeSetting.contextTypes = {
	router: _react2.default.PropTypes.object.isRequired
};
AttributeSetting.childContextTypes = {
	refresh: _react2.default.PropTypes.func
};
exports.default = AttributeSetting;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(fiMoney, 'fiMoney', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Finance/Manage/OrderBill/OrderBillDetail/index.js');

	__REACT_HOT_LOADER__.register(fiItem, 'fiItem', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Finance/Manage/OrderBill/OrderBillDetail/index.js');

	__REACT_HOT_LOADER__.register(ViewForm, 'ViewForm', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Finance/Manage/OrderBill/OrderBillDetail/index.js');

	__REACT_HOT_LOADER__.register(AttributeSetting, 'AttributeSetting', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Finance/Manage/OrderBill/OrderBillDetail/index.js');
}();

;