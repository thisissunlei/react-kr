'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reduxForm = require('redux-form');

var _Notify = require('../../Notify');

var _Notify2 = _interopRequireDefault(_Notify);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

require('./index.less');

var _refresh = require('./images/refresh.svg');

var _refresh2 = _interopRequireDefault(_refresh);

var _deleteImg = require('./images/deleteImg.svg');

var _deleteImg2 = _interopRequireDefault(_deleteImg);

var _Redux = require('kr/Redux');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UploadImageComponent = function (_Component) {
	_inherits(UploadImageComponent, _Component);

	function UploadImageComponent(props, context) {
		_classCallCheck(this, UploadImageComponent);

		var _this2 = _possibleConstructorReturn(this, (UploadImageComponent.__proto__ || Object.getPrototypeOf(UploadImageComponent)).call(this, props, context));

		_this2.operationImg = function () {
			// console.log("this.state.imgUpload)",this.state.imgUpload);
			if (_this2.state.imgUpload) {
				_this2.setState({
					operateImg: true
				});
			}
		};

		_this2.notOperateImg = function () {
			if (_this2.state.imgUpload) {
				_this2.setState({
					operateImg: false
				});
			}
		};

		_this2.onError = function (message) {
			message = message || '上传文件失败，请重新上传';
			_Notify2.default.show([{
				message: message,
				type: 'danger'
			}]);

			_this2.setState({
				progress: 0,
				imgUpload: false
			});
		};

		_this2.onChange = function (event) {
			_this2.setState({
				imgSrc: "",
				operateImg: false,
				imgUpload: false,
				errorHide: true
			});
			var _this = _this2;
			var file = event.target.files[0];

			if (!file) {
				return;
			}
			if (file) {
				var progress = 0;
				var timer = window.setInterval(function () {
					if (progress >= 100) {
						window.clearInterval(timer);
						// _this.setState({
						// 	progress: 0,
						// 	isUploading: false
						// });
					}
					progress += 10;
					_this.setState({
						progress: progress
					});
				}, 300);
			}
			var imgType = file.type;
			var imgSize = Math.round(file.size / 1024 * 100) / 100;
			if (imgType !== "image/jpg" && imgType !== "image/jpeg") {
				_this2.refs.inputImg.value = "";
				_this2.refs.inputImgNew.value = "";
				_this2.refs.uploadImage.src = "";
				_this.setState({
					errorHide: false,
					errorTip: "请上传正确格式的图片"
				});
				return;
			}
			if (imgSize > 32) {
				_this2.refs.inputImg.value = "";
				_this2.refs.inputImgNew.value = "";
				_this2.refs.uploadImage.src = "";
				_this.setState({
					errorHide: false,
					errorTip: "图片尺寸不得大于32K"
				});
				return;
			}
			var form = new FormData();
			form.append('file', file);
			var xhr = new XMLHttpRequest();
			xhr.onreadystatechange = function () {
				if (xhr.readyState === 4) {
					if (xhr.status === 200) {
						var response = xhr.response.data;
						// console.log("response",response);
						form.append('sourceservicetoken', response.token);
						form.append('docTypeCode', response.docTypeCode);
						form.append('operater', response.operater);
						_this.onTokenSuccess({
							sourceservicetoken: response.token,
							docTypeCode: response.docTypeCode,
							operater: response.operater
						});
						var xhrfile = new XMLHttpRequest();
						xhrfile.onreadystatechange = function () {
							if (xhrfile.readyState === 4) {
								var fileResponse = xhrfile.response;
								if (xhrfile.status === 200) {
									if (fileResponse && fileResponse.code > 0) {
										_this.functionHeightWidth(file, xhrfile);
									} else {
										_this.onError(fileResponse.msg);
										return;
									}
								} else if (xhrfile.status == 413) {
									_this.onError('您上传的文件过大！');
								} else {
									_this.onError('后台报错请联系管理员！');
								}
							}
						};
						xhrfile.onerror = function (e) {
							console.error(xhr.statusText);
						};
						xhrfile.open('POST', '/api/krspace-finance-web/community/sysDeviceDefinition/upload-pic', true);
						xhrfile.responseType = 'json';
						xhrfile.send(form);
					} else {
						_this.onTokenError();
					}
				}
			};

			xhr.onerror = function (e) {
				console.error(xhr.statusText);
			};
			xhr.open('GET', '/api/krspace-finance-web/finacontractdetail/getSourceServiceToken', true);
			xhr.responseType = 'json';
			xhr.send(null);
			// 暂时觉得此处用不着了，等连上服务器需要再检查一下
			_this.setState({
				imgUpload: true,
				operateImg: false
			});
		};

		_this2.functionHeightWidth = function (file, xhrfile) {
			var _this = _this2;
			if (file) {
				var fileData = file;
				//读取图片数据
				var reader = new FileReader();
				reader.onload = function (e) {
					// console.log("e",e);
					var data = e.target.result;
					//加载图片获取图片真实宽度和高度
					var image = new Image();
					image.onload = function () {
						var width = image.width;
						var height = image.height;
						if (width !== 212 || height !== 136) {
							_this.refs.inputImg.value = "";
							_this.refs.inputImgNew.value = "";
							_this.refs.uploadImage.src = "";
							_this.setState({
								errorHide: false,
								errorTip: "图片宽度必须是212*136",
								imageStatus: false,
								imgUpload: false
							});
						} else {
							_this.refs.uploadImage.src = xhrfile.response.data;
							_this.setState({
								imageStatus: true,
								imgUpload: true,
								operateImg: false
							});
							var input = _this.props.input;

							input.onChange(xhrfile.response.data);
						}
					};
					image.src = data;
				};
				reader.readAsDataURL(fileData);
			}
		};

		_this2.deleteImg = function () {
			_this2.setState({
				imgSrc: "",
				imgUpload: false,
				operateImg: false
			});
			_this2.refs.inputImg.value = "";
			_this2.refs.inputImgNew.value = "";
			_this2.refs.uploadImage.src = "";
			var input = _this2.props.input;

			input.onChange("");
		};

		_this2.state = {
			imgSrc: '',
			errorHide: true,
			errorTip: '',
			// 图片是否已经上传到界面
			imgUpload: false,
			timer: "",
			operateImg: false,
			files: {},
			imageStatus: true
		};
		return _this2;
	}

	_createClass(UploadImageComponent, [{
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			this.setState({
				files: []
			});
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {}
	}, {
		key: 'onTokenError',
		value: function onTokenError() {
			_Notify2.default.show([{
				message: '初始化上传文件失败,请重新上传',
				type: 'danger'
			}]);
		}
	}, {
		key: 'onTokenSuccess',
		value: function onTokenSuccess(form) {
			this.setState({
				form: form
			});
		}
		// 校验宽高

		// 删除图片

	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    children = _props.children,
			    className = _props.className,
			    style = _props.style,
			    type = _props.type,
			    name = _props.name,
			    disabled = _props.disabled,
			    photoSize = _props.photoSize,
			    pictureFormat = _props.pictureFormat,
			    pictureMemory = _props.pictureMemory,
			    requestURI = _props.requestURI,
			    other = _objectWithoutProperties(_props, ['children', 'className', 'style', 'type', 'name', 'disabled', 'photoSize', 'pictureFormat', 'pictureMemory', 'requestURI']);

			var operateImg = this.state.operateImg;
			// console.log("this.state.operateImg",this.state.operateImg)

			return _react2.default.createElement(
				'div',
				{ className: 'ui-uploadimg-box', style: style },
				_react2.default.createElement(
					'div',
					{ className: 'ui-uploadimg-outbox' },
					_react2.default.createElement(
						'div',
						{ className: 'ui-uploadimg-innerbox', onMouseEnter: this.operationImg, onMouseLeave: this.notOperateImg },
						_react2.default.createElement(
							'div',
							{ className: 'ui-uploadimg-inner' },
							_react2.default.createElement('img', { className: 'image', src: this.state.imgSrc, ref: 'uploadImage' }),
							_react2.default.createElement(
								'span',
								{ className: 'ui-uploadimg-button' },
								'+'
							),
							_react2.default.createElement('input', { type: 'file', onChange: this.onChange, ref: 'inputImg' }),
							_react2.default.createElement(
								'span',
								{ className: 'ui-uploadimg-tip' },
								'\u4E0A\u4F20\u56FE\u7247'
							)
						),
						_react2.default.createElement(
							'div',
							{ className: 'ui-uploadimg-fresh-delete', style: { display: this.state.operateImg ? "block" : "none" } },
							_react2.default.createElement(
								'div',
								{ className: 'ui-uploadimg-operateimg ui-uploadimg-operateimg-left', onClick: this.reFreshImg },
								_react2.default.createElement('img', { src: _refresh2.default, className: 'ui-uploadimg-operateimg-btn ui-uploadimg-operateimg-refresh' }),
								_react2.default.createElement('input', { type: 'file', onChange: this.onChange, ref: 'inputImgNew', className: 'ui-refreshImgBtn' })
							),
							_react2.default.createElement(
								'div',
								{ className: 'ui-uploadimg-operateimg ui-uploadimg-operateimg-right', onClick: this.deleteImg },
								_react2.default.createElement('img', { src: _deleteImg2.default, className: 'ui-uploadimg-operateimg-btn ui-uploadimg-operateimg-delete' })
							)
						)
					)
				),
				_react2.default.createElement(
					'p',
					{ className: 'ui-uploadimg-notice' },
					'\u63D0\u793A\uFF1A\u56FE\u7247\u5C3A\u5BF8\u4E3A',
					photoSize,
					'\uFF0C\u56FE\u7247\u5C0F\u4E8E',
					pictureMemory,
					',\u683C\u5F0F\u4E3A',
					pictureFormat
				),
				_react2.default.createElement(
					'p',
					{ className: 'ui-uploadimg-error', style: { display: this.state.errorHide ? "none" : "block" } },
					this.state.errorTip
				)
			);
		}
	}]);

	return UploadImageComponent;
}(_react.Component);

UploadImageComponent.defaultProps = {};
UploadImageComponent.PropTypes = {
	className: _react2.default.PropTypes.string
};
exports.default = UploadImageComponent;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(UploadImageComponent, 'UploadImageComponent', '/Users/dongfanai/Desktop/project/kr-admin/src/Components/KrField/UploadImageComponent/index.js');
}();

;