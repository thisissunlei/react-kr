'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _redux = require('redux');

var _reduxForm = require('redux-form');

var _Actions = require('kr-ui/../Redux/Actions');

var actionCreators = _interopRequireWildcard(_Actions);

var _Redux = require('kr/Redux');

var _krUi = require('kr-ui');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AccountBtnForm = function (_Component) {
	_inherits(AccountBtnForm, _Component);

	function AccountBtnForm(props, context) {
		_classCallCheck(this, AccountBtnForm);

		var _this = _possibleConstructorReturn(this, (AccountBtnForm.__proto__ || Object.getPrototypeOf(AccountBtnForm)).call(this, props, context));

		_this.stationMoneyChange = function (value) {
			if (value != undefined && value != '') {
				_this.blockStyle = {
					display: 'inline-block'
				};
			} else {
				_this.blockStyle = {
					display: 'none'
				};
			}
		};

		_this.contractRender = function () {
			if (_this.props.contractList != '无' && _this.props.stationPayment != '无') {
				return _react2.default.createElement(
					'div',
					{ style: { marginTop: 3, marginBottom: 6 } },
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'stationPaymentName', right: 42, component: 'input', label: _this.props.stationPayment.propname, type: 'text', style: { marginRight: -12 }, onChange: _this.stationMoneyChange }),
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'contractId', right: 42, component: 'select', label: '\u5DE5\u4F4D\u5408\u540C', style: _this.blockStyle, options: _this.props.contractList })
				);
			}
		};

		_this.moneyCheck = function (value) {
			if (value && isNaN(value)) {
				_krUi.Message.error('金额只能为数字');
				return;
			}
			if (value && value <= 0) {
				_krUi.Message.error('金额只能为正数');
				return;
			}
		};

		_this.onCancel = _this.onCancel.bind(_this);
		_this.onSubmit = _this.onSubmit.bind(_this);
		_this.state = {
			Addaccount: false
		};
		_this.blockStyle = {
			display: 'none'
		};

		return _this;
	}

	_createClass(AccountBtnForm, [{
		key: 'onCancel',
		value: function onCancel() {
			var onCancel = this.props.onCancel;

			onCancel && onCancel();
		}
	}, {
		key: 'onSubmit',
		value: function onSubmit(values) {
			var onSubmit = this.props.onSubmit;

			onSubmit && onSubmit(values);
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			var initialValues = {
				preCode: '0',
				mainbillId: this.context.params.orderId,
				operatedate: '',
				accountId: ''
			};
			_Redux.Store.dispatch((0, _reduxForm.initialize)('AccountBtnForm', initialValues));
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props = this.props,
			    error = _props.error,
			    handleSubmit = _props.handleSubmit,
			    pristine = _props.pristine,
			    reset = _props.reset,
			    accountDetail = _props.accountDetail,
			    contractList = _props.contractList,
			    optionList = _props.optionList,
			    stationPayment = _props.stationPayment;

			var style = {};
			var heightStyle = {
				width: '546',
				height: '72'
			};

			if (stationPayment != []) {
				var stationPaymentName = stationPayment.id;
			}

			return _react2.default.createElement(
				'div',
				{ className: 'ui-quit-wrap', style: { marginLeft: 3 } },
				_react2.default.createElement(
					'form',
					{ onSubmit: handleSubmit(this.onSubmit), style: { marginLeft: 31 } },
					_react2.default.createElement(_krUi.KrField, { name: 'mainbillId', type: 'hidden' }),
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'accountId', right: 42, component: 'select', label: '\u652F\u4ED8\u65B9\u5F0F', options: optionList, requireLabel: true }),
					_react2.default.createElement(
						_krUi.KrField,
						{ name: 'preCode', grid: 1 / 2, component: 'group', label: '\u91D1\u989D\u6B63\u8D1F', requireLabel: true, style: { marginLeft: -12 } },
						_react2.default.createElement(_krUi.KrField, { name: 'preCode', label: '\u6B63', type: 'radio', value: '0', style: { marginTop: 5, display: 'inline-block', marginRight: -209 } }),
						_react2.default.createElement(_krUi.KrField, { name: 'preCode', label: '\u8D1F', type: 'radio', value: '1' })
					),
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'operatedate', right: 45, type: 'date', component: 'date', label: '\u6302\u8D26\u65E5\u671F', requireLabel: true, style: { marginTop: 3 } }),
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'fileids', component: 'file', label: '\u4E0A\u4F20\u9644\u4EF6', style: { marginLeft: -12 }, defaultValue: [] }),
					_react2.default.createElement(
						'div',
						{ style: { marginTop: -8 } },
						accountDetail.map(function (item, index) {

							if (index % 2 == 0) {
								return _react2.default.createElement(_krUi.KrField, { key: index, grid: 1 / 2, style: { marginTop: 5, marginRight: -12 }, right: 42, label: item.propname, component: 'input', name: 'fix' + item.id, type: 'text', onBlur: _this2.moneyCheck });
							} else {
								return _react2.default.createElement(_krUi.KrField, { key: index, grid: 1 / 2, style: { marginTop: 5 }, right: 42, label: item.propname, component: 'input', name: 'fix' + item.id, type: 'text', onBlur: _this2.moneyCheck });
							}
						})
					),
					this.contractRender(),
					_react2.default.createElement(_krUi.KrField, { grid: 1, style: style, label: '\u5907\u6CE8', name: 'finaflowdesc', type: 'text', heightStyle: heightStyle, component: 'textarea', placeholder: '\u8BF7\u8F93\u5165\u5907\u6CE8,\u6587\u5B57\u4E0D\u80FD\u8D85\u8FC7100\u5B57', maxSize: 100, lengthClass: 'ui-length-text' }),
					_react2.default.createElement(
						_krUi.Grid,
						{ style: { marginBottom: 5, marginLeft: -30 } },
						_react2.default.createElement(
							_krUi.Row,
							null,
							_react2.default.createElement(
								_krUi.Col,
								{ md: 12, align: 'center' },
								_react2.default.createElement(
									_krUi.ButtonGroup,
									null,
									_react2.default.createElement(
										'div',
										{ className: 'ui-btn-center' },
										_react2.default.createElement(_krUi.Button, { label: '\u786E\u5B9A', type: 'submit', joinEditForm: true })
									),
									_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', type: 'button', cancle: true, onTouchTap: this.onCancel })
								)
							)
						)
					)
				)
			);
		}
	}]);

	return AccountBtnForm;
}(_react.Component);

AccountBtnForm.contextTypes = {
	params: _react2.default.PropTypes.object.isRequired
};
AccountBtnForm.PropTypes = {
	onSubmit: _react2.default.PropTypes.func,
	onCancel: _react2.default.PropTypes.func,
	optionList: _react2.default.PropTypes.array,
	accountDetail: _react2.default.PropTypes.array,
	contractList: _react2.default.PropTypes.array,
	stationPayment: _react2.default.PropTypes.object
};


var validate = function validate(values) {

	var errors = {};

	if (!values.accountId) {
		errors.accountId = '请填写支付方式';
	}
	if (!values.operatedate) {
		errors.operatedate = '请填写挂帐日期';
	}
	if (!values.stationPaymentName && values.contractId) {
		errors.stationPaymentName = '必须填写工位服务费金额';
	}
	if (values.stationPaymentName && !values.contractId) {
		errors.contractId = '必须选择工位合同';
	}

	return errors;
};

var _default = (0, _reduxForm.reduxForm)({
	form: 'AccountBtnForm',
	validate: validate, enableReinitialize: true, keepDirtyOnReinitialize: true
})(AccountBtnForm);

exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(AccountBtnForm, 'AccountBtnForm', '/Users/tmac_zc/Code/kr-admin/src/Containers/Finance/Manage/OrderBill/OrderBillDetail/AccountBtnForm.js');

	__REACT_HOT_LOADER__.register(validate, 'validate', '/Users/tmac_zc/Code/kr-admin/src/Containers/Finance/Manage/OrderBill/OrderBillDetail/AccountBtnForm.js');

	__REACT_HOT_LOADER__.register(_default, 'default', '/Users/tmac_zc/Code/kr-admin/src/Containers/Finance/Manage/OrderBill/OrderBillDetail/AccountBtnForm.js');
}();

;
//# sourceMappingURL=data:application/json;base64,