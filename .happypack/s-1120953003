'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _simpleAssign = require('simple-assign');

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Redux = require('kr/Redux');

var _reduxForm = require('redux-form');

var _krUi = require('kr-ui');

var _dateformat = require('dateformat');

var _dateformat2 = _interopRequireDefault(_dateformat);

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdvanceSearchDateForm = function (_Component) {
	_inherits(AdvanceSearchDateForm, _Component);

	function AdvanceSearchDateForm(props, context) {
		_classCallCheck(this, AdvanceSearchDateForm);

		return _possibleConstructorReturn(this, (AdvanceSearchDateForm.__proto__ || Object.getPrototypeOf(AdvanceSearchDateForm)).call(this, props, context));
	}

	_createClass(AdvanceSearchDateForm, [{
		key: 'render',
		value: function render() {
			return _react2.default.createElement(
				_krUi.ListGroup,
				{ style: { width: '610' } },
				_react2.default.createElement(
					_krUi.ListGroupItem,
					{ style: { display: 'block', paddingLeft: 13, marginTop: -20, marginBottom: -20, color: '#333' } },
					_react2.default.createElement(
						'span',
						{ style: { lineHeight: '58px' } },
						'\u6CE8\u518C\u65F6\u95F4:'
					)
				),
				_react2.default.createElement(
					_krUi.ListGroupItem,
					{ style: { padding: 0 } },
					_react2.default.createElement(_krUi.KrField, { name: 'leaseBegindate', component: 'date', onChange: this.props.onStartChange, style: { width: '252' }, simple: true })
				),
				_react2.default.createElement(
					_krUi.ListGroupItem,
					{ style: { textAlign: 'center', padding: 0, marginLeft: '15', marginRight: '5' } },
					_react2.default.createElement(
						'span',
						{ style: { display: 'inline-block', lineHeight: '58px' } },
						'\u81F3'
					)
				),
				_react2.default.createElement(
					_krUi.ListGroupItem,
					{ style: { padding: 0 } },
					_react2.default.createElement(_krUi.KrField, { name: 'leaseendTime', component: 'date', onChange: this.props.onEndChange, style: { width: '252' }, simple: true })
				)
			);
		}
	}]);

	return AdvanceSearchDateForm;
}(_react.Component);

AdvanceSearchDateForm = (0, _reduxForm.reduxForm)({
	form: 'advanceSearchDateForm'
})(AdvanceSearchDateForm);

var NewCreateForm = function (_Component2) {
	_inherits(NewCreateForm, _Component2);

	function NewCreateForm(props) {
		_classCallCheck(this, NewCreateForm);

		var _this3 = _possibleConstructorReturn(this, (NewCreateForm.__proto__ || Object.getPrototypeOf(NewCreateForm)).call(this, props));

		_this3.basicData = function () {
			//  新增会员准备职位数据
			var searchParamPosition = {
				communityId: '',
				companyId: '',
				memberId: ''
			};
			var _this = _this3;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('getMemberBasicData', searchParamPosition)).then(function (response) {
				response.jobList.forEach(function (item, index) {
					item.value = item.id;
					item.label = item.jobName;
				});
				response.registerSourceList.forEach(function (item, index) {
					item.value = item.id;
					item.label = item.sourceName;
				});
				_this.setState({
					selectOption: response.jobList,
					selectSourceOption: response.registerSourceList
				});
			}).catch(function (err) {
				reject(err);
			});
		};

		_this3.city = function (values) {
			_Redux.Store.dispatch((0, _reduxForm.change)('AdvancedQueryForm', 'city', values));
		};

		_this3.onFilter = function (search) {
			_this3.setState({ searchForm: true });
			_Redux.Store.dispatch((0, _reduxForm.change)('AdvancedQueryForm', 'type', search.value));
			_Redux.Store.dispatch((0, _reduxForm.change)('AdvancedQueryForm', 'value', search.content));
		};

		_this3.onStartChange = function (startTime) {
			var searchParams = _this3.state.searchParams;

			var start = Date.parse((0, _dateformat2.default)(startTime, "yyyy-mm-dd hh:MM:ss"));
			var end = Date.parse((0, _dateformat2.default)(searchParams.endTime, "yyyy-mm-dd hh:MM:ss"));

			if (searchParams.endTime && start > end) {
				_krUi.Message.error("结束时间要小于开始时间");
				return;
			}
			_Redux.Store.dispatch((0, _reduxForm.change)('AdvancedQueryForm', 'startTime', startTime));
			searchParams = (0, _simpleAssign2.default)({}, searchParams, { startTime: startTime });
			_this3.setState({
				searchParams: searchParams
			});
		};

		_this3.onEndChange = function (endTime) {
			var searchParams = _this3.state.searchParams;

			var start = Date.parse((0, _dateformat2.default)(searchParams.startTime, "yyyy-mm-dd hh:MM:ss"));
			var end = Date.parse((0, _dateformat2.default)(endTime, "yyyy-mm-dd hh:MM:ss"));
			if (searchParams.startTime && start > end) {
				_krUi.Message.error("结束时间要小于开始时间");
				return;
			}
			_Redux.Store.dispatch((0, _reduxForm.change)('AdvancedQueryForm', 'endTime', endTime));searchParams = (0, _simpleAssign2.default)({}, searchParams, { endTime: endTime });
			_this3.setState({
				searchParams: searchParams
			});
		};

		_this3.onSubmit = _this3.onSubmit.bind(_this3);
		_this3.onCancel = _this3.onCancel.bind(_this3);
		_this3.state = {
			communityText: '',
			companyText: '',
			selectSourceOption: [],
			searchForm: false,
			searchParams: {}
		};
		_this3.basicData();
		return _this3;
	}

	_createClass(NewCreateForm, [{
		key: 'onSubmit',
		value: function onSubmit(values) {
			var _props = this.props,
			    content = _props.content,
			    filter = _props.filter;
			var searchForm = this.state.searchForm;

			if (!searchForm) {
				values.type = filter;
				values.value = content;
			}
			if (!values.type) {
				values.type = filter;
			}
			var onSubmit = this.props.onSubmit;

			onSubmit && onSubmit(values);
		}
	}, {
		key: 'onCancel',
		value: function onCancel() {
			var onCancel = this.props.onCancel;

			onCancel && onCancel();
		}
	}, {
		key: 'render',
		value: function render() {
			var _props2 = this.props,
			    error = _props2.error,
			    handleSubmit = _props2.handleSubmit,
			    pristine = _props2.pristine,
			    reset = _props2.reset,
			    content = _props2.content,
			    filter = _props2.filter;

			var communityText = '';
			var _state = this.state,
			    selectOption = _state.selectOption,
			    selectSourceOption = _state.selectSourceOption;

			var options = [{
				label: '公司名称',
				value: 'COMP_NAME'
			}, {
				label: '手机号',
				value: 'PHONE'
			}, {
				label: '微信',
				value: 'WECHAT'
			}, {
				label: '姓名',
				value: 'NAME'
			}];
			return _react2.default.createElement(
				'form',
				{ onSubmit: handleSubmit(this.onSubmit), style: { marginTop: '37px', marginLeft: '40px' } },
				_react2.default.createElement(
					_krUi.ListGroup,
					null,
					_react2.default.createElement(
						_krUi.ListGroupItem,
						{ style: { marginBottom: 5 } },
						_react2.default.createElement(_krUi.SearchForm, { searchFilter: options, style: { width: 252, marginBottom: 10 }, defaultFilter: filter, defaultContent: content, onSubmit: this.onFilter })
					)
				),
				_react2.default.createElement(_krUi.KrField, { name: 'work', component: 'city', label: '\u5DE5\u4F5C\u5730\u70B9', style: { display: 'block', width: '252px', marginRight: 24, marginBottom: 5 }, onSubmit: this.city }),
				_react2.default.createElement(_krUi.KrField, { name: 'jobId', grid: 1 / 2, component: 'select', label: '\u804C\u4F4D', options: selectOption, style: { width: '252px', marginRight: '33', marginBottom: 5 } }),
				_react2.default.createElement(_krUi.KrField, { name: 'registerSourceId', grid: 1 / 2, component: 'select', label: '\u6CE8\u518C\u6765\u6E90', options: selectSourceOption, style: { width: '252px' } }),
				_react2.default.createElement(AdvanceSearchDateForm, { onStartChange: this.onStartChange, onEndChange: this.onEndChange }),
				_react2.default.createElement(
					_krUi.Grid,
					{ style: { margin: "20px 0 3px -10px" } },
					_react2.default.createElement(
						_krUi.Row,
						null,
						_react2.default.createElement(
							_krUi.ListGroup,
							null,
							_react2.default.createElement(
								_krUi.ListGroupItem,
								{ style: { width: '269px', textAlign: 'right', padding: 0, paddingRight: 15 } },
								_react2.default.createElement(_krUi.Button, { label: '\u786E\u5B9A', type: 'submit' })
							),
							_react2.default.createElement(
								_krUi.ListGroupItem,
								{ style: { width: '254px', textAlign: 'left', padding: 0, paddingLeft: 15 } },
								_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', type: 'button', cancle: true, onTouchTap: this.onCancel })
							)
						)
					)
				)
			);
		}
	}]);

	return NewCreateForm;
}(_react.Component);

NewCreateForm.DefaultPropTypes = {
	initialValues: {
		customerName: '',
		communityName: '',
		lessorAddress: '',
		payTypeList: [],
		paymentList: [],
		fnaCorporationList: []
	}

};
NewCreateForm.PropTypes = {
	onSubmit: _react2.default.PropTypes.func,
	onCancel: _react2.default.PropTypes.func
};

var _default = NewCreateForm = (0, _reduxForm.reduxForm)({
	form: 'AdvancedQueryForm',
	// validate,
	enableReinitialize: true,
	keepDirtyOnReinitialize: true
})(NewCreateForm);

exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(AdvanceSearchDateForm, 'AdvanceSearchDateForm', '/Users/liuyihao/Code/kr-admin/src/Containers/Member/MemberManage/List/AdvancedQueryForm.js');

	__REACT_HOT_LOADER__.register(NewCreateForm, 'NewCreateForm', '/Users/liuyihao/Code/kr-admin/src/Containers/Member/MemberManage/List/AdvancedQueryForm.js');

	__REACT_HOT_LOADER__.register(_default, 'default', '/Users/liuyihao/Code/kr-admin/src/Containers/Member/MemberManage/List/AdvancedQueryForm.js');
}();

;
//# sourceMappingURL=data:application/json;base64,