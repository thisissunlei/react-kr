'use strict';

var _mobx = require('mobx');

var _mobx2 = _interopRequireDefault(_mobx);

var _Redux = require('kr/Redux');

var _reduxForm = require('redux-form');

var _krUi = require('kr-ui');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var State = (0, _mobx.observable)({
	searchParams: {
		page: 1
	},
	openNewMerchants: false,
	openLookMerchants: false,
	openSearchUpper: false,
	openCatch: false,
	openEditCustomerList: false,
	openNewCustomerIndent: false,
	openDialog: false,
	listId: "",
	companyName: '',
	ishasOffice: false,
	editCity: '',
	editprojectName: ''

});
State.hasOfficeChange = (0, _mobx.action)(function (params) {
	this.ishasOffice = params;
});
//新建页的开关
State.switchNewCustomerList = (0, _mobx.action)(function () {
	this.openNewMerchants = !this.openNewMerchants;
});

//查看页面的开关
State.switchLookCustomerList = (0, _mobx.action)(function () {
	this.openLookMerchants = !this.openLookMerchants;
});
//高级查询的开关
State.searchUpperCustomer = (0, _mobx.action)(function () {
	this.openSearchUpper = !this.openSearchUpper;
});
//领取的开关
State.openCatchGoDialog = (0, _mobx.action)(function () {
	this.openCatch = !this.openCatch;
});
//领取确定提交
State.catchSubmit = (0, _mobx.action)(function (arrItem) {
	var ids = arrItem;
	var _this = this;

	_Redux.Store.dispatch(_Redux.Actions.callAPI('receive-customer', {}, { ids: ids })).then(function (response) {
		_this.openCatch = !_this.openCatch;
		_krUi.Message.success('领取成功');
		_this.openDialog = false;
		_this.searchParams = {
			page: 1,
			time: +new Date()
		};
	}).catch(function (err) {
		_krUi.Message.error(err.message);
	});
});
//编辑页面的开关
State.switchEditCustomerList = (0, _mobx.action)(function () {
	this.openEditCustomerList = !this.openEditCustomerList;
});
//新增拜访记录的开关
State.switchCustomerIndent = (0, _mobx.action)(function () {
	this.openNewCustomerIndent = !this.openNewCustomerIndent;
});

State.closeAllMerchants = (0, _mobx.action)(function () {
	this.openLookMerchants = false;
	this.openNewMerchants = false;
	this.openSearchUpper = false;
	this.openEditCustomerList = false;
	this.NewCustomerIndent = false;
});
State.MerchantsListId = (0, _mobx.action)(function (params) {
	this.listId = params;
});

module.exports = State;