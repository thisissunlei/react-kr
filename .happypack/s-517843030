'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Redux = require('kr/Redux');

var _reduxForm = require('redux-form');

var _mobxReact = require('mobx-react');

var _krUi = require('kr-ui');

var _State = require('./State');

var _State2 = _interopRequireDefault(_State);

var _State3 = require('../LookCustomerList/State');

var _State4 = _interopRequireDefault(_State3);

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EditIndent = (0, _mobxReact.observer)(_class = function (_Component) {
	_inherits(EditIndent, _Component);

	function EditIndent(props) {
		_classCallCheck(this, EditIndent);

		var _this2 = _possibleConstructorReturn(this, (EditIndent.__proto__ || Object.getPrototypeOf(EditIndent)).call(this, props));

		_this2.onSubmit = function (values) {
			delete values.cityid;
			values.customerid = _this2.props.listId;
			values.id = _this2.props.editIndentId;
			values.mainbillname = _State2.default.orderName || _this2.props.mainbillname;
			values.mainbillcode = "";
			var _this = _this2;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('edit-order', {}, values)).then(function (response) {
				_State4.default.orderList(_this.props.listId);
				_this.onCancel();
			}).catch(function (err) {
				_krUi.Message.error(err.message);
			});
		};

		_this2.onCancel = function () {
			var onCancel = _this2.props.onCancel;

			onCancel && onCancel();
		};

		_this2.hasOfficeClick = function (params) {
			if (params.value == "HAS") {
				_State2.default.showMatureTime();
			} else if (params.value == "NOHAS") {
				_State2.default.noShowMatureTime();
			}
		};

		_this2.communityChange = function (value) {
			if (!value) {
				return;
			}
			var community = _State2.default.orderReady.communityCity;
			for (var i = 0; i < community.length; i++) {
				if (community[i].communityName == value.label) {
					_Redux.Store.dispatch((0, _reduxForm.change)('EditIndent', 'cityid', community[i].cityId));
					_State2.default.cityLableChange(community[i].cityName);
				}
			}
		};

		_this2.mainbilltypeChange = function (value) {
			_State2.default.orderName = _this2.props.customerName + value.label + _this2.props.orderCount;
		};

		var selectDatas = {
			communityBaselist: [],
			customerSourceList: [],
			giveupList: [],
			levelList: [],
			roundList: [],
			stationTypeList: [],
			visitTypeList: []
		};
		var selectData = props.selectData || selectDatas;
		_State2.default.selectDataInit(selectData);
		return _this2;
	}

	_createClass(EditIndent, [{
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {

			if (typeof nextProps.orderReady == "function") {
				return;
			}
			if (_State2.default.isInit) {
				return;
			}
			_State2.default.orderReady(nextProps.orderReady);
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    error = _props.error,
			    handleSubmit = _props.handleSubmit,
			    pristine = _props.pristine,
			    reset = _props.reset,
			    companyName = _props.companyName,
			    customerName = _props.customerName,
			    orderCount = _props.orderCount,
			    mainbillname = _props.mainbillname,
			    cityNameIndent = _props.cityNameIndent;

			var citys = _State2.default.cityLable || cityNameIndent;
			citys = !citys ? "无" : citys;
			return _react2.default.createElement(
				'form',
				{ className: 'm-newMerchants', onSubmit: handleSubmit(this.onSubmit), style: { paddingLeft: 7 } },
				_react2.default.createElement(
					'div',
					{ className: 'title' },
					_react2.default.createElement(
						'div',
						null,
						_react2.default.createElement('span', { className: 'order-new-icon' }),
						_react2.default.createElement(
							'label',
							{ className: 'title-text' },
							companyName
						)
					),
					_react2.default.createElement('div', { className: 'order-close', onClick: this.onCancel })
				),
				_react2.default.createElement(
					'div',
					{ className: 'kk', style: { marginTop: 30, paddingLeft: 20 } },
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, label: '\u8BA2\u5355\u7C7B\u578B', name: 'mainbilltype', style: { width: 262, marginLeft: 15 }, component: 'select',
						options: _State2.default.orderFound,
						requireLabel: true,
						onChange: this.mainbilltypeChange
					}),
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, label: '\u6240\u5728\u793E\u533A', name: 'communityid', component: 'select', style: { width: 262, marginLeft: 30 },
						options: _State2.default.community,
						requireLabel: true,
						onChange: this.communityChange
					}),
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, label: '\u6240\u5728\u57CE\u5E02', name: 'cityid', component: 'labelText', style: { width: 262, marginLeft: 15 }, value: citys, inline: false }),
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, label: '\u8BA2\u5355\u540D\u79F0', name: 'mainbillname', style: { width: 262, marginLeft: 30 }, component: 'labelText', value: _State2.default.orderName ? _State2.default.orderName : mainbillname, requireLabel: true, inline: false }),
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, label: '\u8BA2\u5355\u63CF\u8FF0', name: 'mainbilldesc', style: { width: 555, marginLeft: 15, marginTop: -5 }, heightStyle: { height: "80px" }, component: 'textarea', maxSize: 100, requireLabel: false })
				),
				_react2.default.createElement(
					_krUi.Grid,
					{ style: { marginTop: 0, marginRight: 40 } },
					_react2.default.createElement(
						_krUi.Row,
						null,
						_react2.default.createElement(
							_krUi.Col,
							{ md: 12, align: 'center' },
							_react2.default.createElement(
								_krUi.ButtonGroup,
								null,
								_react2.default.createElement(
									'div',
									{ className: 'ui-btn-center' },
									_react2.default.createElement(_krUi.Button, { label: '\u786E\u5B9A', type: 'submit', joinEditForm: true })
								),
								_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', type: 'button', cancle: true, onTouchTap: this.onCancel })
							)
						)
					)
				)
			);
		}
	}]);

	return EditIndent;
}(_react.Component)) || _class;

EditIndent.PropTypes = {
	onSubmit: _react2.default.PropTypes.func,
	onCancel: _react2.default.PropTypes.func
};

var validate = function validate(values) {

	var errors = {};

	if (!values.mainbilltype) {
		errors.mainbilltype = '请选择订单类型';
	}
	if (!values.communityid) {
		errors.communityid = '请选择所在社区';
	}
	return errors;
};

var _default = (0, _reduxForm.reduxForm)({ form: 'EditIndent', validate: validate })(EditIndent);

exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(EditIndent, 'EditIndent', '/Users/smile/Documents/kr-admin/src/Containers/Operation/CustomerManage/CustomerList/EditIndent/index.js');

	__REACT_HOT_LOADER__.register(validate, 'validate', '/Users/smile/Documents/kr-admin/src/Containers/Operation/CustomerManage/CustomerList/EditIndent/index.js');

	__REACT_HOT_LOADER__.register(_default, 'default', '/Users/smile/Documents/kr-admin/src/Containers/Operation/CustomerManage/CustomerList/EditIndent/index.js');
}();

;