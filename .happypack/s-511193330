'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.navActive = navActive;
exports.setUserNavs = setUserNavs;
exports.setCurrentNav = setCurrentNav;

var _nodeFetch = require('node-fetch');

var _nodeFetch2 = _interopRequireDefault(_nodeFetch);

var _types = require('./types');

var Types = _interopRequireWildcard(_types);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function navActive(menuCode) {
	return function (dispatch, getState) {
		console.log("11111");
		var state = getState();
		var permissionNavs = state.navs.items;

		permissionNavs.forEach(function (item, index) {
			item.active = false;
			if (item.hasOwnProperty('menuItems') && Object.prototype.toString.call(item.menuItems) === '[object Array]' && item.menuItems.length) {
				item.menuItems.forEach(function (child, key) {
					if (child.hasOwnProperty('menuItems') && Object.prototype.toString.call(child.menuItems) === '[object Array]' && child.menuItems.length) {
						child.menuItems.forEach(function (children, i) {
							children.active = false;
							if (children.menuCode == menuCode) {
								children.active = true;
							} else {
								children.active = false;
							}
						});
					}
				});
			}
		});

		dispatch({
			type: Types.SET_USER_NAVS,
			response: permissionNavs
		});
	};
}

//当前用户有哪些导航权限

function setUserNavs(navcodes) {
	return function (dispatch, getState) {
		var state = getState();
		var items = state.navs.items;
		var codeKeys = Object.keys(navcodes);
		var permissionNavs = [];

		items.forEach(function (item, index) {
			if (item.hasOwnProperty('menuCode') && codeKeys.indexOf(item.menuCode) !== -1) {
				permissionNavs.push(item);
			}
		});

		permissionNavs.forEach(function (item, index) {
			var itemPermissionKeys = navcodes[item.menuCode];
			var childNavs = [];

			item.permission = true;

			if (item.hasOwnProperty('menuItems') && item.menuItems.length) {
				item.menuItems.forEach(function (child, key) {
					if (child.hasOwnProperty('menuCode') && itemPermissionKeys.indexOf(child.menuCode) !== -1) {

						if (child.hasOwnProperty('menuItems') && child.menuItems.length) {
							var childrenNavs = [];
							child.menuItems.forEach(function (children, i) {
								if (children.hasOwnProperty('menuCode') && itemPermissionKeys.indexOf(children.menuCode) !== -1) {
									children.permission = true;
									childrenNavs.push(children);
								}
							});

							child.permission = true;
							child.menuItems = childrenNavs;
						}

						childNavs.push(child);
					}
				});
				item.menuItems = childNavs;
			}
		});

		dispatch({
			type: Types.SET_USER_NAVS,
			response: permissionNavs
		});
	};
}

function setNavsCurrentRoute(currentRoute) {

	return {
		type: Types.SET_NAVS_CURRENT_ROUTER,
		router: currentRoute
	};
}

function setRouterParent(parentRouter) {
	return {
		type: Types.SET_NAVS_CURRENT_PARENT_ROUTER,
		router: parentRouter
	};
}

function setRouterChild(childRouter) {
	return {
		type: Types.SET_NAVS_CURRENT_CHILD_ROUTER,
		router: childRouter
	};
}

function setNavsCurrentItems(fatherRouter) {
	return {
		type: Types.SET_NAVS_CURRENT_ITEMS,
		router: fatherRouter
	};
}

function setNavsActivity(fatherRouter, childRouter) {
	return {
		type: Types.SET_NAVS_ACTIVITY,
		router: fatherRouter,
		childRouter: childRouter
	};
}

function setCurrentNav(router) {

	router = router.split('?').shift();
	var fatherRouter = router.substring(2).split('/').shift();
	var childRouter = router.substring(2).split('/')[1];

	// if(typeof childRouter !== 'undefined' && childRouter.indexOf('?') !==-1){
	// 	childRouter = childRouter.split('?').shift();
	// }

	return function (dispatch) {

		dispatch(setRouterParent(fatherRouter));
		dispatch(setRouterChild(childRouter));

		dispatch(setNavsCurrentRoute(router.substr(1)));
		dispatch(setNavsCurrentItems(fatherRouter));
		dispatch(setNavsActivity(fatherRouter, router.substr(1)));
	};
}
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(navActive, 'navActive', '/Users/tmac_zc/Code/kr-admin/src/Redux/Modules/Navs/actions.js');

	__REACT_HOT_LOADER__.register(setUserNavs, 'setUserNavs', '/Users/tmac_zc/Code/kr-admin/src/Redux/Modules/Navs/actions.js');

	__REACT_HOT_LOADER__.register(setNavsCurrentRoute, 'setNavsCurrentRoute', '/Users/tmac_zc/Code/kr-admin/src/Redux/Modules/Navs/actions.js');

	__REACT_HOT_LOADER__.register(setRouterParent, 'setRouterParent', '/Users/tmac_zc/Code/kr-admin/src/Redux/Modules/Navs/actions.js');

	__REACT_HOT_LOADER__.register(setRouterChild, 'setRouterChild', '/Users/tmac_zc/Code/kr-admin/src/Redux/Modules/Navs/actions.js');

	__REACT_HOT_LOADER__.register(setNavsCurrentItems, 'setNavsCurrentItems', '/Users/tmac_zc/Code/kr-admin/src/Redux/Modules/Navs/actions.js');

	__REACT_HOT_LOADER__.register(setNavsActivity, 'setNavsActivity', '/Users/tmac_zc/Code/kr-admin/src/Redux/Modules/Navs/actions.js');

	__REACT_HOT_LOADER__.register(setCurrentNav, 'setCurrentNav', '/Users/tmac_zc/Code/kr-admin/src/Redux/Modules/Navs/actions.js');
}();

;
//# sourceMappingURL=data:application/json;base64,