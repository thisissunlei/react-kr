"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _simpleAssign = require("simple-assign");

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RadioComponent = function (_React$Component) {
	_inherits(RadioComponent, _React$Component);

	function RadioComponent(props) {
		_classCallCheck(this, RadioComponent);

		return _possibleConstructorReturn(this, (RadioComponent.__proto__ || Object.getPrototypeOf(RadioComponent)).call(this, props));
	}

	_createClass(RadioComponent, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    input = _props.input,
			    label = _props.label,
			    type = _props.type,
			    _props$meta = _props.meta,
			    touched = _props$meta.touched,
			    error = _props$meta.error,
			    requireLabel = _props.requireLabel,
			    disabled = _props.disabled,
			    placeholder = _props.placeholder,
			    style = _props.style,
			    checked = _props.checked;


			var Styles = (0, _simpleAssign2.default)(style, {
				paddingRight: 10
			});

			return _react2.default.createElement(
				"span",
				{ style: Styles },
				_react2.default.createElement("input", _extends({}, input, { placeholder: placeholder || label, type: "radio", disabled: disabled })),
				_react2.default.createElement(
					"span",
					{ style: { paddingLeft: 5 } },
					label
				)
			);
		}
	}]);

	return RadioComponent;
}(_react2.default.Component);

exports.default = RadioComponent;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(RadioComponent, "RadioComponent", "/Users/smile/Documents/kr-admin/src/Components/KrForm/FieldControl/RadioComponent/index.js");
}();

;