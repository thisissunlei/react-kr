'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reduxForm = require('redux-form');

var _WrapComponent = require('../WrapComponent');

var _WrapComponent2 = _interopRequireDefault(_WrapComponent);

require('./index.less');

var _Left = require('./Left');

var _Left2 = _interopRequireDefault(_Left);

var _Right = require('./Right');

var _Right2 = _interopRequireDefault(_Right);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InputComponent = function (_React$Component) {
	_inherits(InputComponent, _React$Component);

	_createClass(InputComponent, [{
		key: 'getChildContext',
		value: function getChildContext() {
			return {
				onChange: this.onChange
			};
		}
	}]);

	function InputComponent(props, context) {
		_classCallCheck(this, InputComponent);

		var _this2 = _possibleConstructorReturn(this, (InputComponent.__proto__ || Object.getPrototypeOf(InputComponent)).call(this, props, context));

		_this2.onChange = function (selectedCommunitys) {
			var sendValues = "";
			for (var i = 0; i < selectedCommunitys.length; i++) {
				for (var j = 0; j < selectedCommunitys[i].children.length; j++) {
					sendValues = sendValues + "," + selectedCommunitys[i].children[j].hardwareId;
				}
			}
			sendValues = sendValues.substring(1);
			var input = _this2.props.input;

			input.onChange(sendValues);
		};

		_this2.componentDidMount = function () {
			var _this = _this2;
			_this2.setState({
				options: _this.props.options
			});
		};

		_this2.chooseAllCommunity = function (newArrayAllCommunitys) {
			_this2.setState({
				selectedCommunitys: newArrayAllCommunitys
			}, function () {
				this.onChange(this.state.selectedCommunitys);
			});
		};

		_this2.chooseCommunityZero = function () {
			_this2.setState({
				selectedCommunitys: []
			}, function () {
				this.onChange(this.state.selectedCommunitys);
			});
		};

		_this2.selectCommunityByCity = function (thisCity) {
			var nowSelectedCommunitys = _this2.state.selectedCommunitys;
			thisCity.children.map(function (item, index) {
				for (var i = 0; i < nowSelectedCommunitys.length; i++) {
					if (item == nowSelectedCommunitys[i]) {
						return;
					}
				}
				nowSelectedCommunitys.push(item);
			});
			_this2.setState({
				selectedCommunitys: nowSelectedCommunitys
			}, function () {
				this.onChange(this.state.selectedCommunitys);
			});
		};

		_this2.addCommunity = function (detailCommunityInfo) {
			var nowSelectedCommunitys = _this2.state.selectedCommunitys;
			var sendValues = "";
			for (var i = 0; i < nowSelectedCommunitys.length; i++) {
				if (detailCommunityInfo == nowSelectedCommunitys[i]) {
					return;
				}
			}
			nowSelectedCommunitys.push(detailCommunityInfo);
			_this2.setState({
				selectedCommunitys: nowSelectedCommunitys
			}, function () {
				this.onChange(this.state.selectedCommunitys);
			});
		};

		_this2.reduceCommunity = function (reducedCommunity) {
			var nowSelectedCommunitys = _this2.state.selectedCommunitys;
			var location = nowSelectedCommunitys.indexOf(reducedCommunity);
			nowSelectedCommunitys.splice(location, 1);
			_this2.setState({
				selectedCommunitys: nowSelectedCommunitys
			}, function () {
				this.onChange(this.state.selectedCommunitys);
			});
		};

		_this2.state = {
			options: [],
			selectedCommunitys: []
		};
		return _this2;
	}
	// 添加全部社区

	// 去除全部社区

	// 通过城市添加社区

	//点击单个社区添加

	// 点击单个社区减少


	_createClass(InputComponent, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    options = _props.options,
			    defaultValue = _props.defaultValue;

			var selectedCommunitys = this.state;
			return _react2.default.createElement(
				'div',
				{ className: 'ui-door-card', value: selectedCommunitys },
				_react2.default.createElement(_Left2.default, { communitys: options,
					chooseAllCommunity: this.chooseAllCommunity,
					selectedCommunitys: this.state.selectedCommunitys,
					selectCommunityByCity: this.selectCommunityByCity,
					addCommunity: this.addCommunity }),
				_react2.default.createElement(_Right2.default, {
					selectedCommunitys: this.state.selectedCommunitys,
					chooseCommunityZero: this.chooseCommunityZero,
					reduceCommunity: this.reduceCommunity

				})
			);
		}
	}]);

	return InputComponent;
}(_react2.default.Component);

InputComponent.propTypes = {
	options: _react2.default.PropTypes.array,
	defaultValue: _react2.default.PropTypes.string,
	selected: _react2.default.PropTypes.array
};
InputComponent.childContextTypes = {
	onChange: _react2.default.PropTypes.func.isRequired
};
exports.default = InputComponent;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(InputComponent, 'InputComponent', '/Users/liuyihao/Code/kr-admin/src/Components/KrField/DoorCardComponent/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,