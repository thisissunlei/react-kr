'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Utils = require('kr/Utils');

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Input = function (_React$Component) {
	_inherits(Input, _React$Component);

	_createClass(Input, [{
		key: 'componentDidMount',
		value: function componentDidMount() {}
	}]);

	function Input(props) {
		_classCallCheck(this, Input);

		var _this = _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, props));

		_this.onValidate = function (value) {

			value = value || _this.state.value;

			var _this$props = _this.props,
			    minLength = _this$props.minLength,
			    maxLength = _this$props.maxLength,
			    requiredValue = _this$props.requiredValue,
			    pattern = _this$props.pattern,
			    errors = _this$props.errors;


			if (requiredValue && !value) {
				return errors['requiredValue'];
			}

			if (minLength && String(value).length < minLength) {
				return errors['minLength'];
			}

			if (maxLength && String(value).length > maxLength) {
				return errors['maxLength'];
			}

			if (pattern && !pattern.test(value)) {
				return errors['pattern'];
			}

			return undefined;
		};

		_this.onBlur = function () {
			var value = _this.state.value;

			var message = _this.onValidate();
			var _this$props2 = _this.props,
			    onError = _this$props2.onError,
			    onBlur = _this$props2.onBlur;

			if (typeof message !== 'undefined') {
				onError && onError(message);
			}
			onBlur && onBlur(value);
		};

		_this.onFocus = function () {
			var onFocus = _this.props.onFocus;

			onFocus && onFocus();
		};

		_this.onChange = _this.onChange.bind(_this);

		_this.state = {
			value: _this.props.defaultValue
		};

		return _this;
	}

	_createClass(Input, [{
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			if (nextProps.value != this.props.value) {
				this.setState({
					value: nextProps.value
				});
			}
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			if (!this.props.autoFocus) {
				return;
			}
			this.refs.input.focus();
		}
	}, {
		key: 'onChange',
		value: function onChange(event) {

			var value = event.target.value;
			var _props = this.props,
			    onChange = _props.onChange,
			    maxLength = _props.maxLength;

			if (maxLength) {
				value = value.slice(0, maxLength);
			}

			this.setState({
				value: value
			});
			onChange && onChange(value);

			var message = this.onValidate(value);
			var onError = this.props.onError;

			onError && onError(message);
		}
	}, {
		key: 'render',
		value: function render() {
			var _props2 = this.props,
			    children = _props2.children,
			    className = _props2.className,
			    style = _props2.style,
			    type = _props2.type,
			    name = _props2.name,
			    disabled = _props2.disabled,
			    placeholder = _props2.placeholder,
			    pattern = _props2.pattern,
			    other = _objectWithoutProperties(_props2, ['children', 'className', 'style', 'type', 'name', 'disabled', 'placeholder', 'pattern']);

			var value = this.state.value;


			var classNames = (0, _Utils.ClassNames)('ui-input', className);

			if (disabled) {
				classNames = (0, _Utils.ClassNames)('ui-input', className, 'input-disabled');
			}

			return _react2.default.createElement('input', _extends({ ref: 'input', type: type, name: name, className: classNames, style: style, placeholder: placeholder, value: value }, other, { disabled: disabled, onChange: this.onChange, onBlur: this.onBlur, onFocus: this.onFocus }));
		}
	}]);

	return Input;
}(_react2.default.Component);

Input.displayName = 'Input';
Input.defaultPorps = {
	value: '',
	type: 'text',
	placeholder: '',
	disabled: false
};
Input.propTypes = {
	name: _react2.default.PropTypes.string,
	style: _react2.default.PropTypes.object,
	className: _react2.default.PropTypes.string,
	type: _react2.default.PropTypes.string,
	children: _react2.default.PropTypes.node,
	minLength: _react2.default.PropTypes.number,
	maxLength: _react2.default.PropTypes.number,
	pattern: _react2.default.PropTypes.object,
	placeholder: _react2.default.PropTypes.string,
	disabled: _react2.default.PropTypes.bool,
	/**
 *{maxLength:'不能超过最大值',minLength:'最小值为'}
 *
 */
	errors: _react2.default.PropTypes.object,
	onError: _react2.default.PropTypes.func,
	autoFocus: _react2.default.PropTypes.bool
};
exports.default = Input;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(Input, 'Input', '/Users/liuyihao/Code/kr-admin/src/Components/Input/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,