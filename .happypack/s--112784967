'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.plan = plan;

var _types = require('./types');

var Types = _interopRequireWildcard(_types);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function plan() {
	var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	var action = arguments[1];


	switch (action.type) {

		case Types.SET_NOW_DATE:
			{
				var _ret = function () {
					var items = state.items;

					var nowDate = action.response;

					var nowTrip = [];
					nowTrip = items.filter(function (item) {
						return item.createAt == nowDate;
					});

					return {
						v: _extends({}, state, { now_date: +new Date(action.response.split('-').join()), now_trip: nowTrip })
					};
				}();

				if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
			}

		case Types.LOAD_PLAN_REQUEST:
			{
				return _extends({}, state);
			}

		case Types.LOAD_PLAN_SUCCESS:
			{
				return _extends({}, state, action.response);
			}

		case Types.LOAD_PLAN_FAILURE:
			{
				//return action.error;
				return _extends({}, state);
			}

		case Types.CREATE_PLAN_REQUST:
			{
				return _extends({}, state);
			}

		case Types.CREATE_PLAN_SUCCESS:
			{
				var items = state.items;

				items.push(action.response);
				return _extends({}, state, { items: items });
			}

		case Types.CREATE_PLAN_FAILURE:
			{
				return _extends({}, state);
				//return action.error;
			}

		default:
			{
				return state;
			}

	}
}
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(plan, 'plan', '/Users/tmac_zc/Code/kr-admin/src/Redux/Modules/Plan/reducers.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9SZWR1eC9Nb2R1bGVzL1BsYW4vcmVkdWNlcnMuanMiXSwibmFtZXMiOlsicGxhbiIsIlR5cGVzIiwic3RhdGUiLCJhY3Rpb24iLCJ0eXBlIiwiU0VUX05PV19EQVRFIiwiaXRlbXMiLCJub3dEYXRlIiwicmVzcG9uc2UiLCJub3dUcmlwIiwiZmlsdGVyIiwiaXRlbSIsImNyZWF0ZUF0Iiwibm93X2RhdGUiLCJEYXRlIiwic3BsaXQiLCJqb2luIiwibm93X3RyaXAiLCJMT0FEX1BMQU5fUkVRVUVTVCIsIkxPQURfUExBTl9TVUNDRVNTIiwiTE9BRF9QTEFOX0ZBSUxVUkUiLCJDUkVBVEVfUExBTl9SRVFVU1QiLCJDUkVBVEVfUExBTl9TVUNDRVNTIiwicHVzaCIsIkNSRUFURV9QTEFOX0ZBSUxVUkUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7UUFFZ0JBLEksR0FBQUEsSTs7QUFGaEI7O0lBQVlDLEs7Ozs7QUFFTCxTQUFTRCxJQUFULEdBQWdDO0FBQUEsS0FBbEJFLEtBQWtCLHVFQUFWLEVBQVU7QUFBQSxLQUFQQyxNQUFPOzs7QUFFdEMsU0FBT0EsT0FBT0MsSUFBZDs7QUFFQyxPQUFLSCxNQUFNSSxZQUFYO0FBQXdCO0FBQUE7QUFBQSxTQUNoQkMsS0FEZ0IsR0FDUEosS0FETyxDQUNoQkksS0FEZ0I7O0FBRXZCLFNBQU1DLFVBQVVKLE9BQU9LLFFBQXZCOztBQUVBLFNBQUlDLFVBQVUsRUFBZDtBQUNBQSxlQUFVSCxNQUFNSSxNQUFOLENBQWEsVUFBU0MsSUFBVCxFQUFjO0FBQ3BDLGFBQVFBLEtBQUtDLFFBQUwsSUFBaUJMLE9BQXpCO0FBQ0EsTUFGUyxDQUFWOztBQUlBO0FBQUEsc0JBQVdMLEtBQVgsRUFBb0IsRUFBQ1csVUFBUyxDQUFDLElBQUlDLElBQUosQ0FBU1gsT0FBT0ssUUFBUCxDQUFnQk8sS0FBaEIsQ0FBc0IsR0FBdEIsRUFBMkJDLElBQTNCLEVBQVQsQ0FBWCxFQUF1REMsVUFBU1IsT0FBaEUsRUFBcEI7QUFBQTtBQVR1Qjs7QUFBQTtBQVV2Qjs7QUFFRixPQUFLUixNQUFNaUIsaUJBQVg7QUFBNkI7QUFDNUIsd0JBQVdoQixLQUFYO0FBQ0E7O0FBRUQsT0FBS0QsTUFBTWtCLGlCQUFYO0FBQTZCO0FBQzVCLHdCQUFXakIsS0FBWCxFQUFvQkMsT0FBT0ssUUFBM0I7QUFDQTs7QUFFRCxPQUFLUCxNQUFNbUIsaUJBQVg7QUFBNkI7QUFDNUI7QUFDQSx3QkFBV2xCLEtBQVg7QUFDQTs7QUFFRCxPQUFLRCxNQUFNb0Isa0JBQVg7QUFBOEI7QUFDN0Isd0JBQVduQixLQUFYO0FBQ0E7O0FBRUQsT0FBS0QsTUFBTXFCLG1CQUFYO0FBQStCO0FBQUEsUUFDdkJoQixLQUR1QixHQUNkSixLQURjLENBQ3ZCSSxLQUR1Qjs7QUFFOUJBLFVBQU1pQixJQUFOLENBQVdwQixPQUFPSyxRQUFsQjtBQUNBLHdCQUFXTixLQUFYLEVBQW9CLEVBQUNJLFlBQUQsRUFBcEI7QUFDQTs7QUFFRCxPQUFLTCxNQUFNdUIsbUJBQVg7QUFBK0I7QUFDOUIsd0JBQVd0QixLQUFYO0FBQ0E7QUFDQTs7QUFFRDtBQUFRO0FBQ1AsV0FBT0EsS0FBUDtBQUNBOztBQTVDRDtBQStDQTs7Ozs7Ozs7K0JBakRlRixJIiwiZmlsZSI6InJlZHVjZXJzLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90bWFjX3pjL0NvZGUva3ItYWRtaW4iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUeXBlcyBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHBsYW4oc3RhdGUgPSB7fSxhY3Rpb24pe1xuXG5cdHN3aXRjaChhY3Rpb24udHlwZSl7XG5cblx0XHRjYXNlIFR5cGVzLlNFVF9OT1dfREFURTp7XG5cdFx0XHRjb25zdCB7aXRlbXN9ID0gc3RhdGU7XG5cdFx0XHRjb25zdCBub3dEYXRlID0gYWN0aW9uLnJlc3BvbnNlO1xuXG5cdFx0XHRsZXQgbm93VHJpcCA9IFtdO1xuXHRcdFx0bm93VHJpcCA9IGl0ZW1zLmZpbHRlcihmdW5jdGlvbihpdGVtKXtcblx0XHRcdFx0cmV0dXJuICBpdGVtLmNyZWF0ZUF0ID09IG5vd0RhdGU7XG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIHsuLi5zdGF0ZSwuLi57bm93X2RhdGU6K25ldyBEYXRlKGFjdGlvbi5yZXNwb25zZS5zcGxpdCgnLScpLmpvaW4oKSksbm93X3RyaXA6bm93VHJpcH19O1xuXHRcdH1cblxuXHRjYXNlIFR5cGVzLkxPQURfUExBTl9SRVFVRVNUOntcblx0XHRyZXR1cm4gey4uLnN0YXRlfTtcblx0fVxuXG5cdGNhc2UgVHlwZXMuTE9BRF9QTEFOX1NVQ0NFU1M6e1xuXHRcdHJldHVybiB7Li4uc3RhdGUsLi4uYWN0aW9uLnJlc3BvbnNlfTtcblx0fVxuXG5cdGNhc2UgVHlwZXMuTE9BRF9QTEFOX0ZBSUxVUkU6e1xuXHRcdC8vcmV0dXJuIGFjdGlvbi5lcnJvcjtcblx0XHRyZXR1cm4gey4uLnN0YXRlfTtcblx0fVxuXG5cdGNhc2UgVHlwZXMuQ1JFQVRFX1BMQU5fUkVRVVNUOntcblx0XHRyZXR1cm4gey4uLnN0YXRlfTtcblx0fVxuXG5cdGNhc2UgVHlwZXMuQ1JFQVRFX1BMQU5fU1VDQ0VTUzp7XG5cdFx0Y29uc3Qge2l0ZW1zfSA9IHN0YXRlO1xuXHRcdGl0ZW1zLnB1c2goYWN0aW9uLnJlc3BvbnNlKTtcblx0XHRyZXR1cm4gey4uLnN0YXRlLC4uLntpdGVtc319O1xuXHR9XG5cblx0Y2FzZSBUeXBlcy5DUkVBVEVfUExBTl9GQUlMVVJFOntcblx0XHRyZXR1cm4gey4uLnN0YXRlfTtcblx0XHQvL3JldHVybiBhY3Rpb24uZXJyb3I7XG5cdH1cblxuXHRkZWZhdWx0Ontcblx0XHRyZXR1cm4gc3RhdGU7XG5cdH1cblxuXHR9XG59XG5cbiJdfQ==