'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _KrDate = require('../../KrDate');

var _KrDate2 = _interopRequireDefault(_KrDate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableRowColumn = function (_React$Component) {
	_inherits(TableRowColumn, _React$Component);

	function TableRowColumn(props) {
		_classCallCheck(this, TableRowColumn);

		var _this = _possibleConstructorReturn(this, (TableRowColumn.__proto__ || Object.getPrototypeOf(TableRowColumn)).call(this, props));

		_this.renderValue = function () {
			var _this$props = _this.props,
			    value = _this$props.value,
			    options = _this$props.options,
			    component = _this$props.component,
			    itemData = _this$props.itemData,
			    defaultValue = _this$props.defaultValue;


			var oldValue = value;

			//处理数据格式
			value = _this.onFormatData(value);

			if (options && options.length) {
				options.map(function (item, index) {
					if (item.value == value) {
						value = item.label;
					}
				});
			}

			if (typeof component === 'function') {
				return component(value, oldValue, itemData);
			}

			return value || defaultValue;
		};

		_this.onClick = _this.onClick.bind(_this);
		_this.onMouseEnter = _this.onMouseEnter.bind(_this);
		_this.onMouseLeave = _this.onMouseLeave.bind(_this);
		_this.onFormatData = _this.onFormatData.bind(_this);

		return _this;
	}

	_createClass(TableRowColumn, [{
		key: 'onClick',
		value: function onClick(event) {

			if (event.target.nodeName.toLowerCase() != 'td' || event.target.nodeName.toLowerCase() == 'input') {
				return null;
			}

			if (this.props.onCellClick) {
				this.props.onCellClick(event, this.props.columnNumber);
			}
		}
	}, {
		key: 'onMouseEnter',
		value: function onMouseEnter(event) {
			if (this.props.onHover) {
				this.props.onHover(event, this.props.columnNumber);
			}
		}
	}, {
		key: 'onMouseLeave',
		value: function onMouseLeave(event) {
			if (this.props.onHoverExit) {
				this.props.onHoverExit(event, this.props.columnNumber);
			}
		}
	}, {
		key: 'onFormatData',
		value: function onFormatData(value) {
			var onFormatData = this.props.onFormatData;


			if (typeof onFormatData === 'function') {
				value = onFormatData(value);
			}

			return value;
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    children = _props.children,
			    className = _props.className,
			    columnNumber = _props.columnNumber,
			    style = _props.style,
			    name = _props.name,
			    value = _props.value,
			    type = _props.type,
			    itemData = _props.itemData,
			    options = _props.options,
			    format = _props.format,
			    component = _props.component,
			    other = _objectWithoutProperties(_props, ['children', 'className', 'columnNumber', 'style', 'name', 'value', 'type', 'itemData', 'options', 'format', 'component']);

			var handlers = {
				onClick: this.onClick,
				onMouseEnter: this.onMouseEnter,
				onMouseLeave: this.onMouseLeave
			};

			if (name) {

				if (type == 'date' && typeof component === 'function') {
					return _react2.default.createElement(
						'td',
						_extends({ className: className, style: style }, handlers, other),
						this.renderValue()
					);
				}

				if (type == 'date') {
					return _react2.default.createElement(
						'td',
						_extends({ className: className, style: style }, handlers, other),
						_react2.default.createElement(_KrDate2.default, { value: this.renderValue(), format: format })
					);
				}

				return _react2.default.createElement(
					'td',
					_extends({ className: className, style: style }, handlers, other),
					this.renderValue()
				);
			}

			if (type == 'operation') {

				var operationElement = [];

				_react2.default.Children.map(children, function (child) {
					if (!_react2.default.isValidElement(child)) return;

					var hidden = child.props.hidden;


					if (hidden) {
						hidden = !!itemData[hidden];
					}

					var newChild = _react2.default.cloneElement(child, {
						hidden: hidden
					});
					operationElement.push(newChild);
				});

				return _react2.default.createElement(
					'td',
					_extends({ className: className, style: style }, handlers, other),
					operationElement
				);
			}

			return _react2.default.createElement(
				'td',
				_extends({ className: className, style: style }, handlers, other),
				children
			);
		}
	}]);

	return TableRowColumn;
}(_react2.default.Component);

TableRowColumn.displayName = 'TableRowColumn';
TableRowColumn.propTypes = {
	className: _react2.default.PropTypes.string,
	children: _react2.default.PropTypes.node,
	columnNumber: _react2.default.PropTypes.number,
	hoverable: _react2.default.PropTypes.bool,
	onCellClick: _react2.default.PropTypes.func,
	onHover: _react2.default.PropTypes.func,
	onHoverExit: _react2.default.PropTypes.func,
	style: _react2.default.PropTypes.object,
	name: _react2.default.PropTypes.string,
	value: _react2.default.PropTypes.string,
	options: _react2.default.PropTypes.array,
	type: _react2.default.PropTypes.string,
	format: _react2.default.PropTypes.string,
	onFormatData: _react2.default.PropTypes.func,
	component: _react2.default.PropTypes.func,
	defaultValue: _react2.default.PropTypes.any
};
exports.default = TableRowColumn;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(TableRowColumn, 'TableRowColumn', '/Users/liuyihao/Code/kr-admin/src/Components/Table/TableRowColumn/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,