'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _simpleAssign = require('simple-assign');

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _transitions = require('../styles/transitions');

var _transitions2 = _interopRequireDefault(_transitions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = {
  /**
   * True if the parent `TextField` is disabled.
   */
  disabled: _react.PropTypes.bool,
  /**
   * Override the inline-styles of the underline when parent `TextField` is disabled.
   */
  disabledStyle: _react.PropTypes.object,
  /**
   * True if the parent `TextField` has an error.
   */
  error: _react.PropTypes.bool,
  /**
   * Override the inline-styles of the underline when parent `TextField` has an error.
   */
  errorStyle: _react.PropTypes.object,
  /**
   * True if the parent `TextField` is focused.
   */
  focus: _react.PropTypes.bool,
  /**
   * Override the inline-styles of the underline when parent `TextField` is focused.
   */
  focusStyle: _react.PropTypes.object,
  /**
   * @ignore
   * The material-ui theme applied to this component.
   */
  muiTheme: _react.PropTypes.object.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _react.PropTypes.object
};

var defaultProps = {
  disabled: false,
  disabledStyle: {},
  error: false,
  errorStyle: {},
  focus: false,
  focusStyle: {},
  style: {}
};

var TextFieldUnderline = function TextFieldUnderline(props) {
  var disabled = props.disabled,
      disabledStyle = props.disabledStyle,
      error = props.error,
      errorStyle = props.errorStyle,
      focus = props.focus,
      focusStyle = props.focusStyle,
      muiTheme = props.muiTheme,
      style = props.style;
  var errorStyleColor = errorStyle.color;
  var prepareStyles = muiTheme.prepareStyles,
      _muiTheme$textField = muiTheme.textField,
      borderColor = _muiTheme$textField.borderColor,
      disabledTextColor = _muiTheme$textField.disabledTextColor,
      errorColor = _muiTheme$textField.errorColor,
      focusColor = _muiTheme$textField.focusColor;


  var styles = {
    root: {
      border: 'none',
      borderBottom: 'solid 1px',
      borderColor: borderColor,
      bottom: 8,
      boxSizing: 'content-box',
      margin: 0,
      position: 'absolute',
      width: '100%'
    },
    disabled: {
      borderBottom: 'dotted 2px',
      borderColor: disabledTextColor
    },
    focus: {
      borderBottom: 'solid 2px',
      borderColor: focusColor,
      transform: 'scaleX(0)',
      transition: _transitions2.default.easeOut()
    },
    error: {
      borderColor: errorStyleColor ? errorStyleColor : errorColor,
      transform: 'scaleX(1)'
    }
  };

  var underline = (0, _simpleAssign2.default)({}, styles.root, style);
  var focusedUnderline = (0, _simpleAssign2.default)({}, underline, styles.focus, focusStyle);

  if (disabled) underline = (0, _simpleAssign2.default)({}, underline, styles.disabled, disabledStyle);
  if (focus) focusedUnderline = (0, _simpleAssign2.default)({}, focusedUnderline, { transform: 'scaleX(1)' });
  if (error) focusedUnderline = (0, _simpleAssign2.default)({}, focusedUnderline, styles.error);

  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement('hr', { style: prepareStyles(underline) }),
    _react2.default.createElement('hr', { style: prepareStyles(focusedUnderline) })
  );
};

TextFieldUnderline.propTypes = propTypes;
TextFieldUnderline.defaultProps = defaultProps;

var _default = TextFieldUnderline;
exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(propTypes, 'propTypes', '/Users/liuyihao/Code/kr-admin/src/Components/DatePicker/TextField/TextFieldUnderline.js');

  __REACT_HOT_LOADER__.register(defaultProps, 'defaultProps', '/Users/liuyihao/Code/kr-admin/src/Components/DatePicker/TextField/TextFieldUnderline.js');

  __REACT_HOT_LOADER__.register(TextFieldUnderline, 'TextFieldUnderline', '/Users/liuyihao/Code/kr-admin/src/Components/DatePicker/TextField/TextFieldUnderline.js');

  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/liuyihao/Code/kr-admin/src/Components/DatePicker/TextField/TextFieldUnderline.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Db21wb25lbnRzL0RhdGVQaWNrZXIvVGV4dEZpZWxkL1RleHRGaWVsZFVuZGVybGluZS5qcyJdLCJuYW1lcyI6WyJwcm9wVHlwZXMiLCJkaXNhYmxlZCIsImJvb2wiLCJkaXNhYmxlZFN0eWxlIiwib2JqZWN0IiwiZXJyb3IiLCJlcnJvclN0eWxlIiwiZm9jdXMiLCJmb2N1c1N0eWxlIiwibXVpVGhlbWUiLCJpc1JlcXVpcmVkIiwic3R5bGUiLCJkZWZhdWx0UHJvcHMiLCJUZXh0RmllbGRVbmRlcmxpbmUiLCJwcm9wcyIsImVycm9yU3R5bGVDb2xvciIsImNvbG9yIiwicHJlcGFyZVN0eWxlcyIsInRleHRGaWVsZCIsImJvcmRlckNvbG9yIiwiZGlzYWJsZWRUZXh0Q29sb3IiLCJlcnJvckNvbG9yIiwiZm9jdXNDb2xvciIsInN0eWxlcyIsInJvb3QiLCJib3JkZXIiLCJib3JkZXJCb3R0b20iLCJib3R0b20iLCJib3hTaXppbmciLCJtYXJnaW4iLCJwb3NpdGlvbiIsIndpZHRoIiwidHJhbnNmb3JtIiwidHJhbnNpdGlvbiIsImVhc2VPdXQiLCJ1bmRlcmxpbmUiLCJmb2N1c2VkVW5kZXJsaW5lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsWUFBWTtBQUNoQjs7O0FBR0FDLFlBQVUsaUJBQVVDLElBSko7QUFLaEI7OztBQUdBQyxpQkFBZSxpQkFBVUMsTUFSVDtBQVNoQjs7O0FBR0FDLFNBQU8saUJBQVVILElBWkQ7QUFhaEI7OztBQUdBSSxjQUFZLGlCQUFVRixNQWhCTjtBQWlCaEI7OztBQUdBRyxTQUFPLGlCQUFVTCxJQXBCRDtBQXFCaEI7OztBQUdBTSxjQUFZLGlCQUFVSixNQXhCTjtBQXlCaEI7Ozs7QUFJQUssWUFBVSxpQkFBVUwsTUFBVixDQUFpQk0sVUE3Qlg7QUE4QmhCOzs7QUFHQUMsU0FBTyxpQkFBVVA7QUFqQ0QsQ0FBbEI7O0FBb0NBLElBQU1RLGVBQWU7QUFDbkJYLFlBQVUs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Ozs7Ozs7O2dDQXJIVGIsUzs7Z0NBb0NBWSxZOztnQ0FVQUMsa0IiLCJmaWxlIjoiVGV4dEZpZWxkVW5kZXJsaW5lLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9saXV5aWhhby9Db2RlL2tyLWFkbWluIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7UHJvcFR5cGVzfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHJhbnNpdGlvbnMgZnJvbSAnLi4vc3R5bGVzL3RyYW5zaXRpb25zJztcblxuY29uc3QgcHJvcFR5cGVzID0ge1xuICAvKipcbiAgICogVHJ1ZSBpZiB0aGUgcGFyZW50IGBUZXh0RmllbGRgIGlzIGRpc2FibGVkLlxuICAgKi9cbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAvKipcbiAgICogT3ZlcnJpZGUgdGhlIGlubGluZS1zdHlsZXMgb2YgdGhlIHVuZGVybGluZSB3aGVuIHBhcmVudCBgVGV4dEZpZWxkYCBpcyBkaXNhYmxlZC5cbiAgICovXG4gIGRpc2FibGVkU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIC8qKlxuICAgKiBUcnVlIGlmIHRoZSBwYXJlbnQgYFRleHRGaWVsZGAgaGFzIGFuIGVycm9yLlxuICAgKi9cbiAgZXJyb3I6IFByb3BUeXBlcy5ib29sLFxuICAvKipcbiAgICogT3ZlcnJpZGUgdGhlIGlubGluZS1zdHlsZXMgb2YgdGhlIHVuZGVybGluZSB3aGVuIHBhcmVudCBgVGV4dEZpZWxkYCBoYXMgYW4gZXJyb3IuXG4gICAqL1xuICBlcnJvclN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAvKipcbiAgICogVHJ1ZSBpZiB0aGUgcGFyZW50IGBUZXh0RmllbGRgIGlzIGZvY3VzZWQuXG4gICAqL1xuICBmb2N1czogUHJvcFR5cGVzLmJvb2wsXG4gIC8qKlxuICAgKiBPdmVycmlkZSB0aGUgaW5saW5lLXN0eWxlcyBvZiB0aGUgdW5kZXJsaW5lIHdoZW4gcGFyZW50IGBUZXh0RmllbGRgIGlzIGZvY3VzZWQuXG4gICAqL1xuICBmb2N1c1N0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKiBUaGUgbWF0ZXJpYWwtdWkgdGhlbWUgYXBwbGllZCB0byB0aGlzIGNvbXBvbmVudC5cbiAgICovXG4gIG11aVRoZW1lOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIC8qKlxuICAgKiBPdmVycmlkZSB0aGUgaW5saW5lLXN0eWxlcyBvZiB0aGUgcm9vdCBlbGVtZW50LlxuICAgKi9cbiAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG59O1xuXG5jb25zdCBkZWZhdWx0UHJvcHMgPSB7XG4gIGRpc2FibGVkOiBmYWxzZSxcbiAgZGlzYWJsZWRTdHlsZToge30sXG4gIGVycm9yOiBmYWxzZSxcbiAgZXJyb3JTdHlsZToge30sXG4gIGZvY3VzOiBmYWxzZSxcbiAgZm9jdXNTdHlsZToge30sXG4gIHN0eWxlOiB7fSxcbn07XG5cbmNvbnN0IFRleHRGaWVsZFVuZGVybGluZSA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7XG4gICAgZGlzYWJsZWQsXG4gICAgZGlzYWJsZWRTdHlsZSxcbiAgICBlcnJvcixcbiAgICBlcnJvclN0eWxlLFxuICAgIGZvY3VzLFxuICAgIGZvY3VzU3R5bGUsXG4gICAgbXVpVGhlbWUsXG4gICAgc3R5bGUsXG4gIH0gPSBwcm9wcztcblxuICBjb25zdCB7XG4gICAgY29sb3I6IGVycm9yU3R5bGVDb2xvcixcbiAgfSA9IGVycm9yU3R5bGU7XG5cbiAgY29uc3Qge1xuICAgIHByZXBhcmVTdHlsZXMsXG4gICAgdGV4dEZpZWxkOiB7XG4gICAgICBib3JkZXJDb2xvcixcbiAgICAgIGRpc2FibGVkVGV4dENvbG9yLFxuICAgICAgZXJyb3JDb2xvcixcbiAgICAgIGZvY3VzQ29sb3IsXG4gICAgfSxcbiAgfSA9IG11aVRoZW1lO1xuXG4gIGNvbnN0IHN0eWxlcyA9IHtcbiAgICByb290OiB7XG4gICAgICBib3JkZXI6ICdub25lJyxcbiAgICAgIGJvcmRlckJvdHRvbTogJ3NvbGlkIDFweCcsXG4gICAgICBib3JkZXJDb2xvcjogYm9yZGVyQ29sb3IsXG4gICAgICBib3R0b206IDgsXG4gICAgICBib3hTaXppbmc6ICdjb250ZW50LWJveCcsXG4gICAgICBtYXJnaW46IDAsXG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgfSxcbiAgICBkaXNhYmxlZDoge1xuICAgICAgYm9yZGVyQm90dG9tOiAnZG90dGVkIDJweCcsXG4gICAgICBib3JkZXJDb2xvcjogZGlzYWJsZWRUZXh0Q29sb3IsXG4gICAgfSxcbiAgICBmb2N1czoge1xuICAgICAgYm9yZGVyQm90dG9tOiAnc29saWQgMnB4JyxcbiAgICAgIGJvcmRlckNvbG9yOiBmb2N1c0NvbG9yLFxuICAgICAgdHJhbnNmb3JtOiAnc2NhbGVYKDApJyxcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zaXRpb25zLmVhc2VPdXQoKSxcbiAgICB9LFxuICAgIGVycm9yOiB7XG4gICAgICBib3JkZXJDb2xvcjogZXJyb3JTdHlsZUNvbG9yID8gZXJyb3JTdHlsZUNvbG9yIDogZXJyb3JDb2xvcixcbiAgICAgIHRyYW5zZm9ybTogJ3NjYWxlWCgxKScsXG4gICAgfSxcbiAgfTtcblxuICBsZXQgdW5kZXJsaW5lID0gT2JqZWN0LmFzc2lnbih7fSwgc3R5bGVzLnJvb3QsIHN0eWxlKTtcbiAgbGV0IGZvY3VzZWRVbmRlcmxpbmUgPSBPYmplY3QuYXNzaWduKHt9LCB1bmRlcmxpbmUsIHN0eWxlcy5mb2N1cywgZm9jdXNTdHlsZSk7XG5cbiAgaWYgKGRpc2FibGVkKSB1bmRlcmxpbmUgPSBPYmplY3QuYXNzaWduKHt9LCB1bmRlcmxpbmUsIHN0eWxlcy5kaXNhYmxlZCwgZGlzYWJsZWRTdHlsZSk7XG4gIGlmIChmb2N1cykgZm9jdXNlZFVuZGVybGluZSA9IE9iamVjdC5hc3NpZ24oe30sIGZvY3VzZWRVbmRlcmxpbmUsIHt0cmFuc2Zvcm06ICdzY2FsZVgoMSknfSk7XG4gIGlmIChlcnJvcikgZm9jdXNlZFVuZGVybGluZSA9IE9iamVjdC5hc3NpZ24oe30sIGZvY3VzZWRVbmRlcmxpbmUsIHN0eWxlcy5lcnJvcik7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPGhyIHN0eWxlPXtwcmVwYXJlU3R5bGVzKHVuZGVybGluZSl9IC8+XG4gICAgICA8aHIgc3R5bGU9e3ByZXBhcmVTdHlsZXMoZm9jdXNlZFVuZGVybGluZSl9IC8+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5UZXh0RmllbGRVbmRlcmxpbmUucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuVGV4dEZpZWxkVW5kZXJsaW5lLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcblxuZXhwb3J0IGRlZmF1bHQgVGV4dEZpZWxkVW5kZXJsaW5lO1xuIl19