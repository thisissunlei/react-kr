'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Redux = require('kr/Redux');

var _reduxForm = require('redux-form');

var _krUi = require('kr-ui');

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BatchUploadImageForm = function (_Component) {
	_inherits(BatchUploadImageForm, _Component);

	function BatchUploadImageForm(props, context) {
		_classCallCheck(this, BatchUploadImageForm);

		var _this2 = _possibleConstructorReturn(this, (BatchUploadImageForm.__proto__ || Object.getPrototypeOf(BatchUploadImageForm)).call(this, props, context));

		_this2.onCancel = function () {
			var onCancel = _this2.props.onCancel;

			onCancel && onCancel();
		};

		_this2.closeBatchUpload = function () {
			var closeBatchUpload = _this2.props.closeBatchUpload;

			closeBatchUpload && closeBatchUpload();
		};

		_this2.openFinishTable = function () {
			var openFinishTable = _this2.props.openFinishTable;

			openFinishTable && openFinishTable();
		};

		_this2.onSubmit = function (values) {
			var _this = _this2;
			if (!values.uploadImage) {
				var tipOpen = _this2.props.tipOpen;

				tipOpen && tipOpen();
				return;
			};
			if (!values.communitys) {
				var tipCommunityOpen = _this2.props.tipCommunityOpen;

				tipCommunityOpen && tipCommunityOpen();
				return;
			};
			_this2.setState({
				submitValuesParams: values,
				selectedCommunitys: values.communitys,
				picUrl: values.uploadImage
			});
			_this.getRealEquipment(values);
		};

		_this2.getRealEquipment = function (values) {
			var _this = _this2;
			var valuesParams = {
				deviceId: values.communitys
			};
			_Redux.Store.dispatch(_Redux.Actions.callAPI('getEquipmentNum', {}, valuesParams)).then(function (response) {
				if (response.length == 0) {
					var seleletZero = _this.props.seleletZero;

					seleletZero && seleletZero();
					return;
				}
				_this.setState({
					submitCommunitys: response,
					submitNum: response.length,
					totalNum: response.length
				}, function () {
					this.openBatchUploadNum();
				});
			}).catch(function (err) {
				_krUi.Notify.show([{
					message: err.message,
					type: 'danger'
				}]);
			});
		};

		_this2.openBatchUploadNum = function () {
			_this2.setState({
				batchUploadNum: !_this2.state.batchUploadNum
			});
		};

		_this2.closeSchedule = function () {
			_this2.setState({
				openSchedule: false
			});
		};

		_this2.openScheduleDiv = function () {
			_this2.setState({
				openSchedule: !_this2.state.openSchedule
			});
		};

		_this2.confirmSubmit = function () {
			var _this = _this2;
			_this.openBatchUploadNum();
			var sendRealEquipment = {
				deviceId: _this.state.selectedCommunitys,
				picUrl: _this.state.picUrl
			};
			_Redux.Store.dispatch(_Redux.Actions.callAPI('oploadImgToEquipment', {}, sendRealEquipment)).then(function (response) {}).catch(function (err) {
				_krUi.Notify.show([{
					message: err.message,
					type: 'danger'
				}]);
			});
			_this.openBatchUploadNum();
			_this.openScheduleDiv();
			var timer = setInterval(function () {
				_Redux.Store.dispatch(_Redux.Actions.callAPI('getPushImgRes', "")).then(function (response) {
					response = response.split("|");
					_this.setState({
						innerBoxWidth: Number(response[0] / response[1] * 298),
						uploadedNum: response[0],
						totalNum: response[1]
					});
					if (response[0] == response[1]) {
						_this.setState({
							openSchedule: false
						});

						window.clearInterval(timer);
						timer = null;
						if (timer == null) {
							_this.closeSchedule();
							_this.closeBatchUpload();
							_this.openFinishTable();
						}
					}
				});
			}, 1000);
		};

		_this2.state = {
			picUrl: '',
			selectedCommunitys: [],
			batchUploadNum: false,
			openSchedule: false,
			submitValues: '',
			submitNum: 0,
			innerBoxWidth: 0,
			uploadedNum: 0,
			totalNum: 0,
			submitValuesParams: {},
			requestURI: "postEquipmentImg",
			communitys: []
		};
		return _this2;
	}
	// 首次加载获取社区列表


	_createClass(BatchUploadImageForm, [{
		key: 'componentDidMount',
		value: function componentDidMount() {}

		// 提交(获取总共上传社区个数)

		// 获取真实设备数

		// 是否打开确定上传窗口

		// 关闭进度条

		// 是否打开进度条

		// 确定开始上传

	}, {
		key: 'render',
		value: function render() {
			var communitys = this.state.communitys;
			var _props = this.props,
			    handleSubmit = _props.handleSubmit,
			    detail = _props.detail;

			return _react2.default.createElement(
				'form',
				{ onSubmit: handleSubmit(this.onSubmit) },
				_react2.default.createElement(_krUi.KrField, { name: 'uploadImage',
					component: 'uploadImage',
					style: { marginTop: 10 },
					photoSize: '212*136',
					pictureFormat: 'JPG',
					pictureMemory: '32K',
					requestURI: this.state.requestURI
				}),
				_react2.default.createElement(_krUi.KrField, { name: 'communitys',
					options: communitys,
					component: 'doorCard',
					defaultValue: communitys,
					getList: this.getList
				}),
				_react2.default.createElement(
					_krUi.Grid,
					{ style: { marginTop: 25, marginBottom: '4px' } },
					_react2.default.createElement(
						_krUi.Row,
						null,
						_react2.default.createElement(
							_krUi.ListGroup,
							null,
							_react2.default.createElement(
								_krUi.ListGroupItem,
								{ style: { width: '305px', textAlign: 'right', padding: 0, paddingRight: 15 } },
								_react2.default.createElement(_krUi.Button, { label: '\u5F00\u59CB\u4E0A\u4F20', type: 'submit' })
							),
							_react2.default.createElement(
								_krUi.ListGroupItem,
								{ style: { width: '254px', textAlign: 'left', padding: 0, paddingLeft: 15 } },
								_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', type: 'button', cancle: true, onTouchTap: this.onCancel })
							)
						)
					)
				),
				_react2.default.createElement(
					_krUi.Dialog,
					{
						title: '\u63D0\u793A',
						open: this.state.batchUploadNum,
						onClose: this.openBatchUploadNum,
						contentStyle: { width: 443, height: 237, position: "absolute", left: "123", top: "43%" }
					},
					_react2.default.createElement(
						'div',
						{ style: { marginTop: 45 } },
						_react2.default.createElement(
							'p',
							{ style: { fontSize: 14, color: "#333333", textAlign: "center" } },
							'\u672C\u6B21\u5C06\u4E0A\u4F20',
							this.state.submitNum,
							'\u53F0\u5927\u95E8\u95E8\u7981\u8BBE\u5907\uFF0C\u786E\u5B9A\u4E0A\u4F20\u56FE\u7247\uFF1F'
						),
						_react2.default.createElement(
							_krUi.Grid,
							{ style: { marginTop: 60, marginBottom: '4px' } },
							_react2.default.createElement(
								_krUi.Row,
								null,
								_react2.default.createElement(
									_krUi.ListGroup,
									null,
									_react2.default.createElement(
										_krUi.ListGroupItem,
										{ style: { width: '171px', textAlign: 'right', padding: 0, paddingRight: 15 } },
										_react2.default.createElement(_krUi.Button, { label: '\u786E\u5B9A', type: 'button', onClick: this.confirmSubmit })
									),
									_react2.default.createElement(
										_krUi.ListGroupItem,
										{ style: { width: '171px', textAlign: 'left', padding: 0, paddingLeft: 15 } },
										_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', type: 'button', cancle: true, onTouchTap: this.openBatchUploadNum })
									)
								)
							)
						)
					)
				),
				_react2.default.createElement(
					'div',
					{ className: 'uploadImageNum', style: { display: this.state.openSchedule ? "block" : "none" } },
					_react2.default.createElement(
						'div',
						{ className: 'uploadImageNumBox' },
						_react2.default.createElement(
							'p',
							{ className: 'uploadImageProgress' },
							this.state.uploadedNum,
							'/',
							this.state.totalNum,
							'\u4E0A\u4F20\u4E2D...'
						),
						_react2.default.createElement(
							'div',
							{ className: 'uploadImageProgressBar' },
							_react2.default.createElement('div', { className: 'uploadImageProgressBarIndex', style: { width: this.state.innerBoxWidth } })
						)
					)
				)
			);
		}
	}]);

	return BatchUploadImageForm;
}(_react.Component);

var _default = BatchUploadImageForm = (0, _reduxForm.reduxForm)({
	form: 'BatchUploadImageForm'
})(BatchUploadImageForm);

exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(BatchUploadImageForm, 'BatchUploadImageForm', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Operation/BasicConfig/EquipmentDefinition/BatchUploadImageForm.js');

	__REACT_HOT_LOADER__.register(_default, 'default', '/Users/dongfanai/Desktop/project/kr-admin/src/Containers/Operation/BasicConfig/EquipmentDefinition/BatchUploadImageForm.js');
}();

;