'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Redux = require('kr/Redux');

var _reactBinding = require('react-binding');

var _dateformat = require('dateformat');

var _dateformat2 = _interopRequireDefault(_dateformat);

var _reduxForm = require('redux-form');

var _krUi = require('kr-ui');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SelectStationForm = function (_Component) {
	_inherits(SelectStationForm, _Component);

	function SelectStationForm(props, context) {
		_classCallCheck(this, SelectStationForm);

		var _this2 = _possibleConstructorReturn(this, (SelectStationForm.__proto__ || Object.getPrototypeOf(SelectStationForm)).call(this, props, context));

		_this2.onSubmit = _this2.onSubmit.bind(_this2);
		_this2.onCancel = _this2.onCancel.bind(_this2);
		_this2.onSelect = _this2.onSelect.bind(_this2);
		_this2.getLoadData = _this2.getLoadData.bind(_this2);
		_this2.onChangeRentBeginDate = _this2.onChangeRentBeginDate.bind(_this2);

		_this2.state = {
			stationVos: [],
			selected: []
		};

		return _this2;
	}

	_createClass(SelectStationForm, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			this.getLoadData();
		}
	}, {
		key: 'onChangeRentBeginDate',
		value: function onChangeRentBeginDate(value) {
			value = (0, _dateformat2.default)(value, 'yyyy-mm-dd') + ' 00:00:00';
			var _state = this.state,
			    stationVos = _state.stationVos,
			    selected = _state.selected;
			var leaseEnddate = this.props.changeValues.leaseEnddate;
			//判断选择的时间是否大于租赁起始时间

			var endDate = leaseEnddate;
			var rentBeginDate = Date.parse((0, _dateformat2.default)(value, 'yyyy-mm-dd') + ' 00:00:00');

			if (endDate < rentBeginDate) {
				_krUi.Notify.show([{
					message: '选择的减租开始时间不能大于租赁期限的终止时间',
					type: 'danger'
				}]);
				return false;
			}

			if (!selected.length) {
				_krUi.Notify.show([{
					message: '未选择减租工位',
					type: 'danger'
				}]);
				return;
			}
			stationVos = [].concat(stationVos);
			//比较减租开始日期不能小于工位起始日期
			var isOK = true;
			stationVos.map(function (item, index) {
				var stationStartDate = Date.parse((0, _dateformat2.default)(item.leaseBeginDate, 'yyyy-mm-dd'));
				if (rentBeginDate < stationStartDate) {
					isOK = false;
				}
			});

			if (!isOK) {
				_krUi.Notify.show([{
					message: '减租开始日期不能小于工位开始的时间',
					type: 'danger'
				}]);
				return;
			}

			stationVos.map(function (item, index) {
				if (selected.indexOf(index) !== -1) {
					item.rentBeginDate = value;
				} else {
					item.rentBeginDate = '';
				}
				return item;
			});

			this.setState({
				stationVos: stationVos
			});
		}
	}, {
		key: 'getLoadData',
		value: function getLoadData() {
			var _this = this;
			var params = this.context.params;

			_Redux.Store.dispatch(_Redux.Actions.callAPI('getStationOrSettingList', {
				mainBillid: params.orderId,
				page: 1,
				pagesize: 100,
				contractId: params.id
			})).then(function (response) {
				response.items = response.items.map(function (item) {
					if (item.show) {
						item.rentBeginDate = item.lastEditDate;
					}
					return item;
				});
				_this.setState({
					stationVos: response.items
				});
			}).catch(function (err) {
				_krUi.Notify.show([{
					message: '后台出错请联系管理员',
					type: 'danger'
				}]);
			});
		}
	}, {
		key: 'onSelect',
		value: function onSelect(selected) {
			this.setState({
				selected: selected
			}, function () {});
		}
	}, {
		key: 'onSubmit',
		value: function onSubmit() {
			var _state2 = this.state,
			    stationVos = _state2.stationVos,
			    selected = _state2.selected;

			var selectedStationVos = [];

			selectedStationVos = stationVos.filter(function (item, index) {
				if (selected.indexOf(index) !== -1) {
					return true;
				}
				return false;
			});

			if (!selectedStationVos.length) {
				_krUi.Notify.show([{
					message: '请选择工位',
					type: 'danger'
				}]);

				return;
			}

			//选中的必须要有租赁结束日期
			var someStartDate = true;

			selectedStationVos.forEach(function (item, index) {
				if (!item.rentBeginDate) {
					someStartDate = false;
				}
			});

			if (!someStartDate) {
				_krUi.Notify.show([{
					message: '选择的工位必须要有租赁开始时间',
					type: 'danger'
				}]);
				return;
			}

			//工位结束时间相同
			var some = true;
			selectedStationVos.sort(function (pre, next) {
				var preDate = (0, _dateformat2.default)(pre.leaseEndDate, 'yyyy-mm-dd');
				var nextDate = (0, _dateformat2.default)(next.leaseEndDate, 'yyyy-mm-dd');
				if (preDate != nextDate) {
					some = false;
				}
				return -1;
			});

			if (!some) {
				_krUi.Notify.show([{
					message: '请选择相同日期',
					type: 'danger'
				}]);
				return false;
			}

			//修改日期
			var resultStationVos = [];
			selectedStationVos.forEach(function (item, index) {
				var obj = {};
				obj.id = item.id;
				obj.stationId = item.stationId;
				obj.stationName = item.stationName;
				obj.unitprice = item.unitprice;
				obj.stationType = item.stationType;
				obj.stationBeginDate = (0, _dateformat2.default)(item.leaseBeginDate, 'yyyy-mm-dd');
				obj.stationEndDate = (0, _dateformat2.default)(item.leaseEndDate, 'yyyy-mm-dd');

				obj.leaseBeginDate = (0, _dateformat2.default)(item.rentBeginDate, 'yyyy-mm-dd');
				obj.leaseEndDate = (0, _dateformat2.default)(item.leaseEndDate, 'yyyy-mm-dd');
				obj.rentBeginDate = (0, _dateformat2.default)(item.rentBeginDate, 'yyyy-mm-dd');

				resultStationVos.push(obj);
			});

			selectedStationVos = resultStationVos;

			//选择的减租开始日期必须要在工位的起始日期和结束日期范围内
			var isOK = 1;
			selectedStationVos.map(function (item, index) {
				var stationBeginDate = Date.parse((0, _dateformat2.default)(item.stationBeginDate, 'yyyy-mm-dd') + ' 00:00:00');
				var stationEndDate = Date.parse((0, _dateformat2.default)(item.stationEndDate, 'yyyy-mm-dd') + ' 00:00:00');
				var rentBeginDate = Date.parse((0, _dateformat2.default)(item.rentBeginDate, 'yyyy-mm-dd') + ' 00:00:00');

				if (stationBeginDate >= rentBeginDate || rentBeginDate >= stationEndDate) {
					isOK = 0;
				}
			});

			if (!isOK) {
				_krUi.Notify.show([{
					message: '减租开始时间必须要在选择工位的租赁开始日期和结束日期之内',
					type: 'danger'
				}]);
				return false;
			}
			console.log('---->>>>', selectedStationVos);

			_Redux.Store.dispatch((0, _reduxForm.change)('reduceCreateForm', 'leaseBegindate', selectedStationVos[0].leaseEndDate));

			var onSubmit = this.props.onSubmit;

			onSubmit && onSubmit(selectedStationVos);
		}
	}, {
		key: 'onCancel',
		value: function onCancel() {
			var onCancel = this.props.onCancel;

			onCancel && onCancel();
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    error = _props.error,
			    handleSubmit = _props.handleSubmit,
			    pristine = _props.pristine,
			    reset = _props.reset,
			    submitting = _props.submitting,
			    changeValues = _props.changeValues;
			var stationVos = this.state.stationVos;

			var overfolw = {
				'overflow': 'hidden',
				maxHeight: 510
			};
			var height = {
				height: stationVos.length * 45,
				maxHeight: 667
			};
			return _react2.default.createElement(
				'div',
				{ style: { height: 667, marginTop: 20 } },
				_react2.default.createElement(
					'form',
					{ onSubmit: handleSubmit(this.onSubmit) },
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, name: 'rentBeginDate', component: 'date', label: '\u51CF\u79DF\u5F00\u59CB\u65F6\u95F4\uFF1A', onChange: this.onChangeRentBeginDate, inline: true }),
					_react2.default.createElement(
						_krUi.Table,
						{ onSelect: this.onSelect, style: overfolw },
						_react2.default.createElement(
							_krUi.TableHeader,
							null,
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u7C7B\u522B'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u7F16\u53F7\uFF0F\u540D\u79F0'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u5355\u4EF7\uFF08\u5143\uFF0F\u6708\uFF09'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u8D77\u59CB\u65E5\u671F'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u7ED3\u675F\u65E5\u671F'
							),
							_react2.default.createElement(
								_krUi.TableHeaderColumn,
								null,
								'\u51CF\u79DF\u5F00\u59CB\u65E5\u671F'
							)
						),
						_react2.default.createElement(
							_krUi.TableBody,
							null,
							stationVos && stationVos.map(function (item, index) {
								return _react2.default.createElement(
									_krUi.TableRow,
									{ key: index },
									_react2.default.createElement(
										_krUi.TableRowColumn,
										null,
										item.stationType == 1 ? '工位' : '会议室'
									),
									_react2.default.createElement(
										_krUi.TableRowColumn,
										null,
										item.stationName
									),
									_react2.default.createElement(
										_krUi.TableRowColumn,
										null,
										item.unitprice
									),
									_react2.default.createElement(
										_krUi.TableRowColumn,
										null,
										_react2.default.createElement(_krUi.KrDate, { value: item.leaseBeginDate })
									),
									_react2.default.createElement(
										_krUi.TableRowColumn,
										null,
										_react2.default.createElement(_krUi.KrDate, { value: item.leaseEndDate })
									),
									_react2.default.createElement(
										_krUi.TableRowColumn,
										null,
										item.rentBeginDate && (0, _dateformat2.default)(item.rentBeginDate, 'yyyy-mm-dd')
									)
								);
							})
						)
					),
					_react2.default.createElement(
						_krUi.Grid,
						null,
						_react2.default.createElement(
							_krUi.Row,
							{ style: { marginTop: 30, paddingBottom: 24 } },
							_react2.default.createElement(_krUi.Col, { md: 4 }),
							_react2.default.createElement(
								_krUi.Col,
								{ md: 2, align: 'center' },
								' ',
								_react2.default.createElement(_krUi.Button, { label: '\u786E\u5B9A', type: 'submit' }),
								' '
							),
							_react2.default.createElement(
								_krUi.Col,
								{ md: 2, align: 'center' },
								' ',
								_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', cancle: true, type: 'button', onTouchTap: this.onCancel }),
								' '
							),
							_react2.default.createElement(_krUi.Col, { md: 4 })
						)
					)
				)
			);
		}
	}]);

	return SelectStationForm;
}(_react.Component);

SelectStationForm.PropTypes = {
	searchParams: _react2.default.PropTypes.object,
	onSubmit: _react2.default.PropTypes.func,
	onCancel: _react2.default.PropTypes.func
};
SelectStationForm.contextTypes = {
	params: _react2.default.PropTypes.object.isRequired
};

var _default = (0, _reduxForm.reduxForm)({
	form: 'selectStationForm',
	enableReinitialize: true,
	keepDirtyOnReinitialize: true
})(SelectStationForm);

exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(SelectStationForm, 'SelectStationForm', '/Users/liuyihao/Code/kr-admin/src/Containers/Operation/CustomerManage/AgreementList/Reduce/Edit/AllStation.js');

	__REACT_HOT_LOADER__.register(_default, 'default', '/Users/liuyihao/Code/kr-admin/src/Containers/Operation/CustomerManage/AgreementList/Reduce/Edit/AllStation.js');
}();

;
//# sourceMappingURL=data:application/json;base64,