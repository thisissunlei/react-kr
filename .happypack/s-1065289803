'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _simpleAssign = require('simple-assign');

var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _redux = require('redux');

var _reactRedux = require('react-redux');

var _reactRouter = require('react-router');

var _Redux = require('kr/Redux');

var _Actions = require('../../../Redux/Actions');

var actionCreators = _interopRequireWildcard(_Actions);

var _materialUi = require('material-ui');

var _moreVert = require('material-ui/svg-icons/navigation/more-vert');

var _moreVert2 = _interopRequireDefault(_moreVert);

require('./index.less');

var _SidebarNav = require('../SidebarNav');

var _SidebarNav2 = _interopRequireDefault(_SidebarNav);

var _InfoList = require('../InfoList');

var _InfoList2 = _interopRequireDefault(_InfoList);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Header = function (_Component) {
	_inherits(Header, _Component);

	function Header(props, context) {
		_classCallCheck(this, Header);

		var _this2 = _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).call(this, props, context));

		_this2.getUnReadInfo = function () {
			var _this = _this2;
			_Redux.Store.dispatch(_Redux.Actions.callAPI('getUnReadInfo', {
				startTime: '', endTime: ''
			})).then(function (response) {
				if (response.msgCount) {
					_this.setState({
						hasUnRead: response.msgCount
					});
				} else {
					_this.setState({
						hasUnRead: 0
					});
				}
			}).catch(function (err) {
				console.log(err);
			});
		};

		_this2.showInfo = function () {
			var _this2$props = _this2.props,
			    actions = _this2$props.actions,
			    sidebar_nav = _this2$props.sidebar_nav,
			    flag = _this2$props.flag,
			    right_bar = _this2$props.right_bar;

			actions.switchRightBar(!!!right_bar.switch_value);
		};

		_this2.onClose = function () {
			_this2.setState({
				right_bar: !_this2.state.right_bar.switch_value
			});
		};

		_this2.changeCount = function () {
			var hasUnRead = --_this2.state.hasUnRead;
			_this2.setState({
				hasUnRead: hasUnRead
			});
		};

		_this2.handleToggle = _this2.handleToggle.bind(_this2);
		_this2.showBottomNav = _this2.showBottomNav.bind(_this2);
		_this2.handleRequestClose = _this2.handleRequestClose.bind(_this2);
		_this2.touchTitle = _this2.touchTitle.bind(_this2);
		_this2.inforShowList = _this2.inforShowList.bind(_this2);
		_this2.state = {
			bottomNav: false,
			toggle: true,
			right_bar: { switch_value: false },
			inforLogoShow: false,
			url: window.location.hash,
			infoTab: '',
			hasUnRead: 0
		};
		_this2.hasInfoListTab = [{ url: 'community', code: '111' }];
		// this.inforShowList();

		return _this2;
	}

	_createClass(Header, [{
		key: 'componentWillMount',
		value: function componentWillMount() {
			this.inforShowList();
		}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(next, state) {
			this.inforShowList();
		}
	}, {
		key: 'inforShowList',
		value: function inforShowList() {
			var url = window.location.hash;
			url = url.split('/')[1];
			var _this = this;
			var currentTab = false;
			this.hasInfoListTab.map(function (item) {
				if (item.url == url) {
					currentTab = true;
				}
			});
			if (currentTab) {
				_this.getUnReadInfo();
				_this.setState({
					inforLogoShow: true,
					infoTab: url,
					right_bar: { switch_value: false }
				});
			} else {
				_this.setState({
					inforLogoShow: false,
					right_bar: { switch_value: false },
					infoTab: 'local'
				});
			}
		}
		//获取未读消息数

	}, {
		key: 'handleToggle',
		value: function handleToggle() {
			var _props = this.props,
			    actions = _props.actions,
			    sidebar_nav = _props.sidebar_nav,
			    flag = _props.flag;


			actions.switchSidebarNav(!!!sidebar_nav.switch_value);
		}
	}, {
		key: 'showBottomNav',
		value: function showBottomNav(event) {
			event.preventDefault();

			var _props2 = this.props,
			    actions = _props2.actions,
			    bottom_nav = _props2.bottom_nav;

			actions.switchBottomNav({
				switch_value: !!!bottom_nav.switch_value,
				anchor_el: event.currentTarget
			});
		}
	}, {
		key: 'handleRequestClose',
		value: function handleRequestClose() {
			var _props3 = this.props,
			    actions = _props3.actions,
			    bottom_nav = _props3.bottom_nav;

			actions.switchBottomNav({
				switch_value: !!!bottom_nav.switch_value,
				anchor_el: event.currentTarget
			});
		}
	}, {
		key: 'touchTitle',
		value: function touchTitle() {
			window.location.href = 'http://krspace.cn';
		}
	}, {
		key: 'renderHeaderNav',
		value: function renderHeaderNav(item, index) {

			if (!item.permission) {
				return null;
			}

			var styles = {
				color: '#666666',
				width: 'auto',
				height: 60
			};

			if (!item) {
				return;
			}

			if (item.active) {
				styles.color = '#394457';
				styles.fontWeight = '600';
			}

			var jumpUrl = '';

			if (item.originUrl) {
				jumpUrl = item.originUrl;
			} else {
				jumpUrl = './#' + item.router;
			}

			return _react2.default.createElement(_materialUi.FlatButton, { label: item.primaryText, key: index, style: styles, href: jumpUrl, labelStyle: { lineHeight: '60px', fontSize: "16px", fontWeight: 0 } });
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var styles = {
				paddingLeft: 0,
				position: 'fixed',
				top: 0,
				left: 0,
				right: 0,
				backgroundColor: '#FFFFFF',
				height: "60px",
				zIndex: 10
			};

			var width = 570;

			var switch_value = this.props.sidebar_nav.switch_value;
			var _state = this.state,
			    inforLogoShow = _state.inforLogoShow,
			    infoTab = _state.infoTab,
			    hasUnRead = _state.hasUnRead;

			var showInfoLogo = inforLogoShow ? 'inline-block' : 'none';
			var HeaderBar = function HeaderBar(props) {

				var iconClassName = '';
				var sidebarNavSwitch = _this3.props.sidebar_nav.switch_value;
				if (sidebarNavSwitch) {
					iconClassName = "hide-heng";
				} else {
					iconClassName = "hide-shu";
				}
				return _react2.default.createElement(_materialUi.AppBar, { style: styles,
					onLeftIconButtonTouchTap: _this3.handleToggle,
					iconStyleLeft: {
						marginTop: 0
					},

					iconElementLeft: _react2.default.createElement(
						'div',
						{ className: 'main-navs' },
						_react2.default.createElement(_materialUi.FlatButton, { onTouchTap: _this3.handleToggle, icon: _react2.default.createElement(_materialUi.FontIcon, { className: iconClassName }), style: { color: '#fff', height: 60, width: 200 } }),
						_react2.default.createElement(_materialUi.FlatButton, { onTouchTap: _this3.touchTitle, icon: _react2.default.createElement(_materialUi.FontIcon, { className: 'new-logo' }), style: { height: "60px" } }),
						_this3.props.navs_items.map(function (item, index) {
							return _this3.renderHeaderNav(item, index);
						})
					),

					iconElementRight: _react2.default.createElement(
						'div',
						{ style: { minWidth: 70, textAlign: 'right' } },
						_react2.default.createElement(
							'div',
							{ style: { display: showInfoLogo, position: 'relative', marginRight: 10, cursor: 'pointer' }, onClick: _this3.showInfo },
							_react2.default.createElement('span', { className: 'icon-info information-logo' }),
							_react2.default.createElement(
								'span',
								{ className: 'ui-un-read-count', style: { visibility: hasUnRead > 0 ? 'visible' : 'hidden' } },
								hasUnRead
							)
						),
						_react2.default.createElement(
							_materialUi.IconMenu,
							{
								iconStyle: { fill: '#394457' },
								iconButtonElement: _react2.default.createElement(
									_materialUi.IconButton,
									null,
									_react2.default.createElement(_moreVert2.default, { color: '#fff' })
								),
								targetOrigin: {
									horizontal: 'right',
									vertical: 'top'
								},
								anchorOrigin: {
									horizontal: 'right',
									vertical: 'top'
								} },
							_this3.props.user.nick && _react2.default.createElement(_materialUi.MenuItem, { primaryText: _this3.props.user.nick, onTouchTap: function onTouchTap(event) {
									window.location.hash = 'permission/personalCenter';
								} }),
							_react2.default.createElement(_materialUi.MenuItem, { primaryText: '\u9000\u51FA',
								onTouchTap: function onTouchTap(event) {
									window.location.href = '/logout/logout';
								}
							})
						)
					)
				});
			};

			return _react2.default.createElement(
				'div',
				{ className: 'no-print' },
				this.props.header_nav.switch_value && _react2.default.createElement(HeaderBar, null),
				_react2.default.createElement(
					_materialUi.Drawer,
					{ open: this.props.sidebar_nav.switch_value, width: 180, containerStyle: { marginTop: 60, boxShadow: '0 1px 1px rgba(0, 0, 0, 0.16), 0 1px 1px rgba(0, 0, 0, 0.23)', zIndex: 10, background: '#394457' } },
					_react2.default.createElement(_SidebarNav2.default, { items: this.props.navs_current_items, current_router: this.props.current_router, current_parent: this.props.current_parent, current_child: this.props.current_child })
				),
				_react2.default.createElement(
					_materialUi.Drawer,
					{ open: this.props.right_bar.switch_value, width: width, openSecondary: true, containerStyle: { marginTop: 60, boxShadow: '0 1px 1px rgba(0, 0, 0, 0.16), 0 1px 1px rgba(0, 0, 0, 0.23)', zIndex: 10 } },
					_react2.default.createElement(_InfoList2.default, { onClose: this.onClose, infoTab: infoTab, changeCount: this.changeCount })
				)
			);
		}
	}]);

	return Header;
}(_react.Component);

Header.contextTypes = {
	router: _react.PropTypes.object.isRequired
};


function mapStateToProps(state) {

	return {
		header_nav: state.header_nav,
		sidebar_nav: state.sidebar_nav,
		right_bar: state.right_bar,
		navs_items: state.navs.items,
		navs_current_items: state.navs.current_items,
		bottom_nav: state.bottom_nav,
		current_router: state.navs.current_router,
		current_parent: state.navs.current_parent,
		current_child: state.navs.current_child,
		user: state.user
	};
}

function mapDispatchToProps(dispatch) {
	return {
		actions: (0, _redux.bindActionCreators)((0, _simpleAssign2.default)({}, actionCreators), dispatch)
	};
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Header);