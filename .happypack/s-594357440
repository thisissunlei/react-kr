'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Redux = require('kr/Redux');

var _reduxForm = require('redux-form');

var _krUi = require('kr-ui');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SearchForm = function (_Component) {
	_inherits(SearchForm, _Component);

	function SearchForm(props) {
		_classCallCheck(this, SearchForm);

		var _this = _possibleConstructorReturn(this, (SearchForm.__proto__ || Object.getPrototypeOf(SearchForm)).call(this, props));

		_this.onSubmit = _this.onSubmit.bind(_this);
		_this.onCancel = _this.onCancel.bind(_this);
		return _this;
	}

	_createClass(SearchForm, [{
		key: 'onSubmit',
		value: function onSubmit(form) {

			form.pageSize = 20;
			form.page = 1;
			form.searchParam = form.content;
			var onSubmit = this.props.onSubmit;

			onSubmit && onSubmit(form);
		}
	}, {
		key: 'onCancel',
		value: function onCancel() {
			var onCancel = this.props.onCancel;

			onCancel && onCancel();
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    error = _props.error,
			    handleSubmit = _props.handleSubmit,
			    pristine = _props.pristine,
			    reset = _props.reset;


			return _react2.default.createElement(_krUi.SearchForms, { onSubmit: this.onSubmit });
		}
	}]);

	return SearchForm;
}(_react.Component);

SearchForm.PropTypes = {
	onSubmit: _react2.default.PropTypes.func,
	onCancel: _react2.default.PropTypes.func
};

var _default = (0, _reduxForm.reduxForm)({
	form: 'searchForm'
})(SearchForm);

exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(SearchForm, 'SearchForm', '/Users/liuyihao/Code/kr-admin/src/Containers/Finance/Manage/CodeSetting/Attribute/SearchForm.js');

	__REACT_HOT_LOADER__.register(_default, 'default', '/Users/liuyihao/Code/kr-admin/src/Containers/Finance/Manage/CodeSetting/Attribute/SearchForm.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Db250YWluZXJzL0ZpbmFuY2UvTWFuYWdlL0NvZGVTZXR0aW5nL0F0dHJpYnV0ZS9TZWFyY2hGb3JtLmpzIl0sIm5hbWVzIjpbIlNlYXJjaEZvcm0iLCJwcm9wcyIsIm9uU3VibWl0IiwiYmluZCIsIm9uQ2FuY2VsIiwiZm9ybSIsInBhZ2VTaXplIiwicGFnZSIsInNlYXJjaFBhcmFtIiwiY29udGVudCIsImVycm9yIiwiaGFuZGxlU3VibWl0IiwicHJpc3RpbmUiLCJyZXNldCIsIlByb3BUeXBlcyIsImZ1bmMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7QUFJQTs7QUFJQTs7QUFTQTs7Ozs7Ozs7OztJQVlNQSxVOzs7QUFPTCxxQkFBWUMsS0FBWixFQUFtQjtBQUFBOztBQUFBLHNIQUNaQSxLQURZOztBQUdsQixRQUFLQyxRQUFMLEdBQWdCLE1BQUtBLFFBQUwsQ0FBY0MsSUFBZCxPQUFoQjtBQUNBLFFBQUtDLFFBQUwsR0FBZ0IsTUFBS0EsUUFBTCxDQUFjRCxJQUFkLE9BQWhCO0FBSmtCO0FBS2xCOzs7OzJCQUVRRSxJLEVBQU07O0FBRWRBLFFBQUtDLFFBQUwsR0FBZ0IsRUFBaEI7QUFDQUQsUUFBS0UsSUFBTCxHQUFZLENBQVo7QUFDTUYsUUFBS0csV0FBTCxHQUFtQkgsS0FBS0ksT0FBeEI7QUFKUSxPQU1iUCxRQU5hLEdBT1YsS0FBS0QsS0FQSyxDQU1iQyxRQU5hOztBQVFkQSxlQUFZQSxTQUFTRyxJQUFULENBQVo7QUFDQTs7OzZCQUVVO0FBQUEsT0FFVEQsUUFGUyxHQUdOLEtBQUtILEtBSEMsQ0FFVEcsUUFGUzs7QUFJVkEsZUFBWUEsVUFBWjtBQUNBOzs7MkJBRVE7QUFBQSxnQkFPSixLQUFLSCxLQVBEO0FBQUEsT0FHUFMsS0FITyxVQUdQQSxLQUhPO0FBQUEsT0FJUEMsWUFKTyxVQUlQQSxZQUpPO0FBQUEsT0FLUEMsUUFMTyxVQUtQQSxRQUxPO0FBQUEsT0FNUEMsS0FOTyxVQU1QQSxLQU5POzs7QUFTUixVQUVDLG1EQUFhLFVBQVUsS0FBS1gsUUFBNUIsR0FGRDtBQUlBOzs7Ozs7QUE3Q0lGLFUsQ0FFRWMsUyxHQUFZO0FBQ2xCWixXQUFVLGdCQUFNWSxTQUFOLENBQWdCQyxJQURSO0FBRWxCWCxXQUFVLGdCQUFNVSxTQUFOLENBQWdCQztBQUZSLEM7O2VBK0NMLDBCQUFVO0FBQ3hCVixPQUFNO0FBRGtCLENBQVYsRUFFWkwsVUFGWSxDOzs7Ozs7Ozs7OytCQWpEVEEsVSIsImZpbGUiOiJTZWFyY2hGb3JtLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9saXV5aWhhby9Db2RlL2tyLWFkbWluIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7XG5cdENvbXBvbmVudCxcblx0UHJvcFR5cGVzXG59IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7XG5cdGNvbm5lY3Rcbn0gZnJvbSAna3IvUmVkdXgnO1xuXG5pbXBvcnQge1xuXHRyZWR1eEZvcm0sXG5cdGZvcm1WYWx1ZVNlbGVjdG9yXG59IGZyb20gJ3JlZHV4LWZvcm0nO1xuaW1wb3J0IHtcblx0QWN0aW9ucyxcblx0U3RvcmVcbn0gZnJvbSAna3IvUmVkdXgnO1xuXG5pbXBvcnQge1xuXHRLckZpZWxkLFxuXHRHcmlkLFxuXHRSb3csXG5cdENvbCxcblx0QnV0dG9uLFxuXHRMaXN0R3JvdXAsXG5cdExpc3RHcm91cEl0ZW0sXG5cdFNlYXJjaEZvcm1zXG59IGZyb20gJ2tyLXVpJztcblxuXG5jbGFzcyBTZWFyY2hGb3JtIGV4dGVuZHMgQ29tcG9uZW50IHtcblxuXHRzdGF0aWMgUHJvcFR5cGVzID0ge1xuXHRcdG9uU3VibWl0OiBSZWFjdC5Qcm9wVHlwZXMuZnVuYyxcblx0XHRvbkNhbmNlbDogUmVhY3QuUHJvcFR5cGVzLmZ1bmMsXG5cdH1cblxuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xuXHRcdHN1cGVyKHByb3BzKTtcblxuXHRcdHRoaXMub25TdWJtaXQgPSB0aGlzLm9uU3VibWl0LmJpbmQodGhpcyk7XG5cdFx0dGhpcy5vbkNhbmNlbCA9IHRoaXMub25DYW5jZWwuYmluZCh0aGlzKTtcblx0fVxuXG5cdG9uU3VibWl0KGZvcm0pIHtcblxuXHRcdGZvcm0ucGFnZVNpemUgPSAyMDtcblx0XHRmb3JtLnBhZ2UgPSAxO1xuICAgICAgICBmb3JtLnNlYXJjaFBhcmFtID0gZm9ybS5jb250ZW50O1xuXHRcdGNvbnN0IHtcblx0XHRcdG9uU3VibWl0XG5cdFx0fSA9IHRoaXMucHJvcHM7XG5cdFx0b25TdWJtaXQgJiYgb25TdWJtaXQoZm9ybSk7XG5cdH1cblxuXHRvbkNhbmNlbCgpIHtcblx0XHRjb25zdCB7XG5cdFx0XHRvbkNhbmNlbFxuXHRcdH0gPSB0aGlzLnByb3BzO1xuXHRcdG9uQ2FuY2VsICYmIG9uQ2FuY2VsKCk7XG5cdH1cblxuXHRyZW5kZXIoKSB7XG5cblx0XHRjb25zdCB7XG5cdFx0XHRlcnJvcixcblx0XHRcdGhhbmRsZVN1Ym1pdCxcblx0XHRcdHByaXN0aW5lLFxuXHRcdFx0cmVzZXRcblx0XHR9ID0gdGhpcy5wcm9wcztcblxuXHRcdHJldHVybiAoXG5cblx0XHRcdDxTZWFyY2hGb3JtcyBvblN1Ym1pdD17dGhpcy5vblN1Ym1pdH0vPlxuXHRcdCk7XG5cdH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCByZWR1eEZvcm0oe1xuXHRmb3JtOiAnc2VhcmNoRm9ybSdcbn0pKFNlYXJjaEZvcm0pO1xuIl19