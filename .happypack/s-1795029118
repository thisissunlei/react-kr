'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _redux = require('redux');

var _Redux = require('kr/Redux');

var _Actions = require('kr-ui/../Redux/Actions');

var actionCreators = _interopRequireWildcard(_Actions);

var _reduxForm = require('redux-form');

var _krUi = require('kr-ui');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ShiftBtnForm = function (_Component) {
	_inherits(ShiftBtnForm, _Component);

	function ShiftBtnForm(props, context) {
		_classCallCheck(this, ShiftBtnForm);

		var _this = _possibleConstructorReturn(this, (ShiftBtnForm.__proto__ || Object.getPrototypeOf(ShiftBtnForm)).call(this, props, context));

		_this.moneyShiftCheck = function (value) {
			if (value && isNaN(value)) {
				_krUi.Message.error('金额只能为数字');
				return;
			}
			if (value && value <= 0) {
				_krUi.Message.error('金额只能为正数');
				return;
			}
		};

		_this.renderShiftData = function () {
			var shiftData = _this.props.shiftData;

			return shiftData.map(function (item, index) {

				if (index % 2 == 0) {
					var _React$createElement;

					return _react2.default.createElement(_krUi.KrField, (_React$createElement = { key: index, style: { marginBottom: 5 }, grid: 1 / 2, right: 43 }, _defineProperty(_React$createElement, 'style', { marginLeft: '-14px' }), _defineProperty(_React$createElement, 'label', item.propname), _defineProperty(_React$createElement, 'component', 'input'), _defineProperty(_React$createElement, 'name', 'fix' + item.id), _defineProperty(_React$createElement, 'type', 'text'), _defineProperty(_React$createElement, 'onBlur', _this.moneyShiftCheck), _React$createElement));
				} else {
					return _react2.default.createElement(_krUi.KrField, { key: index, style: { marginBottom: 5 }, grid: 1 / 2, right: 43, label: item.propname, component: 'input', name: 'fix' + item.id, type: 'text', onBlur: _this.moneyShiftCheck });
				}
			});
		};

		_this.onCancel = _this.onCancel.bind(_this);
		_this.onSubmit = _this.onSubmit.bind(_this);
		_this.state = {};
		return _this;
	}

	_createClass(ShiftBtnForm, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var initialValues = {
				flowId: this.props.initialValuesId.id,
				preCode: '1'
			};
			_Redux.Store.dispatch((0, _reduxForm.initialize)('shiftBtnForm', initialValues));
		}
	}, {
		key: 'onSubmit',
		value: function onSubmit(values) {
			var onSubmit = this.props.onSubmit;

			onSubmit && onSubmit(values);
		}
	}, {
		key: 'onCancel',
		value: function onCancel() {
			var onCancel = this.props.onCancel;

			onCancel && onCancel();
		}
	}, {
		key: 'render',
		value: function render() {

			var heightStyle = {
				width: '546',
				height: '72'
			};

			var _props = this.props,
			    error = _props.error,
			    handleSubmit = _props.handleSubmit,
			    pristine = _props.pristine,
			    reset = _props.reset,
			    initialValuesId = _props.initialValuesId,
			    shiftData = _props.shiftData;


			return _react2.default.createElement(
				'div',
				{ style: { marginTop: '35px' } },
				_react2.default.createElement(
					'form',
					{ onSubmit: handleSubmit(this.onSubmit), style: { marginLeft: '30px' } },
					_react2.default.createElement(_krUi.KrField, { name: 'flowId', type: 'hidden' }),
					_react2.default.createElement(_krUi.KrField, { grid: 1 / 2, label: '\u53EF\u64CD\u4F5C\u91D1\u989D', component: 'labelText', value: initialValuesId.fiMoney, inline: false, defaultValue: '0' }),
					_react2.default.createElement(
						_krUi.KrField,
						{ name: 'preCode', grid: 1 / 2, left: 30, component: 'group', label: '\u91D1\u989D\u6B63\u8D1F', style: { marginLeft: '-45px' }, requireLabel: true },
						_react2.default.createElement(_krUi.KrField, { name: 'preCode', grid: 1 / 2, right: 30, label: '\u6B63', component: 'radio', type: 'radio', value: '0', style: { marginTop: '4px', width: 'auto', display: 'inline-block' } }),
						_react2.default.createElement(_krUi.KrField, { name: 'preCode', grid: 1 / 2, left: 30, label: '\u8D1F', component: 'radio', type: 'radio', value: '1' })
					),
					_react2.default.createElement(_krUi.KrField, { type: 'date', grid: 1 / 2, label: '\u8F6C\u79FB\u65E5\u671F', right: 45, name: 'operatedate', requireLabel: true }),
					this.renderShiftData(),
					_react2.default.createElement(_krUi.KrField, { label: '\u4E0A\u4F20\u9644\u4EF6', grid: 1 / 2, name: 'fileids', style: { marginLeft: -15 }, component: 'file', defaultValue: [] }),
					_react2.default.createElement(
						'div',
						{ style: { marginTop: -15 } },
						_react2.default.createElement(_krUi.KrField, { label: '\u5907\u6CE8', grid: 1, heightStyle: heightStyle, name: 'finaflowdesc', component: 'textarea', type: 'text', placeholder: '\u8BF7\u8F93\u5165\u5907\u6CE8\uFF0C\u8F93\u5165\u5B57\u6570\u4E0D\u80FD\u8D85\u8FC7100\u5B57', maxSize: 100, lengthClass: 'ui-length-text' })
					),
					_react2.default.createElement(
						_krUi.Grid,
						{ style: { marginTop: 0, marginBottom: 5, marginLeft: -30 } },
						_react2.default.createElement(
							_krUi.Row,
							null,
							_react2.default.createElement(
								_krUi.Col,
								{ md: 12, align: 'center' },
								_react2.default.createElement(
									_krUi.ButtonGroup,
									null,
									_react2.default.createElement(
										'div',
										{ className: 'ui-btn-center' },
										_react2.default.createElement(_krUi.Button, { label: '\u786E\u5B9A', type: 'submit', joinEditForm: true })
									),
									_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', type: 'button', cancle: true, onTouchTap: this.onCancel })
								)
							)
						)
					)
				)
			);
		}
	}]);

	return ShiftBtnForm;
}(_react.Component);

ShiftBtnForm.PropTypes = {
	shiftData: _react2.default.PropTypes.arr,
	initialValuesId: _react2.default.PropTypes.object
};


var validate = function validate(values) {

	var errors = {};
	if (!values.operatedate) {
		errors.operatedate = '请填写转移日期';
	}
	return errors;
};

exports.default = (0, _reduxForm.reduxForm)({ form: 'shiftBtnForm', validate: validate, enableReinitialize: true, keepDirtyOnReinitialize: true })(ShiftBtnForm);