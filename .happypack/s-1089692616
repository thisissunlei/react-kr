'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Select = require('../../../Select/Select');

var _Select2 = _interopRequireDefault(_Select);

var _WrapComponent = require('../WrapComponent');

var _WrapComponent2 = _interopRequireDefault(_WrapComponent);

require('./index.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//import 'react-select/dist/react-select.css';

var SelectComponent = function (_React$Component) {
	_inherits(SelectComponent, _React$Component);

	function SelectComponent(props) {
		_classCallCheck(this, SelectComponent);

		var _this = _possibleConstructorReturn(this, (SelectComponent.__proto__ || Object.getPrototypeOf(SelectComponent)).call(this, props));

		_this.onChange = _this.onChange.bind(_this);
		_this.handleChange = _this.handleChange.bind(_this);

		_this.setInitValue = _this.setInitValue.bind(_this);

		_this.isInit = false;

		_this.state = {
			value: []
		};
		return _this;
	}

	_createClass(SelectComponent, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			this.setInitValue(this.props.input.value);
		}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			if (!this.isInit && nextProps.input.value) {
				this.setInitValue(nextProps.input.value);
			}
		}
	}, {
		key: 'setInitValue',
		value: function setInitValue(value) {

			if (!value) {
				return;
			}

			this.setState({
				value: value
			});
			this.isInit = true;
		}
	}, {
		key: 'handleChange',
		value: function handleChange(value) {
			var input = this.props.input;

			this.setState({
				value: value
			});
			input.onChange(value);
		}
	}, {
		key: 'onChange',
		value: function onChange(item) {
			var _props = this.props,
			    input = _props.input,
			    onChange = _props.onChange;

			var value = item && item.value || '';
			input.onChange(value);
			onChange && onChange(item);
		}
	}, {
		key: 'render',
		value: function render() {
			var _props2 = this.props,
			    input = _props2.input,
			    label = _props2.label,
			    inline = _props2.inline,
			    search = _props2.search,
			    type = _props2.type,
			    _props2$meta = _props2.meta,
			    touched = _props2$meta.touched,
			    error = _props2$meta.error,
			    children = _props2.children,
			    disabled = _props2.disabled,
			    style = _props2.style,
			    requireLabel = _props2.requireLabel,
			    options = _props2.options,
			    multi = _props2.multi,
			    other = _objectWithoutProperties(_props2, ['input', 'label', 'inline', 'search', 'type', 'meta', 'children', 'disabled', 'style', 'requireLabel', 'options', 'multi']);

			if (multi) {
				return _react2.default.createElement(
					_WrapComponent2.default,
					{ label: label, wrapStyle: style, requireLabel: requireLabel, inline: inline, search: search },
					_react2.default.createElement(
						'div',
						{ className: 'ui-select' },
						_react2.default.createElement(_Select2.default, {
							multi: true,
							simpleValue: true,
							name: input.name,
							value: this.state.value,
							clearable: true,
							options: options,
							onChange: this.handleChange,
							placeholder: '\u8BF7\u9009\u62E9...',
							noResultsText: ''
						})
					),
					touched && error && _react2.default.createElement(
						'div',
						{ className: 'error-wrap' },
						' ',
						_react2.default.createElement(
							'span',
							null,
							error
						),
						' '
					)
				);
			}
			if (options) {

				return _react2.default.createElement(
					_WrapComponent2.default,
					{ label: label, wrapStyle: style, requireLabel: requireLabel, inline: inline, search: search },
					_react2.default.createElement(_Select2.default, {
						name: input.name,
						searchable: false,
						value: input.value,
						clearable: true,
						options: options,
						onChange: this.onChange,
						placeholder: '\u8BF7\u9009\u62E9',
						onValueClick: function onValueClick() {}
					}),
					touched && error && _react2.default.createElement(
						'div',
						{ className: 'error-wrap' },
						' ',
						_react2.default.createElement(
							'span',
							null,
							error
						),
						' '
					)
				);
			}

			return _react2.default.createElement(
				_WrapComponent2.default,
				{ label: label, wrapStyle: style, requireLabel: requireLabel, inline: inline, search: search },
				_react2.default.createElement(
					'select',
					_extends({}, input, { disabled: disabled }),
					children
				),
				touched && error && _react2.default.createElement(
					'p',
					null,
					_react2.default.createElement(
						'div',
						{ className: 'error-wrap' },
						' ',
						_react2.default.createElement(
							'span',
							null,
							error
						),
						' '
					)
				)
			);
		}
	}]);

	return SelectComponent;
}(_react2.default.Component);

SelectComponent.defaultProps = {
	inline: false
};
SelectComponent.PropTypes = {
	onChange: _react2.default.PropTypes.func,
	inline: _react2.default.PropTypes.bool,
	search: _react2.default.PropTypes.bool
};
exports.default = SelectComponent;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(SelectComponent, 'SelectComponent', '/Users/tmac_zc/Code/kr-admin/src/Components/KrForm/FieldControl/SelectComponent/index.js');
}();

;
//# sourceMappingURL=data:application/json;base64,