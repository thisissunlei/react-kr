'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reduxForm = require('redux-form');

var _Redux = require('kr/Redux');

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

var _krUi = require('kr-ui');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CancleLeader = function (_Component) {
	_inherits(CancleLeader, _Component);

	function CancleLeader(props, context) {
		_classCallCheck(this, CancleLeader);

		var _this2 = _possibleConstructorReturn(this, (CancleLeader.__proto__ || Object.getPrototypeOf(CancleLeader)).call(this, props, context));

		_this2.test = function () {
			var _this = _this2;
			var form = new FormData();
			form.append('file', _this2.state.file);
			form.append('companyId', _this2.companyId);
			form.append('communityId', _this2.communityId);
			if (!_this2.state.file.name) {
				_krUi.Message.error('请选择上传文件');
				return false;
			}

			var xhr = new XMLHttpRequest();
			xhr.onreadystatechange = function () {
				if (xhr.readyState === 4) {
					if (xhr.status === 200) {
						console.log('ss', xhr.response);
						if (xhr.response.code == '-1') {
							_krUi.Message.error(xhr.response.message);
						} else {
							_krUi.Message.success("上传文件成功");
							_this.onCancel();
							_this.onSubmit();
						}
					} else {
						_this.onCancel();
						_krUi.Message.error('上传文件失败');
					}
				}
			};

			xhr.onerror = function (e) {
				console.error(xhr.statusText);
			};
			xhr.open('POST', 'http://op.krspace.cn/api/krspace-finance-web/member/member-excel', true);
			xhr.responseType = 'json';
			xhr.send(form);
		};

		_this2.onCancel = function () {
			var onCancel = _this2.props.onCancel;

			onCancel && onCancel();
		};

		_this2.onSubmit = function () {
			var onSubmit = _this2.props.onSubmit;

			onSubmit && onSubmit();
		};

		_this2.onLoadDemo = function () {
			var onLoadDemo = _this2.props.onLoadDemo;

			onLoadDemo && onLoadDemo();
		};

		_this2.importFile = function () {
			// console.log('importFile');
		};

		_this2.onTokenSuccess = function (form) {
			_this2.setState({
				form: form
			});
		};

		_this2.onChange = function (event) {

			var _this = _this2;
			var fileName = event.target.files[0].name;
			var arr = event.target.files[0].name.split('.');
			var type = arr[arr.length - 1];
			if (type != 'xls' && type != 'xlsx') {
				_krUi.Message.error('上传文件类型不对，请选择.xls或.xlsx');
				return;
			}
			_this.setState({
				fileName: fileName,
				file: event.target.files[0]
			});
		};

		_this2.companyId = _this2.context.router.params.companyId;
		_this2.communityId = _this2.context.router.params.communityId;
		_this2.state = {
			isInit: true,
			form: {},
			files: [],
			isUploading: false,
			progress: 0,
			file: {},
			fileName: ''
		};
		return _this2;
	}

	_createClass(CancleLeader, [{
		key: 'render',
		value: function render() {
			var fileName = this.state.fileName;


			return _react2.default.createElement(
				'form',
				{ name: 'import', style: { textAlign: 'center' } },
				_react2.default.createElement(
					'div',
					null,
					_react2.default.createElement(
						'span',
						{ className: 'import-logo icon-excel', onClick: this.importFile },
						_react2.default.createElement('input', { type: 'file', name: 'file', className: 'chooce-file', onChange: this.onChange })
					),
					_react2.default.createElement('input', { type: 'hidden', name: 'companyId' }),
					_react2.default.createElement(
						'span',
						{ className: 'import-font' },
						_react2.default.createElement(
							'span',
							{ className: 'chooce' },
							'\u8BF7\u9009\u62E9\u4E0A\u4F20\u6587\u4EF6'
						),
						_react2.default.createElement('input', { type: 'file', name: 'file', className: 'chooce-file', onChange: this.onChange })
					),
					fileName ? _react2.default.createElement(
						'span',
						{ className: 'file-name' },
						fileName
					) : '',
					_react2.default.createElement(
						'span',
						{ className: 'load-demo icon-template', onClick: this.onLoadDemo },
						'\u4E0B\u8F7Dexcel\u6A21\u677F'
					)
				),
				_react2.default.createElement(
					_krUi.Grid,
					{ style: { marginTop: 10, marginBottom: 6 } },
					_react2.default.createElement(
						_krUi.Row,
						null,
						_react2.default.createElement(
							_krUi.ListGroup,
							null,
							_react2.default.createElement(
								_krUi.ListGroupItem,
								{ style: { width: '180px', textAlign: 'right', padding: 0, paddingRight: 15 } },
								_react2.default.createElement(_krUi.Button, { label: '\u786E\u5B9A\u5BFC\u5165', type: 'button', width: 90, height: 34, onClick: this.test })
							),
							_react2.default.createElement(
								_krUi.ListGroupItem,
								{ style: { width: '150px', textAlign: 'left', padding: 0, paddingLeft: 15 } },
								_react2.default.createElement(_krUi.Button, { label: '\u53D6\u6D88', type: 'button', cancle: true, onTouchTap: this.onCancel, width: 90, height: 34 }),
								' '
							)
						)
					)
				)
			);
		}
	}]);

	return CancleLeader;
}(_react.Component);

CancleLeader.propTypes = {
	initialValues: _react2.default.PropTypes.object,
	communityOptions: _react2.default.PropTypes.array,
	orderTypeOptions: _react2.default.PropTypes.array
};
CancleLeader.contextTypes = {
	router: _react2.default.PropTypes.object.isRequired
};
exports.default = CancleLeader;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(CancleLeader, 'CancleLeader', '/Users/tmac_zc/Code/kr-admin/src/Containers/Operation/CommunityManage/CompanyMembers/ImportData.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Db250YWluZXJzL09wZXJhdGlvbi9Db21tdW5pdHlNYW5hZ2UvQ29tcGFueU1lbWJlcnMvSW1wb3J0RGF0YS5qcyJdLCJuYW1lcyI6WyJDYW5jbGVMZWFkZXIiLCJwcm9wcyIsImNvbnRleHQiLCJ0ZXN0IiwiX3RoaXMiLCJmb3JtIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJzdGF0ZSIsImZpbGUiLCJjb21wYW55SWQiLCJjb21tdW5pdHlJZCIsIm5hbWUiLCJlcnJvciIsInhociIsIlhNTEh0dHBSZXF1ZXN0Iiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZSIsImNvZGUiLCJtZXNzYWdlIiwic3VjY2VzcyIsIm9uQ2FuY2VsIiwib25TdWJtaXQiLCJvbmVycm9yIiwiZSIsInN0YXR1c1RleHQiLCJvcGVuIiwicmVzcG9uc2VUeXBlIiwic2VuZCIsIm9uTG9hZERlbW8iLCJpbXBvcnRGaWxlIiwib25Ub2tlblN1Y2Nlc3MiLCJzZXRTdGF0ZSIsIm9uQ2hhbmdlIiwiZXZlbnQiLCJmaWxlTmFtZSIsInRhcmdldCIsImZpbGVzIiwiYXJyIiwic3BsaXQiLCJ0eXBlIiwibGVuZ3RoIiwicm91dGVyIiwicGFyYW1zIiwiaXNJbml0IiwiaXNVcGxvYWRpbmciLCJwcm9ncmVzcyIsInRleHRBbGlnbiIsIm1hcmdpblRvcCIsIm1hcmdpbkJvdHRvbSIsIndpZHRoIiwicGFkZGluZyIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdMZWZ0IiwicHJvcFR5cGVzIiwiaW5pdGlhbFZhbHVlcyIsIlByb3BUeXBlcyIsIm9iamVjdCIsImNvbW11bml0eU9wdGlvbnMiLCJhcnJheSIsIm9yZGVyVHlwZU9wdGlvbnMiLCJjb250ZXh0VHlwZXMiLCJpc1JlcXVpcmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7OztBQUtBOztBQVVBOztBQUtBOzs7O0FBRUE7Ozs7Ozs7Ozs7SUFpQnFCQSxZOzs7QUFVcEIsdUJBQVlDLEtBQVosRUFBbUJDLE9BQW5CLEVBQTRCO0FBQUE7O0FBQUEsMkhBQ3JCRCxLQURxQixFQUNkQyxPQURjOztBQUFBLFNBYzVCQyxJQWQ0QixHQWN2QixZQUFJO0FBQ1IsT0FBSUMsY0FBSjtBQUNHLE9BQUlDLE9BQU8sSUFBSUMsUUFBSixFQUFYO0FBQ0hELFFBQUtFLE1BQUwsQ0FBWSxNQUFaLEVBQW9CLE9BQUtDLEtBQUwsQ0FBV0MsSUFBL0I7QUFDQUosUUFBS0UsTUFBTCxDQUFZLFdBQVosRUFBeUIsT0FBS0csU0FBOUI7QUFDQUwsUUFBS0UsTUFBTCxDQUFZLGFBQVosRUFBMkIsT0FBS0ksV0FBaEM7QUFDQSxPQUFHLENBQUMsT0FBS0gsS0FBTCxDQUFXQyxJQUFYLENBQWdCRyxJQUFwQixFQUF5QjtBQUN4QixrQkFBUUMsS0FBUixDQUFjLFNBQWQ7QUFDQSxXQUFPLEtBQVA7QUFDQTs7QUFFRCxPQUFJQyxNQUFNLElBQUlDLGNBQUosRUFBVjtBQUNBRCxPQUFJRSxrQkFBSixHQUF5QixZQUFXO0FBQ25DLFFBQUlGLElBQUlHLFVBQUosS0FBbUIsQ0FBdkIsRUFBMEI7QUFDekIsU0FBSUgsSUFBSUksTUFBSixLQUFlLEdBQW5CLEVBQXdCO0FBQ3ZCQyxjQUFRQyxHQUFSLENBQVksSUFBWixFQUFpQk4sSUFBSU8sUUFBckI7QUFDQSxVQUFHUCxJQUFJTyxRQUFKLENBQWFDLElBQWIsSUFBbUIsSUFBdEIsRUFBMkI7QUFDMUIscUJBQVFULEtBQVIsQ0FBY0MsSUFBSU8sUUFBSixDQUFhRSxPQUEzQjtBQUNBLE9BRkQsTUFFSztBQUNKLHFCQUFRQyxPQUFSLENBQWdCLFFBQWhCO0FBQ1NwQixhQUFNcUIsUUFBTjtBQUNBckIsYUFBTXNCLFFBQU47QUFDVDtBQUdELE1BWEQsTUFXTztBQUNFdEIsWUFBTXFCLFFBQU47QUFDUixvQkFBUVosS0FBUixDQUFjLFFBQWQ7QUFDQTtBQUNEO0FBQ0QsSUFsQkQ7O0FBb0JBQyxPQUFJYSxPQUFKLEdBQWMsVUFBU0MsQ0FBVCxFQUFZO0FBQ3pCVCxZQUFRTixLQUFSLENBQWNDLElBQUllLFVBQWxCO0FBQ0EsSUFGRDtBQUdBZixPQUFJZ0IsSUFBSixDQUFTLE1BQVQsRUFBaUIsa0VBQWpCLEVBQXFGLElBQXJGO0FBQ0FoQixPQUFJaUIsWUFBSixHQUFtQixNQUFuQjtBQUNBakIsT0FBSWtCLElBQUosQ0FBUzNCLElBQVQ7QUFFQyxHQXJEMEI7O0FBQUEsU0F1RDVCb0IsUUF2RDRCLEdBdURuQixZQUFJO0FBQUEsT0FDTEEsUUFESyxHQUNPLE9BQUt4QixLQURaLENBQ0x3QixRQURLOztBQUVaQSxlQUFZQSxVQUFaO0FBQ0EsR0ExRDJCOztBQUFBLFNBMkQ1QkMsUUEzRDRCLEdBMkRuQixZQUFJO0FBQUEsT0FDTEEsUUFESyxHQUNPLE9BQUt6QixLQURaLENBQ0x5QixRQURLOztBQUVaQSxlQUFZQSxVQUFaO0FBQ0EsR0E5RDJCOztBQUFBLFNBK0Q1Qk8sVUEvRDRCLEdBK0RqQixZQUFJO0FBQUEsT0FDUEEsVUFETyxHQUNPLE9BQUtoQyxLQURaLENBQ1BnQyxVQURPOztBQUVkQSxpQkFBY0EsWUFBZDtBQUNBLEdBbEUyQjs7QUFBQSxTQW1FNUJDLFVBbkU0QixHQW1FakIsWUFBSTtBQUNkO0FBQ0EsR0FyRTJCOztBQUFBLFNBc0U1QkMsY0F0RTRCLEdBc0ViLFVBQUM5QixJQUFELEVBQVM7QUFDdkIsVUFBSytCLFFBQUwsQ0FBYztBQUNiL0I7QUFEYSxJQUFkO0FBR0EsR0ExRTJCOztBQUFBLFNBNEU1QmdDLFFBNUU0QixHQTRFbkIsVUFBQ0MsS0FBRCxFQUFVOztBQUVsQixPQUFJbEMsY0FBSjtBQUNBLE9BQUltQyxXQUFXRCxNQUFNRSxNQUFOLENBQWFDLEtBQWIsQ0FBbUIsQ0FBbkIsRUFBc0I3QixJQUFyQztBQUNBLE9BQUk4QixNQUFNSixNQUFNRSxNQUFOLENBQWFDLEtBQWIsQ0FBbUIsQ0FBbkIsRUFBc0I3QixJQUF0QixDQUEyQitCLEtBQTNCLENBQWlDLEdBQWpDLENBQVY7QUFDQSxPQUFJQyxPQUFPRixJQUFJQSxJQUFJRyxNQUFKLEdBQVcsQ0FBZixDQUFYO0FBQ0EsT0FBR0QsUUFBUSxLQUFSLElBQWlCQSxRQUFRLE1BQTVCLEVBQW1DO0FBQ2xDLGtCQUFRL0IsS0FBUixDQUFjLHdCQUFkO0FBQ0E7QUFDQTtBQUNEVCxTQUFNZ0MsUUFBTixDQUFlO0FBQ2RHLHNCQURjO0FBRWQ5QixVQUFLNkIsTUFBTUUsTUFBTixDQUFhQyxLQUFiLENBQW1CLENBQW5CO0FBRlMsSUFBZjtBQU1BLEdBNUYyQjs7QUFFM0IsU0FBSy9CLFNBQUwsR0FBaUIsT0FBS1IsT0FBTCxDQUFhNEMsTUFBYixDQUFvQkMsTUFBcEIsQ0FBMkJyQyxTQUE1QztBQUNBLFNBQUtDLFdBQUwsR0FBbUIsT0FBS1QsT0FBTCxDQUFhNEMsTUFBYixDQUFvQkMsTUFBcEIsQ0FBMkJwQyxXQUE5QztBQUNBLFNBQUtILEtBQUwsR0FBYTtBQUNad0MsV0FBUSxJQURJO0FBRVozQyxTQUFNLEVBRk07QUFHWm9DLFVBQU8sRUFISztBQUlaUSxnQkFBYSxLQUpEO0FBS1pDLGFBQVUsQ0FMRTtBQU1aekMsU0FBSyxFQU5PO0FBT1o4QixhQUFTO0FBUEcsR0FBYjtBQUoyQjtBQWEzQjs7OzsyQkFxRlE7QUFBQSxPQUNIQSxRQURHLEdBQ1MsS0FBSy9CLEtBRGQsQ0FDSCtCLFFBREc7OztBQUlSLFVBQ0M7QUFBQTtBQUFBLE1BQU8sTUFBSyxRQUFaLEVBQXFCLE9BQU8sRUFBQ1ksV0FBVSxRQUFYLEVBQTVCO0FBQ0M7QUFBQTtBQUFBO0FBQ0M7QUFBQTtBQUFBLFFBQU0sV0FBVSx3QkFBaEIsRUFBeUMsU0FBUyxLQUFLakIsVUFBdkQ7QUFBbUUsK0NBQU8sTUFBSyxNQUFaLEVBQW1CLE1BQUssTUFBeEIsRUFBK0IsV0FBVSxhQUF6QyxFQUF1RCxVQUFVLEtBQUtHLFFBQXRFO0FBQW5FLE1BREQ7QUFHQyw4Q0FBTyxNQUFLLFFBQVosRUFBcUIsTUFBSyxXQUExQixHQUhEO0FBS0M7QUFBQTtBQUFBLFFBQU0sV0FBVSxhQUFoQjtBQUE4QjtBQUFBO0FBQUEsU0FBTSxXQUFVLFFBQWhCO0FBQUE7QUFBQSxPQUE5QjtBQUFxRSwrQ0FBTyxNQUFLLE1BQVosRUFBbUIsTUFBSyxNQUF4QixFQUErQixXQUFVLGFBQXpDLEVBQXVELFVBQVUsS0FBS0EsUUFBdEU7QUFBckUsTUFMRDtBQU1FRSxnQkFBUztBQUFBO0FBQUEsUUFBTSxXQUFVLFdBQWhCO0FBQTZCQTtBQUE3QixNQUFULEdBQXVELEVBTnpEO0FBT0M7QUFBQTtBQUFBLFFBQU0sV0FBVSx5QkFBaEIsRUFBMEMsU0FBUyxLQUFLTixVQUF4RDtBQUFBO0FBQUE7QUFQRCxLQUREO0FBVUM7QUFBQTtBQUFBLE9BQU0sT0FBTyxFQUFDbUIsV0FBVSxFQUFYLEVBQWNDLGNBQWEsQ0FBM0IsRUFBYjtBQUNDO0FBQUE7QUFBQTtBQUNDO0FBQUE7QUFBQTtBQUNDO0FBQUE7QUFBQSxVQUFlLE9BQU8sRUFBQ0MsT0FBTSxPQUFQLEVBQWVILFdBQVUsT0FBekIsRUFBaUNJLFNBQVEsQ0FBekMsRUFBMkNDLGNBQWEsRUFBeEQsRUFBdEI7QUFBbUYsc0RBQVMsT0FBTSwwQkFBZixFQUFzQixNQUFLLFFBQTNCLEVBQW9DLE9BQU8sRUFBM0MsRUFBK0MsUUFBUSxFQUF2RCxFQUEyRCxTQUFTLEtBQUtyRCxJQUF6RTtBQUFuRixRQUREO0FBRUM7QUFBQTtBQUFBLFVBQWUsT0FBTyxFQUFDbUQsT0FBTSxPQUFQLEVBQWVILFdBQVUsTUFBekIsRUFBZ0NJLFNBQVEsQ0FBeEMsRUFBMENFLGFBQVksRUFBdEQsRUFBdEI7QUFBaUYsc0RBQVMsT0FBTSxjQUFmLEVBQW9CLE1BQUssUUFBekIsRUFBa0MsUUFBUSxJQUExQyxFQUFnRCxZQUFZLEtBQUtoQyxRQUFqRSxFQUEyRSxPQUFPLEVBQWxGLEVBQXNGLFFBQVEsRUFBOUYsR0FBakY7QUFBQTtBQUFBO0FBRkQ7QUFERDtBQUREO0FBVkQsSUFERDtBQXFCQTs7Ozs7O0FBckltQnpCLFksQ0FDYjBELFMsR0FBWTtBQUNsQkMsZ0JBQWMsZ0JBQU1DLFNBQU4sQ0FBZ0JDLE1BRFo7QUFFbEJDLG1CQUFpQixnQkFBTUYsU0FBTixDQUFnQkcsS0FGZjtBQUdsQkMsbUJBQWlCLGdCQUFNSixTQUFOLENBQWdCRztBQUhmLEM7QUFEQy9ELFksQ0FNYmlFLFksR0FBZTtBQUNyQm5CLFNBQVEsZ0JBQU1jLFNBQU4sQ0FBZ0JDLE1BQWhCLENBQXVCSztBQURWLEM7a0JBTkZsRSxZOzs7Ozs7OzsrQkFBQUEsWSIsImZpbGUiOiJJbXBvcnREYXRhLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90bWFjX3pjL0NvZGUva3ItYWRtaW4iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHtcblx0Q29tcG9uZW50LFxuXHRQcm9wVHlwZXNcbn0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQge1xuXHRyZWR1eEZvcm0sXG5cdGZvcm1WYWx1ZVNlbGVjdG9yLFxuXHRpbml0aWFsaXplLFxuXHRhcnJheVB1c2gsXG5cdGFycmF5SW5zZXJ0LFxuXHRGaWVsZEFycmF5LFxuXHRjaGFuZ2Vcbn0gZnJvbSAncmVkdXgtZm9ybSc7XG5cbmltcG9ydCB7XG5cdEFjdGlvbnMsXG5cdFN0b3JlLFxuXHRjb25uZWN0XG59IGZyb20gJ2tyL1JlZHV4JztcbmltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCB7XG5cdFNlY3Rpb24sXG5cdEtyRmllbGQsXG5cdEdyaWQsXG5cdFJvdyxcblx0Q29sLFxuXHRNZXNzYWdlLFxuXHRCdXR0b24sXG5cdEtyRGF0ZSxcblx0RG90VGl0bGUsXG5cdEJ1dHRvbkdyb3VwLFxuXHRQYXBlcixcblx0TGlzdEdyb3VwLFxuXHROb3RpZnksXG5cdExpc3RHcm91cEl0ZW1cbn0gZnJvbSAna3ItdWknO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYW5jbGVMZWFkZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuXHRzdGF0aWMgcHJvcFR5cGVzID0ge1xuXHRcdGluaXRpYWxWYWx1ZXM6UmVhY3QuUHJvcFR5cGVzLm9iamVjdCxcblx0XHRjb21tdW5pdHlPcHRpb25zOlJlYWN0LlByb3BUeXBlcy5hcnJheSxcblx0XHRvcmRlclR5cGVPcHRpb25zOlJlYWN0LlByb3BUeXBlcy5hcnJheSxcblx0fVxuXHRzdGF0aWMgY29udGV4dFR5cGVzID0ge1xuXHRcdHJvdXRlcjogUmVhY3QuUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG5cdH1cblxuXHRjb25zdHJ1Y3Rvcihwcm9wcywgY29udGV4dCkge1xuXHRcdHN1cGVyKHByb3BzLCBjb250ZXh0KTtcblx0XHR0aGlzLmNvbXBhbnlJZCA9IHRoaXMuY29udGV4dC5yb3V0ZXIucGFyYW1zLmNvbXBhbnlJZFxuXHRcdHRoaXMuY29tbXVuaXR5SWQgPSB0aGlzLmNvbnRleHQucm91dGVyLnBhcmFtcy5jb21tdW5pdHlJZFxuXHRcdHRoaXMuc3RhdGUgPSB7XG5cdFx0XHRpc0luaXQ6IHRydWUsXG5cdFx0XHRmb3JtOiB7fSxcblx0XHRcdGZpbGVzOiBbXSxcblx0XHRcdGlzVXBsb2FkaW5nOiBmYWxzZSxcblx0XHRcdHByb2dyZXNzOiAwLFxuXHRcdFx0ZmlsZTp7fSxcblx0XHRcdGZpbGVOYW1lOicnXG5cdFx0fVxuXHR9XG5cdHRlc3Q9KCk9Pntcblx0XHRsZXQgX3RoaXMgPSB0aGlzO1xuICAgIFx0dmFyIGZvcm0gPSBuZXcgRm9ybURhdGEoKTtcblx0XHRmb3JtLmFwcGVuZCgnZmlsZScsIHRoaXMuc3RhdGUuZmlsZSk7XG5cdFx0Zm9ybS5hcHBlbmQoJ2NvbXBhbnlJZCcsIHRoaXMuY29tcGFueUlkKTtcblx0XHRmb3JtLmFwcGVuZCgnY29tbXVuaXR5SWQnLCB0aGlzLmNvbW11bml0eUlkKTtcblx0XHRpZighdGhpcy5zdGF0ZS5maWxlLm5hbWUpe1xuXHRcdFx0TWVzc2FnZS5lcnJvcign6K+36YCJ5oup5LiK5Lyg5paH5Lu2Jyk7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0dmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuXHRcdHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHtcblx0XHRcdGlmICh4aHIucmVhZHlTdGF0ZSA9PT0gNCkge1xuXHRcdFx0XHRpZiAoeGhyLnN0YXR1cyA9PT0gMjAwKSB7XG5cdFx0XHRcdFx0Y29uc29sZS5sb2coJ3NzJyx4aHIucmVzcG9uc2UpO1xuXHRcdFx0XHRcdGlmKHhoci5yZXNwb25zZS5jb2RlPT0nLTEnKXtcblx0XHRcdFx0XHRcdE1lc3NhZ2UuZXJyb3IoeGhyLnJlc3BvbnNlLm1lc3NhZ2UpO1xuXHRcdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdFx0TWVzc2FnZS5zdWNjZXNzKFwi5LiK5Lyg5paH5Lu25oiQ5YqfXCIpO1xuICAgICAgICAgICAgXHRcdFx0X3RoaXMub25DYW5jZWwoKTsgXG4gICAgICAgICAgICBcdFx0XHRfdGhpcy5vblN1Ym1pdCgpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcblx0XHRcdFx0fSBlbHNlIHtcbiAgICAgICAgICAgIFx0X3RoaXMub25DYW5jZWwoKTsgXG5cdFx0XHRcdFx0TWVzc2FnZS5lcnJvcign5LiK5Lyg5paH5Lu25aSx6LSlJyk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0eGhyLm9uZXJyb3IgPSBmdW5jdGlvbihlKSB7XG5cdFx0XHRjb25zb2xlLmVycm9yKHhoci5zdGF0dXNUZXh0KTtcblx0XHR9O1xuXHRcdHhoci5vcGVuKCdQT1NUJywgJ2h0dHA6Ly9vcC5rcnNwYWNlLmNuL2FwaS9rcnNwYWNlLWZpbmFuY2Utd2ViL21lbWJlci9tZW1iZXItZXhjZWwnLCB0cnVlKTtcblx0XHR4aHIucmVzcG9uc2VUeXBlID0gJ2pzb24nO1xuXHRcdHhoci5zZW5kKGZvcm0pO1xuXG4gIH1cblxuXHRvbkNhbmNlbD0oKT0+e1xuXHRcdGNvbnN0IHtvbkNhbmNlbH0gPSB0aGlzLnByb3BzO1xuXHRcdG9uQ2FuY2VsICYmIG9uQ2FuY2VsKCk7XG5cdH1cblx0b25TdWJtaXQ9KCk9Pntcblx0XHRjb25zdCB7b25TdWJtaXR9ID0gdGhpcy5wcm9wcztcblx0XHRvblN1Ym1pdCAmJiBvblN1Ym1pdCgpO1xuXHR9XG5cdG9uTG9hZERlbW89KCk9Pntcblx0XHRjb25zdCB7b25Mb2FkRGVtb30gPSB0aGlzLnByb3BzO1xuXHRcdG9uTG9hZERlbW8gJiYgb25Mb2FkRGVtbygpO1xuXHR9XG5cdGltcG9ydEZpbGU9KCk9Pntcblx0XHQvLyBjb25zb2xlLmxvZygnaW1wb3J0RmlsZScpO1xuXHR9XG5cdG9uVG9rZW5TdWNjZXNzPShmb3JtKT0+IHtcblx0XHR0aGlzLnNldFN0YXRlKHtcblx0XHRcdGZvcm1cblx0XHR9KTtcblx0fVxuXG5cdG9uQ2hhbmdlPShldmVudCk9PiB7XG5cblx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXHRcdGxldCBmaWxlTmFtZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXS5uYW1lO1xuXHRcdGxldCBhcnIgPSBldmVudC50YXJnZXQuZmlsZXNbMF0ubmFtZS5zcGxpdCgnLicpO1xuXHRcdGxldCB0eXBlID0gYXJyW2Fyci5sZW5ndGgtMV07XG5cdFx0aWYodHlwZSAhPSAneGxzJyAmJiB0eXBlICE9ICd4bHN4Jyl7XG5cdFx0XHRNZXNzYWdlLmVycm9yKCfkuIrkvKDmlofku7bnsbvlnovkuI3lr7nvvIzor7fpgInmi6kueGxz5oiWLnhsc3gnKTtcblx0XHRcdHJldHVybiA7XG5cdFx0fVxuXHRcdF90aGlzLnNldFN0YXRlKHtcblx0XHRcdGZpbGVOYW1lLFxuXHRcdFx0ZmlsZTpldmVudC50YXJnZXQuZmlsZXNbMF1cblx0XHR9KVxuXG5cblx0fVxuXG5cblxuXG5cblx0cmVuZGVyKCkge1xuXHRcdGxldCB7ZmlsZU5hbWV9ID0gdGhpcy5zdGF0ZTtcblxuXG5cdFx0cmV0dXJuIChcblx0XHRcdDxmb3JtICBuYW1lPSdpbXBvcnQnIHN0eWxlPXt7dGV4dEFsaWduOidjZW50ZXInfX0+XG5cdFx0XHRcdDxkaXY+XG5cdFx0XHRcdFx0PHNwYW4gY2xhc3NOYW1lPSdpbXBvcnQtbG9nbyBpY29uLWV4Y2VsJyBvbkNsaWNrPXt0aGlzLmltcG9ydEZpbGV9PjxpbnB1dCB0eXBlPVwiZmlsZVwiIG5hbWU9XCJmaWxlXCIgY2xhc3NOYW1lPSdjaG9vY2UtZmlsZScgb25DaGFuZ2U9e3RoaXMub25DaGFuZ2V9Lz48L3NwYW4+XG5cdFx0XHRcdFx0XG5cdFx0XHRcdFx0PGlucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwiY29tcGFueUlkXCIgLz5cblxuXHRcdFx0XHRcdDxzcGFuIGNsYXNzTmFtZT0naW1wb3J0LWZvbnQnPjxzcGFuIGNsYXNzTmFtZT1cImNob29jZVwiPuivt+mAieaLqeS4iuS8oOaWh+S7tjwvc3Bhbj48aW5wdXQgdHlwZT1cImZpbGVcIiBuYW1lPVwiZmlsZVwiIGNsYXNzTmFtZT0nY2hvb2NlLWZpbGUnIG9uQ2hhbmdlPXt0aGlzLm9uQ2hhbmdlfS8+PC9zcGFuPlxuXHRcdFx0XHRcdHtmaWxlTmFtZT88c3BhbiBjbGFzc05hbWU9J2ZpbGUtbmFtZSc+e2ZpbGVOYW1lfTwvc3Bhbj46Jyd9XG5cdFx0XHRcdFx0PHNwYW4gY2xhc3NOYW1lPSdsb2FkLWRlbW8gaWNvbi10ZW1wbGF0ZScgb25DbGljaz17dGhpcy5vbkxvYWREZW1vfT7kuIvovb1leGNlbOaooeadvzwvc3Bhbj5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdDxHcmlkIHN0eWxlPXt7bWFyZ2luVG9wOjEwLG1hcmdpbkJvdHRvbTo2fX0+XG5cdFx0XHRcdFx0PFJvdz5cblx0XHRcdFx0XHRcdDxMaXN0R3JvdXA+XG5cdFx0XHRcdFx0XHRcdDxMaXN0R3JvdXBJdGVtIHN0eWxlPXt7d2lkdGg6JzE4MHB4Jyx0ZXh0QWxpZ246J3JpZ2h0JyxwYWRkaW5nOjAscGFkZGluZ1JpZ2h0OjE1fX0+PEJ1dHRvbiAgbGFiZWw9XCLnoa7lrprlr7zlhaVcIiB0eXBlPVwiYnV0dG9uXCIgd2lkdGg9ezkwfSBoZWlnaHQ9ezM0fSBvbkNsaWNrPXt0aGlzLnRlc3R9Lz48L0xpc3RHcm91cEl0ZW0+XG5cdFx0XHRcdFx0XHRcdDxMaXN0R3JvdXBJdGVtIHN0eWxlPXt7d2lkdGg6JzE1MHB4Jyx0ZXh0QWxpZ246J2xlZnQnLHBhZGRpbmc6MCxwYWRkaW5nTGVmdDoxNX19PjxCdXR0b24gIGxhYmVsPVwi5Y+W5raIXCIgdHlwZT1cImJ1dHRvblwiIGNhbmNsZT17dHJ1ZX0gb25Ub3VjaFRhcD17dGhpcy5vbkNhbmNlbH0gd2lkdGg9ezkwfSBoZWlnaHQ9ezM0fS8+IDwvTGlzdEdyb3VwSXRlbT5cblx0XHRcdFx0XHRcdDwvTGlzdEdyb3VwPlxuXHRcdFx0XHRcdCAgPC9Sb3c+XG5cdFx0XHRcdDwvR3JpZD5cblx0XHRcdFx0PC9mb3JtPlxuKVxuXHR9XG59XG4iXX0=